{"version":3,"sources":["../assert.js"],"names":["assert","require","obj1","a","b","obj2","obj3","obj4","Object","create","deepEqual","console","log"],"mappings":";;AAAA,IAAMA,SAASC,QAAQ,QAAR,CAAf;;AAEA,IAAMC,OAAO;AACXC,KAAG;AACDC,OAAG;AADF;AADQ,CAAb;AAKA,IAAMC,OAAO;AACXF,KAAG;AACDC,OAAG;AADF;AADQ,CAAb;AAKA,IAAME,OAAO;AACXH,KAAG;AACDC,OAAG;AADF;AADQ,CAAb;AAKA,IAAMG,OAAOC,OAAOC,MAAP,CAAcP,IAAd,CAAb;;AAEAF,OAAOU,SAAP,CAAiBR,IAAjB,EAAuBA,IAAvB;AACA;;AAEA,IAAOC,IAAGH,OAAOU,SAAP,CAAiBR,IAAjB,EAAuBG,IAAvB,CAAV;AACA;AACA;AACAM,QAAQC,GAAR,CAAY,MAAZ,EAAmBT,CAAnB;;AAEAH,OAAOU,SAAP,CAAiBR,IAAjB,EAAuBI,IAAvB;AACA;;AAEAN,OAAOU,SAAP,CAAiBR,IAAjB,EAAuBK,IAAvB;AACA;AACA","file":"assert.js","sourcesContent":["const assert = require('assert');\n\nconst obj1 = {\n  a: {\n    b: 1\n  }\n};\nconst obj2 = {\n  a: {\n    b: 2\n  }\n};\nconst obj3 = {\n  a: {\n    b: 1\n  }\n};\nconst obj4 = Object.create(obj1);\n\nassert.deepEqual(obj1, obj1);\n// 测试通过，对象与自身相等。\n\nconst  a =assert.deepEqual(obj1, obj2);\n// 抛出 AssertionError: { a: { b: 1 } } deepEqual { a: { b: 2 } }\n// 因为 b 属性的值不同。\nconsole.log('1111',a);\n\nassert.deepEqual(obj1, obj3);\n// 测试通过，两个对象相等。\n\nassert.deepEqual(obj1, obj4);\n// 抛出 AssertionError: { a: { b: 1 } } deepEqual {}\n// 因为不测试原型。"]}