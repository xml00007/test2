{"version":3,"sources":["../../../../Seneca/node_modules/_archy@1.0.0@archy/index.js"],"names":["module","exports","archy","obj","prefix","opts","undefined","chr","s","chars","unicode","label","nodes","lines","split","splitter","length","join","map","node","ix","last","more","prefix_","slice"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,SAASC,KAAT,CAAgBC,GAAhB,EAAqBC,MAArB,EAA6BC,IAA7B,EAAmC;AAChD,QAAID,WAAWE,SAAf,EAA0BF,SAAS,EAAT;AAC1B,QAAI,CAACC,IAAL,EAAWA,OAAO,EAAP;AACX,QAAIE,MAAM,SAANA,GAAM,CAAUC,CAAV,EAAa;AACnB,YAAIC,QAAQ;AACR,iBAAM,GADE;AAER,iBAAM,GAFE;AAGR,iBAAM,GAHE;AAIR,iBAAM,GAJE;AAKR,iBAAM;AALE,SAAZ;AAOA,eAAOJ,KAAKK,OAAL,KAAiB,KAAjB,GAAyBD,MAAMD,CAAN,CAAzB,GAAoCA,CAA3C;AACH,KATD;;AAWA,QAAI,OAAOL,GAAP,KAAe,QAAnB,EAA6BA,MAAM,EAAEQ,OAAQR,GAAV,EAAN;;AAE7B,QAAIS,QAAQT,IAAIS,KAAJ,IAAa,EAAzB;AACA,QAAIC,QAAQ,CAACV,IAAIQ,KAAJ,IAAa,EAAd,EAAkBG,KAAlB,CAAwB,IAAxB,CAAZ;AACA,QAAIC,WAAW,OAAOX,MAAP,IAAiBQ,MAAMI,MAAN,GAAeT,IAAI,GAAJ,CAAf,GAA0B,GAA3C,IAAkD,GAAjE;;AAEA,WAAOH,SACDS,MAAMI,IAAN,CAAWF,QAAX,CADC,GACsB,IADtB,GAEDH,MAAMM,GAAN,CAAU,UAAUC,IAAV,EAAgBC,EAAhB,EAAoB;AAC5B,YAAIC,OAAOD,OAAOR,MAAMI,MAAN,GAAe,CAAjC;AACA,YAAIM,OAAOH,KAAKP,KAAL,IAAcO,KAAKP,KAAL,CAAWI,MAApC;AACA,YAAIO,UAAUnB,UAAUiB,OAAO,GAAP,GAAad,IAAI,GAAJ,CAAvB,IAAmC,GAAjD;;AAEA,eAAOH,UACAiB,OAAOd,IAAI,GAAJ,CAAP,GAAkBA,IAAI,GAAJ,CADlB,IAC8BA,IAAI,GAAJ,CAD9B,IAEAe,OAAOf,IAAI,GAAJ,CAAP,GAAkBA,IAAI,GAAJ,CAFlB,IAE8B,GAF9B,GAGDL,MAAMiB,IAAN,EAAYI,OAAZ,EAAqBlB,IAArB,EAA2BmB,KAA3B,CAAiCpB,OAAOY,MAAP,GAAgB,CAAjD,CAHN;AAKH,KAVC,EAUCC,IAVD,CAUM,EAVN,CAFN;AAcH,CAlCD","file":"index.js","sourcesContent":["module.exports = function archy (obj, prefix, opts) {\n    if (prefix === undefined) prefix = '';\n    if (!opts) opts = {};\n    var chr = function (s) {\n        var chars = {\n            '│' : '|',\n            '└' : '`',\n            '├' : '+',\n            '─' : '-',\n            '┬' : '-'\n        };\n        return opts.unicode === false ? chars[s] : s;\n    };\n    \n    if (typeof obj === 'string') obj = { label : obj };\n    \n    var nodes = obj.nodes || [];\n    var lines = (obj.label || '').split('\\n');\n    var splitter = '\\n' + prefix + (nodes.length ? chr('│') : ' ') + ' ';\n    \n    return prefix\n        + lines.join(splitter) + '\\n'\n        + nodes.map(function (node, ix) {\n            var last = ix === nodes.length - 1;\n            var more = node.nodes && node.nodes.length;\n            var prefix_ = prefix + (last ? ' ' : chr('│')) + ' ';\n            \n            return prefix\n                + (last ? chr('└') : chr('├')) + chr('─')\n                + (more ? chr('┬') : chr('─')) + ' '\n                + archy(node, prefix_, opts).slice(prefix.length + 2)\n            ;\n        }).join('')\n    ;\n};\n"]}