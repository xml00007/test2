{"version":3,"sources":["../../../../../../../../../Seneca/node_modules/_patrun@0.5.1@patrun/node_modules/gex/node_modules/lodash/lang/clone.js"],"names":["baseClone","require","bindCallback","isIterateeCall","clone","value","isDeep","customizer","thisArg","module","exports"],"mappings":";;AAAA,IAAIA,YAAYC,QAAQ,uBAAR,CAAhB;AAAA,IACIC,eAAeD,QAAQ,0BAAR,CADnB;AAAA,IAEIE,iBAAiBF,QAAQ,4BAAR,CAFrB;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA,SAASG,KAAT,CAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,UAA9B,EAA0CC,OAA1C,EAAmD;AACjD,MAAIF,UAAU,OAAOA,MAAP,IAAiB,SAA3B,IAAwCH,eAAeE,KAAf,EAAsBC,MAAtB,EAA8BC,UAA9B,CAA5C,EAAuF;AACrFD,aAAS,KAAT;AACD,GAFD,MAGK,IAAI,OAAOA,MAAP,IAAiB,UAArB,EAAiC;AACpCE,cAAUD,UAAV;AACAA,iBAAaD,MAAb;AACAA,aAAS,KAAT;AACD;AACD,SAAO,OAAOC,UAAP,IAAqB,UAArB,GACHP,UAAUK,KAAV,EAAiBC,MAAjB,EAAyBJ,aAAaK,UAAb,EAAyBC,OAAzB,EAAkC,CAAlC,CAAzB,CADG,GAEHR,UAAUK,KAAV,EAAiBC,MAAjB,CAFJ;AAGD;;AAEDG,OAAOC,OAAP,GAAiBN,KAAjB","file":"clone.js","sourcesContent":["var baseClone = require('../internal/baseClone'),\n    bindCallback = require('../internal/bindCallback'),\n    isIterateeCall = require('../internal/isIterateeCall');\n\n/**\n * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n * otherwise they are assigned by reference. If `customizer` is provided it is\n * invoked to produce the cloned values. If `customizer` returns `undefined`\n * cloning is handled by the method instead. The `customizer` is bound to\n * `thisArg` and invoked with two argument; (value [, index|key, object]).\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n * The enumerable properties of `arguments` objects and objects created by\n * constructors other than `Object` are cloned to plain `Object` objects. An\n * empty object is returned for uncloneable values such as functions, DOM nodes,\n * Maps, Sets, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {Function} [customizer] The function to customize cloning values.\n * @param {*} [thisArg] The `this` binding of `customizer`.\n * @returns {*} Returns the cloned value.\n * @example\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * var shallow = _.clone(users);\n * shallow[0] === users[0];\n * // => true\n *\n * var deep = _.clone(users, true);\n * deep[0] === users[0];\n * // => false\n *\n * // using a customizer callback\n * var el = _.clone(document.body, function(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(false);\n *   }\n * });\n *\n * el === document.body\n * // => false\n * el.nodeName\n * // => BODY\n * el.childNodes.length;\n * // => 0\n */\nfunction clone(value, isDeep, customizer, thisArg) {\n  if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n    isDeep = false;\n  }\n  else if (typeof isDeep == 'function') {\n    thisArg = customizer;\n    customizer = isDeep;\n    isDeep = false;\n  }\n  return typeof customizer == 'function'\n    ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n    : baseClone(value, isDeep);\n}\n\nmodule.exports = clone;\n"]}