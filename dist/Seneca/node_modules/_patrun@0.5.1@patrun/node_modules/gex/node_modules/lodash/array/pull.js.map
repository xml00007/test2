{"version":3,"sources":["../../../../../../../../../Seneca/node_modules/_patrun@0.5.1@patrun/node_modules/gex/node_modules/lodash/array/pull.js"],"names":["baseIndexOf","require","arrayProto","Array","prototype","splice","pull","args","arguments","array","length","index","indexOf","fromIndex","value","call","module","exports"],"mappings":";;AAAA,IAAIA,cAAcC,QAAQ,yBAAR,CAAlB;;AAEA;AACA,IAAIC,aAAaC,MAAMC,SAAvB;;AAEA;AACA,IAAIC,SAASH,WAAWG,MAAxB;;AAEA;;;;;;;;;;;;;;;;;;;;;AAqBA,SAASC,IAAT,GAAgB;AACd,MAAIC,OAAOC,SAAX;AAAA,MACIC,QAAQF,KAAK,CAAL,CADZ;;AAGA,MAAI,EAAEE,SAASA,MAAMC,MAAjB,CAAJ,EAA8B;AAC5B,WAAOD,KAAP;AACD;AACD,MAAIE,QAAQ,CAAZ;AAAA,MACIC,UAAUZ,WADd;AAAA,MAEIU,SAASH,KAAKG,MAFlB;;AAIA,SAAO,EAAEC,KAAF,GAAUD,MAAjB,EAAyB;AACvB,QAAIG,YAAY,CAAhB;AAAA,QACIC,QAAQP,KAAKI,KAAL,CADZ;;AAGA,WAAO,CAACE,YAAYD,QAAQH,KAAR,EAAeK,KAAf,EAAsBD,SAAtB,CAAb,IAAiD,CAAC,CAAzD,EAA4D;AAC1DR,aAAOU,IAAP,CAAYN,KAAZ,EAAmBI,SAAnB,EAA8B,CAA9B;AACD;AACF;AACD,SAAOJ,KAAP;AACD;;AAEDO,OAAOC,OAAP,GAAiBX,IAAjB","file":"pull.js","sourcesContent":["var baseIndexOf = require('../internal/baseIndexOf');\n\n/** Used for native method references. */\nvar arrayProto = Array.prototype;\n\n/** Native method references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes all provided values from `array` using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * **Note:** Unlike `_.without`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {Array} array The array to modify.\n * @param {...*} [values] The values to remove.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [1, 2, 3, 1, 2, 3];\n *\n * _.pull(array, 2, 3);\n * console.log(array);\n * // => [1, 1]\n */\nfunction pull() {\n  var args = arguments,\n      array = args[0];\n\n  if (!(array && array.length)) {\n    return array;\n  }\n  var index = 0,\n      indexOf = baseIndexOf,\n      length = args.length;\n\n  while (++index < length) {\n    var fromIndex = 0,\n        value = args[index];\n\n    while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n      splice.call(array, fromIndex, 1);\n    }\n  }\n  return array;\n}\n\nmodule.exports = pull;\n"]}