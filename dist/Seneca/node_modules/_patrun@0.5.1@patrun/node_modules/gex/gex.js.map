{"version":3,"sources":["../../../../../../Seneca/node_modules/_patrun@0.5.1@patrun/node_modules/gex/gex.js"],"names":["root","previous_gex","gex","has_require","require","_","Error","Gex","gexspec","self","dodgy","obj","isNull","isNaN","isUndefined","clean","gexexp","gexstr","match","str","hasmatch","gexstrs","keys","gexmap","i","length","exec","noConflict","on","isString","isNumber","isBoolean","isDate","isRegExp","isArray","isArguments","out","push","isObject","outobj","p","hasOwnProperty","esc","replace","re","gs","escregexp","RegExp","clone","restr","toString","desc","inspect","each","gexobj","exports","module","call"],"mappings":"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","file":"gex.js","sourcesContent":["/* Copyright (c) 2011-2015 Richard Rodger, MIT License */\n/* jshint node:true, asi:true, eqnull:true */\n\n;(function() {\n  \"use strict\";\n\n  var root         = this\n  var previous_gex = root.gex\n\n  var has_require = typeof require !== 'undefined'\n\n  var _ = root._ || has_require && require('lodash')\n  if( !_ ) \n    throw new Error('gex requires underscore, see http://underscorejs.org')\n\n\n  function Gex(gexspec) {\n    var self = this\n\n    function dodgy(obj) {\n      return ( _.isNull(obj) || _.isNaN(obj) || _.isUndefined(obj) );\n    }\n\n    function clean(gexexp) {\n      var gexstr = ''+gexexp\n      if( _.isNull(gexexp) || _.isNaN(gexexp) || _.isUndefined(gexexp) ) {\n        gexstr = ''\n      } \n      return gexstr;\n    }\n\n    function match(str) {\n      str = ''+str\n      var hasmatch = false\n      var gexstrs = _.keys(gexmap)\n\n      for(var i = 0; i < gexstrs.length && !hasmatch; i++ ) {\n        hasmatch = !!gexmap[gexstrs[i]].exec(str)\n      }\n      return hasmatch;\n    }\n\n\n    self.noConflict = function() {\n      root.gex = previous_gex;\n      return self;\n    }\n\n\n    self.on = function(obj) {\n      if( _.isString(obj) || \n          _.isNumber(obj) || \n          _.isBoolean(obj) || \n          _.isDate(obj) || \n          _.isRegExp(obj) \n        ) \n      {\n        return match(obj) ? obj : null;\n      }\n\n      else if( _.isArray(obj) || _.isArguments(obj)\n             ) {\n               var out = []\n               for( var i = 0; i < obj.length; i++ ) {\n                 if( !dodgy(obj[i]) && match(obj[i]) ) {\n                   out.push(obj[i])\n                 }\n               }\n               return out;\n             }\n\n      else if( _.isObject(obj) ) {\n        var outobj = {}\n        for( var p in obj ) {\n          if( obj.hasOwnProperty(p) ) {\n            if( match(p) ) {\n              outobj[p] = obj[p]\n            }\n          }\n        }\n        return outobj;\n      }\n\n      else {\n        return null;\n      }\n    }\n\n    self.esc = function(gexexp) {\n      var gexstr = clean(gexexp)\n      gexstr = gexstr.replace(/\\*/g,'**')\n      gexstr = gexstr.replace(/\\?/g,'*?')\n      return gexstr;\n    }\n\n\n    self.re = function(gs) {\n      if( '' === gs || gs ) {\n        gs = self.escregexp(gs)\n\n        // use [\\s\\S] instead of . to match newlines\n        gs = gs.replace(/\\\\\\*/g,'[\\\\s\\\\S]*')\n        gs = gs.replace(/\\\\\\?/g,'[\\\\s\\\\S]')\n\n        // escapes ** and *?\n        gs = gs.replace(/\\[\\\\s\\\\S\\]\\*\\[\\\\s\\\\S\\]\\*/g,'\\\\\\*')\n        gs = gs.replace(/\\[\\\\s\\\\S\\]\\*\\[\\\\s\\\\S\\]/g,'\\\\\\?')\n\n        gs = '^'+gs+'$'\n\n        return new RegExp(gs);\n      }\n      else {\n        var gexstrs = _.keys(gexmap)\n        return 1 == gexstrs.length ? gexmap[gexstrs[0]] : _.clone(gexmap);\n      }\n    }\n\n    self.escregexp = function(restr) {\n      return restr ? (''+restr).replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\") : '';\n    }\n\n    self.toString = function() {\n      return desc ? desc : (desc = 'gex['+_.keys(gexmap)+']' )\n    }\n\n    self.inspect = function() {\n      return self.toString()\n    }\n\n    var gexstrs = _.isArray(gexspec) ? gexspec : [gexspec]\n    var gexmap  = {}\n    var desc\n\n\n    _.each( gexstrs, function(str) {\n      str = clean(str)\n      var re = self.re(str)\n      gexmap[str]=re\n    })\n  }\n\n\n  function gex(gexspec) {\n    var gexobj = new Gex(gexspec)\n    return gexobj;\n  }\n  gex.Gex = Gex\n\n\n  if( typeof exports !== 'undefined' ) {\n    if( typeof module !== 'undefined' && module.exports ) {\n      exports = module.exports = gex\n    }\n    exports.gex = gex\n  } \n  else {\n    root.gex = gex\n  }\n\n}).call(this);\n"]}