{"version":3,"sources":["../../../../Seneca/node_modules/_eraro@0.4.1@eraro/eraro.js"],"names":["util","require","_","module","exports","eraro","options","msgprefix","prefix","isString","package","packaje","callmodule","msgmap","inspect","markers","filename","push","errormaker","ex","code","msg","details","internalex","isError","override","arguments","message","isObject","buildmessage","err","Error","orig$","message$","p","orig","stack","callpoint","error","isArray","out","lines","split","done","i","line_loop","length","line","found","j","indexOf","substring","originalmsg","valmap","extend","valstrmap","each","val","key","eval","e","tm","template","ReferenceError","m","exec","toString","depth"],"mappings":"AAAA;AACA;;AAGA;AACA;AACA;;AAGA;;AACA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;;AAGA;AACA,IAAIC,IAAID,QAAQ,QAAR,CAAR;;AAGA;AACAE,OAAOC,OAAP,GAAiBC,KAAjB;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,KAAT,CAAgBC,OAAhB,EAA0B;AACxBA,YAAUA,WAAW,EAArB;;AAEA,MAAIC,YAAa,UAAUD,QAAQE,MAAlB,GAA2B,EAA3B,GACVN,EAAEO,QAAF,CAAWH,QAAQE,MAAnB,IAA6BF,QAAQE,MAArC,GAA8CN,EAAEO,QAAF,CAAWH,QAAQI,OAAnB,IAA8BJ,QAAQI,OAAR,GAAgB,IAA9C,GAAqD,EAD1G;;AAGA,MAAIC,UAAaL,QAAQI,OAAR,IAAmB,SAApC;AACA,MAAIE,aAAaN,QAAQH,MAAR,IAAmBA,MAApC;AACA,MAAIU,SAAaP,QAAQO,MAAR,IAAmB,EAApC;AACA,MAAIC,UAAa,QAAQR,QAAQQ,OAAhB,GAA0B,IAA1B,GAAiC,CAAC,CAACR,QAAQQ,OAA5D;;AAEA,MAAIC,UAAa,CAACZ,OAAOa,QAAR,CAAjB;;AAEA,MAAIA,WAAWJ,WAAWI,QAA1B;AACA,MAAIA,QAAJ,EAAeD,QAAQE,IAAR,CAAaD,QAAb;;AAGf,MAAIE,aAAa,SAAbA,UAAa,CAAUC,EAAV,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,OAAzB,EAAmC;AAClD,QAAIC,aAAa,KAAjB;;AAEA,QAAIvB,KAAKwB,OAAL,CAAaL,EAAb,CAAJ,EAAuB;AACrB,UAAIA,GAAGd,KAAH,IAAY,CAACC,QAAQmB,QAAzB,EAAoC,OAAON,EAAP;AACrC,KAFD,MAGK;AACHI,mBAAa,IAAb;AACAJ,WAAa,IAAb;AACAC,aAAaM,UAAU,CAAV,CAAb;AACAL,YAAaK,UAAU,CAAV,CAAb;AACAJ,gBAAaI,UAAU,CAAV,CAAb;AACD;;AAEDN,WAAOlB,EAAEO,QAAF,CAAWW,IAAX,IAAmBA,IAAnB,GACJD,KACAA,GAAGC,IAAH,GAAUD,GAAGC,IAAb,GACAD,GAAGQ,OAAH,GAAaR,GAAGQ,OAAhB,GACA,SAHA,GAGY,SAJf;;AAMAL,cAAUpB,EAAE0B,QAAF,CAAWN,OAAX,IAAsBA,OAAtB,GACPpB,EAAE0B,QAAF,CAAWP,GAAX,KAAmB,CAACnB,EAAEO,QAAF,CAAWY,GAAX,CAApB,GAAsCA,GAAtC,GAA4C,EAD/C;;AAGAA,UAAMnB,EAAEO,QAAF,CAAWY,GAAX,IAAkBA,GAAlB,GAAwB,IAA9B;AACAA,UAAMQ,aAAavB,OAAb,EAAqBe,GAArB,EAAyBR,MAAzB,EAAgCN,SAAhC,EAA0CO,OAA1C,EAAkDM,IAAlD,EAAuDE,OAAvD,EAA+DH,EAA/D,CAAN;;AAGA,QAAIW,MAAM,IAAIC,KAAJ,CAAUV,GAAV,CAAV;;AAEA,QAAIF,EAAJ,EAAS;AACPG,cAAQU,KAAR,GAAmB,QAAQV,QAAQU,KAAhB,GAAwBb,EAAxB,GAA6BG,QAAQU,KAAxD;AACAV,cAAQW,QAAR,GAAmB,QAAQX,QAAQW,QAAhB,GAA2Bd,GAAGQ,OAA9B,GAAwCL,QAAQW,QAAnE;;AAEA;AACA,WAAK,IAAIC,CAAT,IAAcf,EAAd,EAAmB;AACjBW,YAAII,CAAJ,IAASf,GAAGe,CAAH,CAAT;AACD;AACF;;AAEDJ,QAAIzB,KAAJ,GAAgB,IAAhB;;AAEAyB,QAAIK,IAAJ,GAAgBhB,EAAhB,CAzCkD,CAyC/B;AACnBW,QAAIV,IAAJ,GAAgBA,IAAhB;AACAU,QAAInB,OAAJ,IAAgB,IAAhB;AACAmB,QAAIpB,OAAJ,GAAgBC,OAAhB;AACAmB,QAAIT,GAAJ,GAAgBA,GAAhB;AACAS,QAAIR,OAAJ,GAAgBA,OAAhB;;AAEAQ,QAAIM,KAAJ,GAAgBjB,KAAKA,GAAGiB,KAAR,GAAgBN,IAAIM,KAApC;AACAN,QAAIO,SAAJ,GAAgBA,UAAWP,GAAX,EAAiBf,OAAjB,CAAhB;;AAEA,WAAOe,GAAP;AACD,GApDD;;AAsDAZ,aAAWmB,SAAX,GAAuBA,SAAvB;;AAEA,SAAOnB,UAAP;AACD;;AAID;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASmB,SAAT,CAAoBC,KAApB,EAA2BvB,OAA3B,EAAqC;AACnCA,YAAUb,EAAEqC,OAAF,CAAUxB,OAAV,IAAqBA,OAArB,GAA+B,EAAzC;;AAEA,MAAIqB,QAAQE,QAAQA,MAAMF,KAAd,GAAsB,IAAlC;AACA,MAAII,MAAQ,EAAZ;;AAEA,MAAIJ,KAAJ,EAAY;AACV,QAAIK,QAAQL,MAAMM,KAAN,CAAY,IAAZ,CAAZ;AACA,QAAIC,OAAQ,KAAZ;AACA,QAAIC,CAAJ;;AAEAC,eACA,KAAKD,IAAI,CAAT,EAAYA,IAAIH,MAAMK,MAAtB,EAA8BF,GAA9B,EAAoC;AAClC,UAAIG,OAAON,MAAMG,CAAN,CAAX;;AAEA,UAAII,QAAQ,KAAZ;AACA,WAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIlC,QAAQ+B,MAA5B,EAAoCG,GAApC,EAA0C;AACxC,YAAI/C,EAAEO,QAAF,CAAYM,QAAQkC,CAAR,CAAZ,CAAJ,EAA+B;AAC7BD,kBAAU,CAAC,CAAD,IAAMD,KAAKG,OAAL,CAAcnC,QAAQkC,CAAR,CAAd,CAAhB;AACA,cAAID,KAAJ,EAAY;AACb;AACF;;AAED,UAAI,CAACA,KAAL,EAAa,MAAMH,SAAN;AACd;;AAEDL,UAAMtC,EAAEO,QAAF,CAAWgC,MAAMG,CAAN,CAAX,IAAuBH,MAAMG,CAAN,EAASO,SAAT,CAAmB,CAAnB,CAAvB,GAA+CX,GAArD;AACD;;AAED,SAAOA,GAAP;AACD;;AAID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASX,YAAT,CAAsBvB,OAAtB,EAA8Be,GAA9B,EAAkCR,MAAlC,EAAyCN,SAAzC,EAAmDO,OAAnD,EAA2DM,IAA3D,EAAgEE,OAAhE,EAAwEH,EAAxE,EAA4E;AAC1E,MAAIQ,UAAUpB,aAAaL,EAAEO,QAAF,CAAWY,GAAX,IAAkBA,GAAlB,GACAnB,EAAEO,QAAF,CAAWI,OAAOO,IAAP,CAAX,IAA2BP,OAAOO,IAAP,CAA3B,GACAD,KAAKiC,YAAY9C,QAAQmB,QAApB,EAA6BN,EAA7B,CAAL,GAAwCC,IAFrD,CAAd;;AAIA;AACA,MAAIiC,SAASnD,EAAEoD,MAAF,CAAS,EAAT,EAAYhC,OAAZ,EAAoB,EAACF,MAAKA,IAAN,EAApB,CAAb;;AAEA;AACA;AACA;;AAEA,MAAImC,YAAY,EAACvD,MAAKA,IAAN,EAAWE,GAAEA,CAAb,EAAhB;AACAA,IAAEsD,IAAF,CAAOH,MAAP,EAAc,UAASI,GAAT,EAAaC,GAAb,EAAiB;AAC7B;AACA,QAAI;AAAEC,WAAK,SAAOD,GAAP,GAAW,GAAhB;AAAsB,KAA5B,CAA6B,OAAME,CAAN,EAAS;AAAEF,YAAMA,MAAI,GAAV;AAAe;AACvD,QAAI,EAAC,aAAY,CAAb,EAAe,OAAM,CAArB,GAAwBA,GAAxB,CAAJ,EAAmC;AAAEA,YAAMA,MAAI,GAAV;AAAe;AACpDH,cAAUG,GAAV,IAAiB5C,WAAW,CAACZ,EAAEO,QAAF,CAAWgD,GAAX,CAAZ,GAA8BzD,KAAKc,OAAL,CAAa2C,GAAb,CAA9B,GAAkDA,GAAnE;AACD,GALD;;AAOA,MAAId,OAAO,KAAX;AACA,SAAO,CAACA,IAAR,EAAe;AACb,QAAI;AACF,UAAIkB,KAAK3D,EAAE4D,QAAF,CAAYnC,OAAZ,CAAT;AACAA,gBAAUkC,GAAGN,SAAH,CAAV;AACAZ,aAAO,IAAP;AACD,KAJD,CAKA,OAAMiB,CAAN,EAAS;AACP,UAAGA,aAAaG,cAAhB,EAAgC;AAC9B,YAAIC,IAAI,6BAA6BC,IAA7B,CAAkCL,EAAEM,QAAF,EAAlC,CAAR;AACA,YAAIF,KAAKA,EAAE,CAAF,CAAT,EAAgB;AACdT,oBAAUS,EAAE,CAAF,CAAV,IAAgB,MAAIA,EAAE,CAAF,CAAJ,GAAS,IAAzB;AACD,SAFD,MAGKrB,OAAO,IAAP;AACN;;AAED;AACA;AATA,WAUK;AACHA,iBAAO,IAAP;AACAhB,oBAAUA,UAAQ,UAAR,GAAmB3B,KAAKc,OAAL,CAAauC,MAAb,EAAoB,EAACc,OAAM,CAAP,EAApB,CAAnB,GACR,mBADQ,GACYP,CADtB;AAED;AACF;AACF;;AAED,SAAOjC,OAAP;AACD;;AAID,SAASyB,WAAT,CAAsB3B,QAAtB,EAAgCN,EAAhC,EAAqC;AACnC,MAAI,CAACA,EAAL,EAAU;;AAEV,MAAIM,YAAYN,GAAGd,KAAf,IAAwBc,GAAGgB,IAA/B,EAAsC,OAAOhB,GAAGgB,IAAH,CAAQR,OAAf;;AAEtC,SAAOR,GAAGQ,OAAV;AACD","file":"eraro.js","sourcesContent":["/* Copyright (c) 2014-2015 Richard Rodger, MIT License */\n/* jshint node:true, asi:true, eqnull:true */\n\n\n// Create JavaScript Error objects with code strings, context details,\n// and templated messages.\n\"use strict\";\n\n\n// #### System modules\nvar util = require('util')\n\n\n// #### External modules\nvar _ = require('lodash')\n\n\n// #### Exports\nmodule.exports = eraro\n\n\n// #### Create an _eraro_ function\n// Parameters:\n// \n//   * _options_ : (optional) Object; properties:\n//      * _package_ : (optional) String; package name to mark Error objects\n//      * _prefix_  : (optional) Boolean/String; If false, then no prefix is used; If not defined, the package name is used\n//      * _module_  : (optional) Object; _module_ object to use as starting point for _require_ calls\n//      * _msgmap_  : (optional) Object; map codes to message templates \n//      * _inspect_ : (optional) Boolean; If true, _util.inspect_ is called on values; default: true.\n//\n// Returns: Function\n//\n// The created function has parameters:\n//  \n//   * _exception_ : (optional) Error; the original exception to be wrapped\n//   * _code_ : (optional) String; code value\n//   * _message_ : (optional) String; error message, will be processed as a template\n//   * _details_ : (optional) Object; contextual details of the error, used to insert details into message\n//\n// and returns an Error object (to be thrown or used in a callback, as needed).\n// The returned Error object has the following additional properties:\n//   \n//   * _code_: String; the code string\n//   * _package_: String; the package name\n//   * _**package-name**_: Boolean (true); a convenience marker for the package\n//   * _msg_: String; the generated message, may differ from original exception message (if any)\n//   * _details_: Object; contextual details of error\n//   * _callpoint_: String; first line of stacktrace that is external to eraro and calling module \nfunction eraro( options ) {\n  options = options || {}\n\n  var msgprefix  = false === options.prefix ? '' : \n        (_.isString(options.prefix) ? options.prefix : _.isString(options.package) ? options.package+': ' : '')\n\n  var packaje    = options.package || 'unknown'\n  var callmodule = options.module  || module\n  var msgmap     = options.msgmap  || {}\n  var inspect    = null == options.inspect ? true : !!options.inspect\n\n  var markers    = [module.filename]\n\n  var filename = callmodule.filename\n  if( filename ) markers.push(filename);\n\n\n  var errormaker = function( ex, code, msg, details ) {\n    var internalex = false\n\n    if( util.isError(ex) ) {\n      if( ex.eraro && !options.override ) return ex;\n    }\n    else {\n      internalex = true\n      ex         = null\n      code       = arguments[0]\n      msg        = arguments[1]\n      details    = arguments[2]\n    }\n\n    code = _.isString(code) ? code : \n      (ex ? \n       ex.code ? ex.code : \n       ex.message ? ex.message : \n       'unknown' : 'unknown')\n\n    details = _.isObject(details) ? details : \n      (_.isObject(msg) && !_.isString(msg) ? msg : {})\n\n    msg = _.isString(msg) ? msg : null\n    msg = buildmessage(options,msg,msgmap,msgprefix,inspect,code,details,ex)\n\n\n    var err = new Error(msg)\n    \n    if( ex ) { \n      details.orig$    = null == details.orig$ ? ex : details.orig$\n      details.message$ = null == details.message$ ? ex.message : details.message$\n\n      // drag along properties from original exception\n      for( var p in ex ) {\n        err[p] = ex[p]\n      }\n    }\n\n    err.eraro     = true\n\n    err.orig      = ex // orig\n    err.code      = code\n    err[packaje]  = true\n    err.package   = packaje\n    err.msg       = msg\n    err.details   = details\n\n    err.stack     = ex ? ex.stack : err.stack\n    err.callpoint = callpoint( err , markers )\n\n    return err;\n  }\n\n  errormaker.callpoint = callpoint\n\n  return errormaker;\n}\n\n\n\n// #### Find the first external stack trace line.\n// Parameters:\n// \n//   * _error_ : (optional) Error; provides the stack\n//   * _markers_ : (optional) Array[String]; ignore lines containing these strings\n//\n// Returns: String; stack trace line, with indent removed\nfunction callpoint( error, markers ) {\n  markers = _.isArray(markers) ? markers : []\n\n  var stack = error ? error.stack : null\n  var out   = ''\n\n  if( stack ) {\n    var lines = stack.split('\\n')\n    var done  = false\n    var i\n\n    line_loop:\n    for( i = 1; i < lines.length; i++ ) {\n      var line = lines[i]\n\n      var found = false\n      for( var j = 0; j < markers.length; j++ ) {\n        if( _.isString( markers[j] ) ) {\n          found = ( -1 != line.indexOf( markers[j] ) )\n          if( found ) break;\n        }\n      }\n\n      if( !found ) break line_loop;\n    }\n\n    out = _.isString(lines[i]) ? lines[i].substring(4) : out\n  }\n\n  return out\n}\n\n\n\n// #### Build the message string from a template by inserting details\n// Uses the underscore template function with default settings. \n// The original message (_msg_) has priority over messages from the _msgmap_.\n// If no message can be found, the _code_ is used as a message.\n// If an insert property is not defined, it is replaced with _[name?]_ in the message.\n// As a convenience, _util_ and ___ are made available in the templates.\n//\n// Parameters:\n// \n//   * _msg_ : (required) String; message template\n//   * _msgmap_ : (required) Object; map codes to message templates\n//   * _msgprefix_: (required) String; prefix for all messages, useful as indentification of error origin\n//   * _code_: (required) String; error code\n//   * _details_: (required) Object; error details providing context\n//\n// Returns: String; human readable error message\nfunction buildmessage(options,msg,msgmap,msgprefix,inspect,code,details,ex) {\n  var message = msgprefix + (_.isString(msg) ? msg : \n                             _.isString(msgmap[code]) ? msgmap[code] : \n                             ex ? originalmsg(options.override,ex) : code )\n\n  // These are the inserts.\n  var valmap = _.extend({},details,{code:code})\n\n  // Workaround to prevent underscore blowing up if properties are not\n  // found.  Reserved words and undefined need to be suffixed with $\n  // in the template interpolates.\n\n  var valstrmap = {util:util,_:_}\n  _.each(valmap,function(val,key){\n    /* jshint evil:true */\n    try { eval('var '+key+';') } catch(e) { key = key+'$' }\n    if( {'undefined':1,'NaN':1}[key] ) { key = key+'$' }\n    valstrmap[key] = inspect && !_.isString(val) ? util.inspect(val) : val\n  })\n\n  var done = false\n  while( !done ) {\n    try {\n      var tm = _.template( message )\n      message = tm(valstrmap)\n      done = true\n    }\n    catch(e) {\n      if(e instanceof ReferenceError) {\n        var m = /ReferenceError:\\s+(.*?)\\s+/.exec(e.toString())\n        if( m && m[1] ) {\n          valstrmap[m[1]]=\"[\"+m[1]+\"?]\"\n        }\n        else done = true\n      }\n\n      // Some other error - give up and just dump the properties at\n      // the end of the template.\n      else {\n        done = true\n        message = message+' VALUES:'+util.inspect(valmap,{depth:2})+\n          ' TEMPLATE ERROR: '+e\n      }\n    }\n  }\n\n  return message\n}\n\n\n\nfunction originalmsg( override, ex ) {\n  if( !ex ) return;\n\n  if( override && ex.eraro && ex.orig ) return ex.orig.message;\n\n  return ex.message;\n}\n"]}