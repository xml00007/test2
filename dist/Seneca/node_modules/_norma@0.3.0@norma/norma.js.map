{"version":3,"sources":["../../../../Seneca/node_modules/_norma@0.3.0@norma/norma.js"],"names":["util","require","_","error","package","parser","defopts","onfail","desclen","specmap","compile","spec","specdef","respec","parse_spec","reindex","index","restr","i","forEach","entry","push","type","or","length","count","mark","mod","re","RegExp","join","parse","e","message","column","line","processargs","options","rawargs","args","Array","prototype","slice","call","argdesc","describe","outslots","exec","descargs","out","object","j","k","indexspec","val","m","found","iname","name","istar","iplus","mI","desc","arg","isString","isNaN","parseFloat","Infinity","isNumber","isBoolean","isFunction","isArray","isRegExp","isDate","isArguments","isError","isNull","isUndefined","isObject","each","str","inspect","substring","handle","extend","arguments","module","exports","toString"],"mappings":"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","file":"norma.js","sourcesContent":["/* Copyright (c) 2014-2015 Richard Rodger, MIT License */\n/* jshint node:true, asi:true, eqnull:true */\n\"use strict\";\n\n\n// TODO: allow _ and $ in named args !!! doh!\n\n\n// #### System modules\nvar util = require('util')\n\n\n// #### External modules\nvar _     = require('lodash')\nvar error = require('eraro')({package:'norma'})\n\n\n// #### Internal modules\nvar parser = require('./norma-parser')\n\n\n// Default options.\nvar defopts = {\n  onfail:'throw',\n  desclen:33\n}\n\n\n// Cache of previously seen type specs.\nvar specmap = {}\n\n\n// #### Compile type spec into a regexp\nfunction compile( spec ) {\n  if( null == spec ) throw error('no_spec', 'no argument specification');\n\n  var specdef = specmap[spec]\n  if( null != specdef ) return specdef;\n\n  var respec = parse_spec( spec )\n\n  // Build regex.\n  var reindex = []\n  var index   = 1\n  var restr = ['^']\n  var i = 0\n  respec.forEach(function(entry){\n    restr.push('(')\n\n    if( entry.type.or && 0 < entry.type.or.length ) {\n      var count = 1\n\n      restr.push('(')\n      restr.push(entry.type.mark)\n      restr.push(')')\n\n      entry.type.or.forEach(function(or){\n        restr.push('|')\n        restr.push('(')\n        restr.push(or[1])\n        count++\n        restr.push(')')\n      })\n\n      if( '?' == entry.mod ) {\n        restr.push('|[UNA]?')\n      }\n\n      reindex[i]={index:index}\n      index += count\n    }\n\n    else {\n      if( '?' == entry.mod ) {\n        restr.push('[UNA'+entry.type.mark+']?')\n      }\n      else {\n        restr.push(entry.type.mark);\n        restr.push(entry.mod || '')\n      }\n\n      reindex[i]={index:index}\n    }\n\n    reindex[i].mod = entry.mod\n    restr.push(')')\n    index++\n    i++\n  })\n  restr.push('$')\n\n  var re = new RegExp(restr.join(''))\n  specdef = specmap[spec] = {re:re,spec:spec,respec:respec,reindex:reindex}\n\n  return specdef;\n}\n\n\nfunction parse_spec( spec ) {\n  try {\n    return parser.parse( spec )\n  }\n  catch(e) {\n    throw error('parse', e.message+'; spec:\"'+spec+\n                '\", col:'+e.column+', line:'+e.line)\n  }\n}\n\n\n// #### Create output array or object with organised argument values.\nfunction processargs( specdef, options, rawargs ) {\n  var args = Array.prototype.slice.call(rawargs||[])\n  var argdesc = describe( args )\n\n  // Match the spec regexp against the argument types regexp.\n  var outslots = specdef.re.exec(argdesc)\n  if( !outslots ) {\n    if( 'throw' == options.onfail ) {\n      throw error(\n        'invalid_arguments', \n        'invalid arguments; expected: \"'+specdef.spec+\n          '\", was: ['+argdesc+']; values: '+descargs(args,options),\n        {args:args,specdef:specdef,options:options})\n    }\n    else return null;\n  }\n\n  // Build the organised output.\n  // Need to do some index housekeeping as regexp has additional groups.\n  var out = specdef.respec.object ? {} : []\n  for(var i = 0, j = 0, k = 0; i < specdef.reindex.length; i++ ) {\n    var indexspec = specdef.reindex[i]\n    var val = void 0\n\n    if( !specdef.respec.object ) {\n      out[k] = val\n    }\n    \n    if( null != indexspec.index) {\n      var m = outslots[indexspec.index]\n      var found = ('' !== m)\n      if( found ) {\n        var iname = specdef.respec[i].name\n        var istar = '*' === specdef.respec[i].mod\n        var iplus = '+' === specdef.respec[i].mod\n\n        if( 0 === m.length && iplus ) {\n          throw error(\n            'invalid_arguments', \n            'invalid arguments; expected: \"'+specdef.spec+\n              '\", was: ['+argdesc+']; values: '+descargs(args,options),\n            {args:args,specdef:specdef,options:options})\n        }\n        if( 1 == m.length ) {\n          val = args[j]\n          j++\n\n          if( !specdef.respec.object ) {\n            out[k] = val\n          }\n\n          if( null != iname ) {\n            if( istar || iplus ) {\n              (out[iname] = (out[iname] || [])).push(val)\n            }\n            else {\n              out[specdef.respec[i].name] = val\n            }\n          }\n\n          k++\n        }\n        else if( 1 < m.length ) {\n          for( var mI = 0; mI < m.length; mI++ ) {\n            val = args[j]\n            j++\n\n            if( !specdef.respec.object ) {\n              out[k] = val\n            }\n\n            if( null != iname ) {\n              (out[iname] = (out[iname] || [])).push(val)\n            }\n\n            k++\n          }\n        }\n      }\n      else {\n        if( !specdef.respec.object ) {\n          out[k] = void 0\n        }\n        k++\n      }\n    }\n  }\n\n  return out;\n}\n\n\n\n// #### Create a type description of the arguments array\n// Example: [\"a\",1] => \"si\".\nfunction describe(args) {\n  var desc = []\n\n  args.forEach(function(arg){\n\n    if( _.isString(arg) ) {\n      desc.push('s')\n    }\n\n    // Need to check for integer first.\n    else if( (!isNaN(arg) && ((arg | 0) === parseFloat(arg))) ) {\n      desc.push('i')\n    }\n    else if( _.isNaN(arg) ) {\n      desc.push('A')\n    }\n    else if( Infinity === arg ) {\n      desc.push('Y')\n    }\n    else if( _.isNumber(arg) ) {\n      desc.push('n')\n    }\n    else if( _.isBoolean(arg) ) {\n      desc.push('b')\n    }\n    else if( _.isFunction(arg) ) {\n      desc.push('f')\n    }\n    else if( _.isArray(arg) ) {\n      desc.push('a')\n    }\n    else if( _.isRegExp(arg) ) {\n      desc.push('r')\n    }\n    else if( _.isDate(arg) ) {\n      desc.push('d')\n    }\n    else if( _.isArguments(arg) ) {\n      desc.push('g')\n    }\n\n    // Use standard Node.js API for _isError_ test.\n    else if( util.isError(arg) ) {\n      desc.push('e')\n    }\n\n    else if( _.isNull(arg) ) {\n      desc.push('N')\n    }\n    else if( _.isUndefined(arg) ) {\n      desc.push('U')\n    }\n    else if( _.isObject(arg) ) {\n      desc.push('o')\n    }\n\n    // \"q\" means an unknown type.\n    else {\n      desc.push('q')\n    }\n  })\n\n  return desc.join('')\n}\n\n\n// #### Describe arguments array for error message\n// Avoids over long messages.\nfunction descargs( args, options ) {\n  var desc = []\n  \n  _.each(args,function(arg){\n    var str = util.inspect(arg).substring(0,options.desclen)\n    desc.push(str)\n  })\n\n  return desc\n}\n\n\n\n// #### Perform the actual organisation.\n// Options are ... optional.\nfunction handle( specdef, options, rawargs ) {\n  if( _.isArguments(options) || _.isArray(options ) ) {\n    rawargs = options\n    options = null\n  }\n  options = null == options ? defopts : _.extend({},defopts,options)\n\n  if( null == rawargs ) {\n    throw error(\n      'init', \n      'no arguments variable; expected norma( \"...\", arguments ), '+\n        'or <compiled>( arguments )',\n      {arguments:arguments}\n    )\n  }\n  else return processargs(specdef, options, rawargs)\n}\n\n\n\n// #### Primary API\nmodule.exports = function( spec, options, rawargs ) {\n  var specdef = compile( spec )\n  return handle( specdef, options, rawargs )\n}\n\n\n\n// #### Compile spec for later use\n// _toString_ shows you the constructed regexp (for debugging).\nmodule.exports.compile = function( spec ) {\n  var specdef = compile( spec )\n\n  var out = function( options, rawargs ) {\n    return handle( specdef, options, rawargs )\n  }\n  out.toString = function() {\n    return util.inspect({spec:specdef.spec, re:''+specdef.re})\n  }\n  return out\n}\n\n"]}