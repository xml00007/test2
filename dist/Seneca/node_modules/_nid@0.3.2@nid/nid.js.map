{"version":3,"sources":["../../../../Seneca/node_modules/_nid@0.3.2@nid/nid.js"],"names":["defaults","length","alphabet","curses","default_cursed","cursing","typestr","Object","prototype","toString","call","substring","split","Array","isArray","code","codelower","toLowerCase","i","indexOf","match","generate","opts","cursed","numchars","time","Date","getTime","sb","c","Math","floor","random","push","join","make","forEach","setting","hex","HEX","exclude","nid","arg0","arguments","__defaults","module","exports"],"mappings":"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","file":"nid.js","sourcesContent":["/* Copyright (c) 2013 Richard Rodger, MIT License */\n\"use strict\";\n\n\n/* Module API:\n * var nid = require('nid')\n * nid() // returns new random id as string\n * nid({options}) // returns new nid function that generates ids using options\n *\n * options are:\n *   length: number of chars in id\n *   alphabet: alphabet to take chars from randomly\n *   hex, HEX: alphabet is hexadecimal, lower or upper case respectively (overrides alphabet)\n *   exclude,curses: (exlude overrides)\n *     array of strings - excluded if contained in id\n *     string: comma-separated list of curses\n *     regexp: excluded if matches\n *     function: return true if exluded, first arg is id\n *\n */\n\n\nvar defaults = {\n    length: 6,\n    alphabet: '0123456789abcdefghijklmnopqrstuvwxyz',\n\n    // function hidecurse(s) {o='';for(i=0; i<s.length; i++){o+='\\\\'+'x'+(s.charCodeAt(i).toString(16).toUpperCase())} console.log(o); }\n    curses: [\n        '\\x66\\x75\\x63\\x6B',\n        '\\x73\\x68\\x69\\x74',\n        '\\x70\\x69\\x73\\x73',\n        '\\x63\\x75\\x6E\\x74',\n        '\\x74\\x69\\x74\\x73',\n        '\\x6E\\x69\\x67\\x67\\x65\\x72',\n        '\\x63\\x6F\\x63\\x6B\\x73\\x75\\x63\\x6B\\x65\\x72',\n        '\\x6D\\x6F\\x74\\x68\\x65\\x72\\x66\\x75\\x63\\x6B\\x65\\x72',\n        '\\x66\\x72\\x61\\x63\\x6B',\n        '\\x66\\x72\\x61\\x6B'\n    ],\n\n}\n\n\nvar default_cursed = cursing(defaults.curses)\n\n    function cursing(curses) {\n        var typestr = Object.prototype.toString.call(curses).substring(8)\n\n        if ('String]' == typestr) {\n            curses = curses.split(/\\s*,\\s*/)\n        }\n\n        if (Array.isArray(curses)) {\n            return function (code) {\n                var codelower = code.toLowerCase()\n                for (var i = 0; i < curses.length; i++) {\n                    if (-1 != codelower.indexOf(curses[i])) {\n                        return true\n                    }\n                }\n            }\n        } else {\n            if ('Function]' == typestr) {\n                return curses\n            } else if ('RegExp]' == typestr) {\n                return function (code) {\n                    return !!code.match(curses)\n                }\n            } else return function () {\n                return false\n            }\n        }\n    }\n\n\n    function generate(opts) {\n        var length = defaults.length\n        var alphabet = defaults.alphabet\n        var cursed = default_cursed\n\n        if (opts) {\n            length = opts.length || length\n            alphabet = opts.alphabet || alphabet\n            cursed = opts.curses ? cursing(opts.curses) : cursed\n        }\n\n        var code = null,\n            numchars = alphabet.length\n\n            do {\n                var time = new Date().getTime()\n                var sb = []\n                for (var i = 0; i < length; i++) {\n                    var c = Math.floor((time * Math.random()) % numchars)\n                    sb.push(alphabet[c])\n                }\n                code = sb.join('')\n            }\n            while (cursed(code))\n\n            return code\n    }\n\n\n    function make(opts) {\n        ['length', 'alphabet', 'curses'].forEach(function (setting) {\n            opts[setting] = (void 0 === opts[setting]) ? defaults[setting] : opts[setting]\n        })\n\n        if (opts.hex) {\n            opts.alphabet = '0123456789abcdef'\n        } else if (opts.HEX) {\n            opts.alphabet = '0123456789ABCDEF'\n        }\n\n        // exclude overrides curses\n        opts.curses = opts.exclude || opts.curses\n\n        return function () {\n            return generate(opts)\n        }\n    }\n\n\n    function nid() {\n        var arg0 = arguments[0]\n        if (arg0) {\n            var typestr = Object.prototype.toString.call(arg0).substring(8)\n\n            if (\"Number]\" === typestr) {\n                return generate({\n                    length: arg0\n                })\n            } else if (\"Object]\" === typestr) {\n                return make(arg0)\n            } else return generate();\n        }\n\n\n        return generate()\n    }\n\nnid.__defaults = defaults\n\n\nmodule.exports = nid\n"]}