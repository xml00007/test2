{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/chain/tap.js"],"names":["tap","value","interceptor","thisArg","call","module","exports"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAASA,GAAT,CAAaC,KAAb,EAAoBC,WAApB,EAAiCC,OAAjC,EAA0C;AACxCD,cAAYE,IAAZ,CAAiBD,OAAjB,EAA0BF,KAA1B;AACA,SAAOA,KAAP;AACD;;AAEDI,OAAOC,OAAP,GAAiBN,GAAjB","file":"tap.js","sourcesContent":["/**\n * This method invokes `interceptor` and returns `value`. The interceptor is\n * bound to `thisArg` and invoked with one argument; (value). The purpose of\n * this method is to \"tap into\" a method chain in order to perform operations\n * on intermediate results within the chain.\n *\n * @static\n * @memberOf _\n * @category Chain\n * @param {*} value The value to provide to `interceptor`.\n * @param {Function} interceptor The function to invoke.\n * @param {*} [thisArg] The `this` binding of `interceptor`.\n * @returns {*} Returns `value`.\n * @example\n *\n * _([1, 2, 3])\n *  .tap(function(array) {\n *    array.pop();\n *  })\n *  .reverse()\n *  .value();\n * // => [2, 1]\n */\nfunction tap(value, interceptor, thisArg) {\n  interceptor.call(thisArg, value);\n  return value;\n}\n\nmodule.exports = tap;\n"]}