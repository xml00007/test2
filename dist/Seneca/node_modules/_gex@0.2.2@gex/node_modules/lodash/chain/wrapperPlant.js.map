{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/chain/wrapperPlant.js"],"names":["baseLodash","require","wrapperClone","wrapperPlant","value","result","parent","clone","previous","__wrapped__","module","exports"],"mappings":";;AAAA,IAAIA,aAAaC,QAAQ,wBAAR,CAAjB;AAAA,IACIC,eAAeD,QAAQ,0BAAR,CADnB;;AAGA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAASE,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MAAIC,MAAJ;AAAA,MACIC,SAAS,IADb;;AAGA,SAAOA,kBAAkBN,UAAzB,EAAqC;AACnC,QAAIO,QAAQL,aAAaI,MAAb,CAAZ;AACA,QAAID,MAAJ,EAAY;AACVG,eAASC,WAAT,GAAuBF,KAAvB;AACD,KAFD,MAEO;AACLF,eAASE,KAAT;AACD;AACD,QAAIC,WAAWD,KAAf;AACAD,aAASA,OAAOG,WAAhB;AACD;AACDD,WAASC,WAAT,GAAuBL,KAAvB;AACA,SAAOC,MAAP;AACD;;AAEDK,OAAOC,OAAP,GAAiBR,YAAjB","file":"wrapperPlant.js","sourcesContent":["var baseLodash = require('../internal/baseLodash'),\n    wrapperClone = require('../internal/wrapperClone');\n\n/**\n * Creates a clone of the chained sequence planting `value` as the wrapped value.\n *\n * @name plant\n * @memberOf _\n * @category Chain\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * var array = [1, 2];\n * var wrapped = _(array).map(function(value) {\n *   return Math.pow(value, 2);\n * });\n *\n * var other = [3, 4];\n * var otherWrapped = wrapped.plant(other);\n *\n * otherWrapped.value();\n * // => [9, 16]\n *\n * wrapped.value();\n * // => [1, 4]\n */\nfunction wrapperPlant(value) {\n  var result,\n      parent = this;\n\n  while (parent instanceof baseLodash) {\n    var clone = wrapperClone(parent);\n    if (result) {\n      previous.__wrapped__ = clone;\n    } else {\n      result = clone;\n    }\n    var previous = clone;\n    parent = parent.__wrapped__;\n  }\n  previous.__wrapped__ = value;\n  return result;\n}\n\nmodule.exports = wrapperPlant;\n"]}