{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/chain/thru.js"],"names":["thru","value","interceptor","thisArg","call","module","exports"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;AAqBA,SAASA,IAAT,CAAcC,KAAd,EAAqBC,WAArB,EAAkCC,OAAlC,EAA2C;AACzC,SAAOD,YAAYE,IAAZ,CAAiBD,OAAjB,EAA0BF,KAA1B,CAAP;AACD;;AAEDI,OAAOC,OAAP,GAAiBN,IAAjB","file":"thru.js","sourcesContent":["/**\n * This method is like `_.tap` except that it returns the result of `interceptor`.\n *\n * @static\n * @memberOf _\n * @category Chain\n * @param {*} value The value to provide to `interceptor`.\n * @param {Function} interceptor The function to invoke.\n * @param {*} [thisArg] The `this` binding of `interceptor`.\n * @returns {*} Returns the result of `interceptor`.\n * @example\n *\n * _('  abc  ')\n *  .chain()\n *  .trim()\n *  .thru(function(value) {\n *    return [value];\n *  })\n *  .value();\n * // => ['abc']\n */\nfunction thru(value, interceptor, thisArg) {\n  return interceptor.call(thisArg, value);\n}\n\nmodule.exports = thru;\n"]}