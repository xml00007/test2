{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/object/forIn.js"],"names":["baseFor","require","createForIn","forIn","module","exports"],"mappings":";;AAAA,IAAIA,UAAUC,QAAQ,qBAAR,CAAd;AAAA,IACIC,cAAcD,QAAQ,yBAAR,CADlB;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,IAAIE,QAAQD,YAAYF,OAAZ,CAAZ;;AAEAI,OAAOC,OAAP,GAAiBF,KAAjB","file":"forIn.js","sourcesContent":["var baseFor = require('../internal/baseFor'),\n    createForIn = require('../internal/createForIn');\n\n/**\n * Iterates over own and inherited enumerable properties of an object invoking\n * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n * with three arguments: (value, key, object). Iteratee functions may exit\n * iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [thisArg] The `this` binding of `iteratee`.\n * @returns {Object} Returns `object`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forIn(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n */\nvar forIn = createForIn(baseFor);\n\nmodule.exports = forIn;\n"]}