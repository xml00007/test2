{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/object/set.js"],"names":["isIndex","require","isKey","isObject","toPath","set","object","path","value","pathKey","index","length","lastIndex","nested","key","module","exports"],"mappings":";;AAAA,IAAIA,UAAUC,QAAQ,qBAAR,CAAd;AAAA,IACIC,QAAQD,QAAQ,mBAAR,CADZ;AAAA,IAEIE,WAAWF,QAAQ,kBAAR,CAFf;AAAA,IAGIG,SAASH,QAAQ,oBAAR,CAHb;;AAKA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAASI,GAAT,CAAaC,MAAb,EAAqBC,IAArB,EAA2BC,KAA3B,EAAkC;AAChC,MAAIF,UAAU,IAAd,EAAoB;AAClB,WAAOA,MAAP;AACD;AACD,MAAIG,UAAWF,OAAO,EAAtB;AACAA,SAAQD,OAAOG,OAAP,KAAmB,IAAnB,IAA2BP,MAAMK,IAAN,EAAYD,MAAZ,CAA5B,GAAmD,CAACG,OAAD,CAAnD,GAA+DL,OAAOG,IAAP,CAAtE;;AAEA,MAAIG,QAAQ,CAAC,CAAb;AAAA,MACIC,SAASJ,KAAKI,MADlB;AAAA,MAEIC,YAAYD,SAAS,CAFzB;AAAA,MAGIE,SAASP,MAHb;;AAKA,SAAOO,UAAU,IAAV,IAAkB,EAAEH,KAAF,GAAUC,MAAnC,EAA2C;AACzC,QAAIG,MAAMP,KAAKG,KAAL,CAAV;AACA,QAAIP,SAASU,MAAT,CAAJ,EAAsB;AACpB,UAAIH,SAASE,SAAb,EAAwB;AACtBC,eAAOC,GAAP,IAAcN,KAAd;AACD,OAFD,MAEO,IAAIK,OAAOC,GAAP,KAAe,IAAnB,EAAyB;AAC9BD,eAAOC,GAAP,IAAcd,QAAQO,KAAKG,QAAQ,CAAb,CAAR,IAA2B,EAA3B,GAAgC,EAA9C;AACD;AACF;AACDG,aAASA,OAAOC,GAAP,CAAT;AACD;AACD,SAAOR,MAAP;AACD;;AAEDS,OAAOC,OAAP,GAAiBX,GAAjB","file":"set.js","sourcesContent":["var isIndex = require('../internal/isIndex'),\n    isKey = require('../internal/isKey'),\n    isObject = require('../lang/isObject'),\n    toPath = require('../internal/toPath');\n\n/**\n * Sets the property value of `path` on `object`. If a portion of `path`\n * does not exist it is created.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to augment.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, 'x[0].y.z', 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nfunction set(object, path, value) {\n  if (object == null) {\n    return object;\n  }\n  var pathKey = (path + '');\n  path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = path[index];\n    if (isObject(nested)) {\n      if (index == lastIndex) {\n        nested[key] = value;\n      } else if (nested[key] == null) {\n        nested[key] = isIndex(path[index + 1]) ? [] : {};\n      }\n    }\n    nested = nested[key];\n  }\n  return object;\n}\n\nmodule.exports = set;\n"]}