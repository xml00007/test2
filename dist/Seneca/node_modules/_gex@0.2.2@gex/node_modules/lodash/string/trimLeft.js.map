{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/string/trimLeft.js"],"names":["baseToString","require","charsLeftIndex","isIterateeCall","trimmedLeftIndex","trimLeft","string","chars","guard","value","slice","module","exports"],"mappings":";;AAAA,IAAIA,eAAeC,QAAQ,0BAAR,CAAnB;AAAA,IACIC,iBAAiBD,QAAQ,4BAAR,CADrB;AAAA,IAEIE,iBAAiBF,QAAQ,4BAAR,CAFrB;AAAA,IAGIG,mBAAmBH,QAAQ,8BAAR,CAHvB;;AAKA;;;;;;;;;;;;;;;;;;AAkBA,SAASI,QAAT,CAAkBC,MAAlB,EAA0BC,KAA1B,EAAiCC,KAAjC,EAAwC;AACtC,MAAIC,QAAQH,MAAZ;AACAA,WAASN,aAAaM,MAAb,CAAT;AACA,MAAI,CAACA,MAAL,EAAa;AACX,WAAOA,MAAP;AACD;AACD,MAAIE,QAAQL,eAAeM,KAAf,EAAsBF,KAAtB,EAA6BC,KAA7B,CAAR,GAA8CD,SAAS,IAA3D,EAAiE;AAC/D,WAAOD,OAAOI,KAAP,CAAaN,iBAAiBE,MAAjB,CAAb,CAAP;AACD;AACD,SAAOA,OAAOI,KAAP,CAAaR,eAAeI,MAAf,EAAwBC,QAAQ,EAAhC,CAAb,CAAP;AACD;;AAEDI,OAAOC,OAAP,GAAiBP,QAAjB","file":"trimLeft.js","sourcesContent":["var baseToString = require('../internal/baseToString'),\n    charsLeftIndex = require('../internal/charsLeftIndex'),\n    isIterateeCall = require('../internal/isIterateeCall'),\n    trimmedLeftIndex = require('../internal/trimmedLeftIndex');\n\n/**\n * Removes leading whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trimLeft('  abc  ');\n * // => 'abc  '\n *\n * _.trimLeft('-_-abc-_-', '_-');\n * // => 'abc-_-'\n */\nfunction trimLeft(string, chars, guard) {\n  var value = string;\n  string = baseToString(string);\n  if (!string) {\n    return string;\n  }\n  if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n    return string.slice(trimmedLeftIndex(string));\n  }\n  return string.slice(charsLeftIndex(string, (chars + '')));\n}\n\nmodule.exports = trimLeft;\n"]}