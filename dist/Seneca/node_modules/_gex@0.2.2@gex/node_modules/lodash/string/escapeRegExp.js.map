{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/string/escapeRegExp.js"],"names":["baseToString","require","escapeRegExpChar","reRegExpChars","reHasRegExpChars","RegExp","source","escapeRegExp","string","test","replace","module","exports"],"mappings":";;AAAA,IAAIA,eAAeC,QAAQ,0BAAR,CAAnB;AAAA,IACIC,mBAAmBD,QAAQ,8BAAR,CADvB;;AAGA;;;;AAIA,IAAIE,gBAAgB,wEAApB;AAAA,IACIC,mBAAmBC,OAAOF,cAAcG,MAArB,CADvB;;AAGA;;;;;;;;;;;;;;AAcA,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;AAC5BA,aAASR,aAAaQ,MAAb,CAAT;AACA,WAAQA,UAAUJ,iBAAiBK,IAAjB,CAAsBD,MAAtB,CAAX,GACHA,OAAOE,OAAP,CAAeP,aAAf,EAA8BD,gBAA9B,CADG,GAEFM,UAAU,MAFf;AAGD;;AAEDG,OAAOC,OAAP,GAAiBL,YAAjB","file":"escapeRegExp.js","sourcesContent":["var baseToString = require('../internal/baseToString'),\n    escapeRegExpChar = require('../internal/escapeRegExpChar');\n\n/**\n * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n */\nvar reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n    reHasRegExpChars = RegExp(reRegExpChars.source);\n\n/**\n * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n */\nfunction escapeRegExp(string) {\n  string = baseToString(string);\n  return (string && reHasRegExpChars.test(string))\n    ? string.replace(reRegExpChars, escapeRegExpChar)\n    : (string || '(?:)');\n}\n\nmodule.exports = escapeRegExp;\n"]}