{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/string/trunc.js"],"names":["baseToString","require","isIterateeCall","isObject","isRegExp","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","reFlags","trunc","string","options","guard","undefined","length","omission","separator","end","result","slice","search","match","newEnd","substring","global","RegExp","source","exec","lastIndex","index","indexOf","lastIndexOf","module","exports"],"mappings":";;AAAA,IAAIA,eAAeC,QAAQ,0BAAR,CAAnB;AAAA,IACIC,iBAAiBD,QAAQ,4BAAR,CADrB;AAAA,IAEIE,WAAWF,QAAQ,kBAAR,CAFf;AAAA,IAGIG,WAAWH,QAAQ,kBAAR,CAHf;;AAKA;AACA,IAAII,uBAAuB,EAA3B;AAAA,IACIC,yBAAyB,KAD7B;;AAGA;AACA,IAAIC,UAAU,MAAd;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,SAASC,KAAT,CAAeC,MAAf,EAAuBC,OAAvB,EAAgCC,KAAhC,EAAuC;AACrC,MAAIA,SAAST,eAAeO,MAAf,EAAuBC,OAAvB,EAAgCC,KAAhC,CAAb,EAAqD;AACnDD,cAAUE,SAAV;AACD;AACD,MAAIC,SAASR,oBAAb;AAAA,MACIS,WAAWR,sBADf;;AAGA,MAAII,WAAW,IAAf,EAAqB;AACnB,QAAIP,SAASO,OAAT,CAAJ,EAAuB;AACrB,UAAIK,YAAY,eAAeL,OAAf,GAAyBA,QAAQK,SAAjC,GAA6CA,SAA7D;AACAF,eAAS,YAAYH,OAAZ,GAAuB,CAACA,QAAQG,MAAT,IAAmB,CAA1C,GAA+CA,MAAxD;AACAC,iBAAW,cAAcJ,OAAd,GAAwBV,aAAaU,QAAQI,QAArB,CAAxB,GAAyDA,QAApE;AACD,KAJD,MAIO;AACLD,eAAS,CAACH,OAAD,IAAY,CAArB;AACD;AACF;AACDD,WAAST,aAAaS,MAAb,CAAT;AACA,MAAII,UAAUJ,OAAOI,MAArB,EAA6B;AAC3B,WAAOJ,MAAP;AACD;AACD,MAAIO,MAAMH,SAASC,SAASD,MAA5B;AACA,MAAIG,MAAM,CAAV,EAAa;AACX,WAAOF,QAAP;AACD;AACD,MAAIG,SAASR,OAAOS,KAAP,CAAa,CAAb,EAAgBF,GAAhB,CAAb;AACA,MAAID,aAAa,IAAjB,EAAuB;AACrB,WAAOE,SAASH,QAAhB;AACD;AACD,MAAIV,SAASW,SAAT,CAAJ,EAAyB;AACvB,QAAIN,OAAOS,KAAP,CAAaF,GAAb,EAAkBG,MAAlB,CAAyBJ,SAAzB,CAAJ,EAAyC;AACvC,UAAIK,KAAJ;AAAA,UACIC,MADJ;AAAA,UAEIC,YAAYb,OAAOS,KAAP,CAAa,CAAb,EAAgBF,GAAhB,CAFhB;;AAIA,UAAI,CAACD,UAAUQ,MAAf,EAAuB;AACrBR,oBAAYS,OAAOT,UAAUU,MAAjB,EAAyB,CAAClB,QAAQmB,IAAR,CAAaX,SAAb,KAA2B,EAA5B,IAAkC,GAA3D,CAAZ;AACD;AACDA,gBAAUY,SAAV,GAAsB,CAAtB;AACA,aAAQP,QAAQL,UAAUW,IAAV,CAAeJ,SAAf,CAAhB,EAA4C;AAC1CD,iBAASD,MAAMQ,KAAf;AACD;AACDX,eAASA,OAAOC,KAAP,CAAa,CAAb,EAAgBG,UAAU,IAAV,GAAiBL,GAAjB,GAAuBK,MAAvC,CAAT;AACD;AACF,GAfD,MAeO,IAAIZ,OAAOoB,OAAP,CAAed,SAAf,EAA0BC,GAA1B,KAAkCA,GAAtC,EAA2C;AAChD,QAAIY,QAAQX,OAAOa,WAAP,CAAmBf,SAAnB,CAAZ;AACA,QAAIa,QAAQ,CAAC,CAAb,EAAgB;AACdX,eAASA,OAAOC,KAAP,CAAa,CAAb,EAAgBU,KAAhB,CAAT;AACD;AACF;AACD,SAAOX,SAASH,QAAhB;AACD;;AAEDiB,OAAOC,OAAP,GAAiBxB,KAAjB","file":"trunc.js","sourcesContent":["var baseToString = require('../internal/baseToString'),\n    isIterateeCall = require('../internal/isIterateeCall'),\n    isObject = require('../lang/isObject'),\n    isRegExp = require('../lang/isRegExp');\n\n/** Used as default options for `_.trunc`. */\nvar DEFAULT_TRUNC_LENGTH = 30,\n    DEFAULT_TRUNC_OMISSION = '...';\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Truncates `string` if it's longer than the given maximum string length.\n * The last characters of the truncated string are replaced with the omission\n * string which defaults to \"...\".\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to truncate.\n * @param {Object|number} [options] The options object or maximum string length.\n * @param {number} [options.length=30] The maximum string length.\n * @param {string} [options.omission='...'] The string to indicate text is omitted.\n * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n * @returns {string} Returns the truncated string.\n * @example\n *\n * _.trunc('hi-diddly-ho there, neighborino');\n * // => 'hi-diddly-ho there, neighbo...'\n *\n * _.trunc('hi-diddly-ho there, neighborino', 24);\n * // => 'hi-diddly-ho there, n...'\n *\n * _.trunc('hi-diddly-ho there, neighborino', {\n *   'length': 24,\n *   'separator': ' '\n * });\n * // => 'hi-diddly-ho there,...'\n *\n * _.trunc('hi-diddly-ho there, neighborino', {\n *   'length': 24,\n *   'separator': /,? +/\n * });\n * // => 'hi-diddly-ho there...'\n *\n * _.trunc('hi-diddly-ho there, neighborino', {\n *   'omission': ' [...]'\n * });\n * // => 'hi-diddly-ho there, neig [...]'\n */\nfunction trunc(string, options, guard) {\n  if (guard && isIterateeCall(string, options, guard)) {\n    options = undefined;\n  }\n  var length = DEFAULT_TRUNC_LENGTH,\n      omission = DEFAULT_TRUNC_OMISSION;\n\n  if (options != null) {\n    if (isObject(options)) {\n      var separator = 'separator' in options ? options.separator : separator;\n      length = 'length' in options ? (+options.length || 0) : length;\n      omission = 'omission' in options ? baseToString(options.omission) : omission;\n    } else {\n      length = +options || 0;\n    }\n  }\n  string = baseToString(string);\n  if (length >= string.length) {\n    return string;\n  }\n  var end = length - omission.length;\n  if (end < 1) {\n    return omission;\n  }\n  var result = string.slice(0, end);\n  if (separator == null) {\n    return result + omission;\n  }\n  if (isRegExp(separator)) {\n    if (string.slice(end).search(separator)) {\n      var match,\n          newEnd,\n          substring = string.slice(0, end);\n\n      if (!separator.global) {\n        separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n      }\n      separator.lastIndex = 0;\n      while ((match = separator.exec(substring))) {\n        newEnd = match.index;\n      }\n      result = result.slice(0, newEnd == null ? end : newEnd);\n    }\n  } else if (string.indexOf(separator, end) != end) {\n    var index = result.lastIndexOf(separator);\n    if (index > -1) {\n      result = result.slice(0, index);\n    }\n  }\n  return result + omission;\n}\n\nmodule.exports = trunc;\n"]}