{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/string/unescape.js"],"names":["baseToString","require","unescapeHtmlChar","reEscapedHtml","reHasEscapedHtml","RegExp","source","unescape","string","test","replace","module","exports"],"mappings":";;AAAA,IAAIA,eAAeC,QAAQ,0BAAR,CAAnB;AAAA,IACIC,mBAAmBD,QAAQ,8BAAR,CADvB;;AAGA;AACA,IAAIE,gBAAgB,+BAApB;AAAA,IACIC,mBAAmBC,OAAOF,cAAcG,MAArB,CADvB;;AAGA;;;;;;;;;;;;;;;;;;AAkBA,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;AACxBA,aAASR,aAAaQ,MAAb,CAAT;AACA,WAAQA,UAAUJ,iBAAiBK,IAAjB,CAAsBD,MAAtB,CAAX,GACHA,OAAOE,OAAP,CAAeP,aAAf,EAA8BD,gBAA9B,CADG,GAEHM,MAFJ;AAGD;;AAEDG,OAAOC,OAAP,GAAiBL,QAAjB","file":"unescape.js","sourcesContent":["var baseToString = require('../internal/baseToString'),\n    unescapeHtmlChar = require('../internal/unescapeHtmlChar');\n\n/** Used to match HTML entities and HTML characters. */\nvar reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n    reHasEscapedHtml = RegExp(reEscapedHtml.source);\n\n/**\n * The inverse of `_.escape`; this method converts the HTML entities\n * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n * corresponding characters.\n *\n * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n * entities use a third-party library like [_he_](https://mths.be/he).\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to unescape.\n * @returns {string} Returns the unescaped string.\n * @example\n *\n * _.unescape('fred, barney, &amp; pebbles');\n * // => 'fred, barney, & pebbles'\n */\nfunction unescape(string) {\n  string = baseToString(string);\n  return (string && reHasEscapedHtml.test(string))\n    ? string.replace(reEscapedHtml, unescapeHtmlChar)\n    : string;\n}\n\nmodule.exports = unescape;\n"]}