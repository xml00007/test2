{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/function/delay.js"],"names":["baseDelay","require","restParam","delay","func","wait","args","module","exports"],"mappings":";;AAAA,IAAIA,YAAYC,QAAQ,uBAAR,CAAhB;AAAA,IACIC,YAAYD,QAAQ,aAAR,CADhB;;AAGA;;;;;;;;;;;;;;;;;;AAkBA,IAAIE,QAAQD,UAAU,UAASE,IAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA2B;AAC/C,SAAON,UAAUI,IAAV,EAAgBC,IAAhB,EAAsBC,IAAtB,CAAP;AACD,CAFW,CAAZ;;AAIAC,OAAOC,OAAP,GAAiBL,KAAjB","file":"delay.js","sourcesContent":["var baseDelay = require('../internal/baseDelay'),\n    restParam = require('./restParam');\n\n/**\n * Invokes `func` after `wait` milliseconds. Any additional arguments are\n * provided to `func` when it is invoked.\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} func The function to delay.\n * @param {number} wait The number of milliseconds to delay invocation.\n * @param {...*} [args] The arguments to invoke the function with.\n * @returns {number} Returns the timer id.\n * @example\n *\n * _.delay(function(text) {\n *   console.log(text);\n * }, 1000, 'later');\n * // => logs 'later' after one second\n */\nvar delay = restParam(function(func, wait, args) {\n  return baseDelay(func, wait, args);\n});\n\nmodule.exports = delay;\n"]}