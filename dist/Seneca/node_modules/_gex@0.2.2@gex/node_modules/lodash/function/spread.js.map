{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/function/spread.js"],"names":["FUNC_ERROR_TEXT","spread","func","TypeError","array","apply","module","exports"],"mappings":";;AAAA;AACA,IAAIA,kBAAkB,qBAAtB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AACpB,MAAI,OAAOA,IAAP,IAAe,UAAnB,EAA+B;AAC7B,UAAM,IAAIC,SAAJ,CAAcH,eAAd,CAAN;AACD;AACD,SAAO,UAASI,KAAT,EAAgB;AACrB,WAAOF,KAAKG,KAAL,CAAW,IAAX,EAAiBD,KAAjB,CAAP;AACD,GAFD;AAGD;;AAEDE,OAAOC,OAAP,GAAiBN,MAAjB","file":"spread.js","sourcesContent":["/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that invokes `func` with the `this` binding of the created\n * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n *\n * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} func The function to spread arguments over.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var say = _.spread(function(who, what) {\n *   return who + ' says ' + what;\n * });\n *\n * say(['fred', 'hello']);\n * // => 'fred says hello'\n *\n * // with a Promise\n * var numbers = Promise.all([\n *   Promise.resolve(40),\n *   Promise.resolve(36)\n * ]);\n *\n * numbers.then(_.spread(function(x, y) {\n *   return x + y;\n * }));\n * // => a Promise of 76\n */\nfunction spread(func) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function(array) {\n    return func.apply(this, array);\n  };\n}\n\nmodule.exports = spread;\n"]}