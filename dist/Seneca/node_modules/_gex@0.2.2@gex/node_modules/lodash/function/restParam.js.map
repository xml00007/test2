{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/function/restParam.js"],"names":["FUNC_ERROR_TEXT","nativeMax","Math","max","restParam","func","start","TypeError","undefined","length","args","arguments","index","rest","Array","call","otherArgs","apply","module","exports"],"mappings":";;AAAA;AACA,IAAIA,kBAAkB,qBAAtB;;AAEA;AACA,IAAIC,YAAYC,KAAKC,GAArB;;AAEA;;;;;;;;;;;;;;;;;;;;;;AAsBA,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,KAAzB,EAAgC;AAC9B,MAAI,OAAOD,IAAP,IAAe,UAAnB,EAA+B;AAC7B,UAAM,IAAIE,SAAJ,CAAcP,eAAd,CAAN;AACD;AACDM,UAAQL,UAAUK,UAAUE,SAAV,GAAuBH,KAAKI,MAAL,GAAc,CAArC,GAA2C,CAACH,KAAD,IAAU,CAA/D,EAAmE,CAAnE,CAAR;AACA,SAAO,YAAW;AAChB,QAAII,OAAOC,SAAX;AAAA,QACIC,QAAQ,CAAC,CADb;AAAA,QAEIH,SAASR,UAAUS,KAAKD,MAAL,GAAcH,KAAxB,EAA+B,CAA/B,CAFb;AAAA,QAGIO,OAAOC,MAAML,MAAN,CAHX;;AAKA,WAAO,EAAEG,KAAF,GAAUH,MAAjB,EAAyB;AACvBI,WAAKD,KAAL,IAAcF,KAAKJ,QAAQM,KAAb,CAAd;AACD;AACD,YAAQN,KAAR;AACE,WAAK,CAAL;AAAQ,eAAOD,KAAKU,IAAL,CAAU,IAAV,EAAgBF,IAAhB,CAAP;AACR,WAAK,CAAL;AAAQ,eAAOR,KAAKU,IAAL,CAAU,IAAV,EAAgBL,KAAK,CAAL,CAAhB,EAAyBG,IAAzB,CAAP;AACR,WAAK,CAAL;AAAQ,eAAOR,KAAKU,IAAL,CAAU,IAAV,EAAgBL,KAAK,CAAL,CAAhB,EAAyBA,KAAK,CAAL,CAAzB,EAAkCG,IAAlC,CAAP;AAHV;AAKA,QAAIG,YAAYF,MAAMR,QAAQ,CAAd,CAAhB;AACAM,YAAQ,CAAC,CAAT;AACA,WAAO,EAAEA,KAAF,GAAUN,KAAjB,EAAwB;AACtBU,gBAAUJ,KAAV,IAAmBF,KAAKE,KAAL,CAAnB;AACD;AACDI,cAAUV,KAAV,IAAmBO,IAAnB;AACA,WAAOR,KAAKY,KAAL,CAAW,IAAX,EAAiBD,SAAjB,CAAP;AACD,GArBD;AAsBD;;AAEDE,OAAOC,OAAP,GAAiBf,SAAjB","file":"restParam.js","sourcesContent":["/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that invokes `func` with the `this` binding of the\n * created function and arguments from `start` and beyond provided as an array.\n *\n * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var say = _.restParam(function(what, names) {\n *   return what + ' ' + _.initial(names).join(', ') +\n *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n * });\n *\n * say('hello', 'fred', 'barney', 'pebbles');\n * // => 'hello fred, barney, & pebbles'\n */\nfunction restParam(func, start) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        rest = Array(length);\n\n    while (++index < length) {\n      rest[index] = args[start + index];\n    }\n    switch (start) {\n      case 0: return func.call(this, rest);\n      case 1: return func.call(this, args[0], rest);\n      case 2: return func.call(this, args[0], args[1], rest);\n    }\n    var otherArgs = Array(start + 1);\n    index = -1;\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = rest;\n    return func.apply(this, otherArgs);\n  };\n}\n\nmodule.exports = restParam;\n"]}