{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/function/once.js"],"names":["before","require","once","func","module","exports"],"mappings":";;AAAA,IAAIA,SAASC,QAAQ,UAAR,CAAb;;AAEA;;;;;;;;;;;;;;;;;AAiBA,SAASC,IAAT,CAAcC,IAAd,EAAoB;AAClB,SAAOH,OAAO,CAAP,EAAUG,IAAV,CAAP;AACD;;AAEDC,OAAOC,OAAP,GAAiBH,IAAjB","file":"once.js","sourcesContent":["var before = require('./before');\n\n/**\n * Creates a function that is restricted to invoking `func` once. Repeat calls\n * to the function return the value of the first call. The `func` is invoked\n * with the `this` binding and arguments of the created function.\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * var initialize = _.once(createApplication);\n * initialize();\n * initialize();\n * // `initialize` invokes `createApplication` once\n */\nfunction once(func) {\n  return before(2, func);\n}\n\nmodule.exports = once;\n"]}