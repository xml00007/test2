{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/function/wrap.js"],"names":["createWrapper","require","identity","PARTIAL_FLAG","wrap","value","wrapper","undefined","module","exports"],"mappings":";;AAAA,IAAIA,gBAAgBC,QAAQ,2BAAR,CAApB;AAAA,IACIC,WAAWD,QAAQ,qBAAR,CADf;;AAGA;AACA,IAAIE,eAAe,EAAnB;;AAEA;;;;;;;;;;;;;;;;;;;;;AAqBA,SAASC,IAAT,CAAcC,KAAd,EAAqBC,OAArB,EAA8B;AAC5BA,YAAUA,WAAW,IAAX,GAAkBJ,QAAlB,GAA6BI,OAAvC;AACA,SAAON,cAAcM,OAAd,EAAuBH,YAAvB,EAAqCI,SAArC,EAAgD,CAACF,KAAD,CAAhD,EAAyD,EAAzD,CAAP;AACD;;AAEDG,OAAOC,OAAP,GAAiBL,IAAjB","file":"wrap.js","sourcesContent":["var createWrapper = require('../internal/createWrapper'),\n    identity = require('../utility/identity');\n\n/** Used to compose bitmasks for wrapper metadata. */\nvar PARTIAL_FLAG = 32;\n\n/**\n * Creates a function that provides `value` to the wrapper function as its\n * first argument. Any additional arguments provided to the function are\n * appended to those provided to the wrapper function. The wrapper is invoked\n * with the `this` binding of the created function.\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {*} value The value to wrap.\n * @param {Function} wrapper The wrapper function.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var p = _.wrap(_.escape, function(func, text) {\n *   return '<p>' + func(text) + '</p>';\n * });\n *\n * p('fred, barney, & pebbles');\n * // => '<p>fred, barney, &amp; pebbles</p>'\n */\nfunction wrap(value, wrapper) {\n  wrapper = wrapper == null ? identity : wrapper;\n  return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n}\n\nmodule.exports = wrap;\n"]}