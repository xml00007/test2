{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/function/negate.js"],"names":["FUNC_ERROR_TEXT","negate","predicate","TypeError","apply","arguments","module","exports"],"mappings":";;AAAA;AACA,IAAIA,kBAAkB,qBAAtB;;AAEA;;;;;;;;;;;;;;;;;;;AAmBA,SAASC,MAAT,CAAgBC,SAAhB,EAA2B;AACzB,MAAI,OAAOA,SAAP,IAAoB,UAAxB,EAAoC;AAClC,UAAM,IAAIC,SAAJ,CAAcH,eAAd,CAAN;AACD;AACD,SAAO,YAAW;AAChB,WAAO,CAACE,UAAUE,KAAV,CAAgB,IAAhB,EAAsBC,SAAtB,CAAR;AACD,GAFD;AAGD;;AAEDC,OAAOC,OAAP,GAAiBN,MAAjB","file":"negate.js","sourcesContent":["/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    return !predicate.apply(this, arguments);\n  };\n}\n\nmodule.exports = negate;\n"]}