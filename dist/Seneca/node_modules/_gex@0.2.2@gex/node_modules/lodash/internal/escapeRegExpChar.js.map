{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/escapeRegExpChar.js"],"names":["regexpEscapes","stringEscapes","escapeRegExpChar","chr","leadingChar","whitespaceChar","module","exports"],"mappings":";;AAAA;AACA,IAAIA,gBAAgB;AAClB,OAAK,KADa,EACN,KAAK,KADC,EACM,KAAK,KADX,EACkB,KAAK,KADvB,EAC8B,KAAK,KADnC;AAElB,OAAK,KAFa,EAEN,KAAK,KAFC,EAEM,KAAK,KAFX,EAEkB,KAAK,KAFvB,EAE8B,KAAK,KAFnC;AAGlB,OAAK,KAHa,EAGN,KAAK,KAHC,EAGM,KAAK,KAHX,EAGkB,KAAK,KAHvB,EAG8B,KAAK,KAHnC,EAG0C,KAAK,KAH/C;AAIlB,OAAK,KAJa,EAIN,KAAK,KAJC,EAIM,KAAK,KAJX,EAIkB,KAAK,KAJvB,EAI8B,KAAK,KAJnC,EAI0C,KAAK,KAJ/C;AAKlB,OAAK,KALa,EAKN,KAAK,KALC,EAKM,KAAK,KALX,EAKkB,KAAK,KALvB,EAK8B,KAAK,KALnC,EAK0C,KAAK;AAL/C,CAApB;;AAQA;AACA,IAAIC,gBAAgB;AAClB,QAAM,IADY;AAElB,OAAK,GAFa;AAGlB,QAAM,GAHY;AAIlB,QAAM,GAJY;AAKlB,YAAU,OALQ;AAMlB,YAAU;AANQ,CAApB;;AASA;;;;;;;;;AASA,SAASC,gBAAT,CAA0BC,GAA1B,EAA+BC,WAA/B,EAA4CC,cAA5C,EAA4D;AAC1D,MAAID,WAAJ,EAAiB;AACfD,UAAMH,cAAcG,GAAd,CAAN;AACD,GAFD,MAEO,IAAIE,cAAJ,EAAoB;AACzBF,UAAMF,cAAcE,GAAd,CAAN;AACD;AACD,SAAO,OAAOA,GAAd;AACD;;AAEDG,OAAOC,OAAP,GAAiBL,gBAAjB","file":"escapeRegExpChar.js","sourcesContent":["/** Used to escape characters for inclusion in compiled regexes. */\nvar regexpEscapes = {\n  '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n  '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n  'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n  'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n  'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n};\n\n/** Used to escape characters for inclusion in compiled string literals. */\nvar stringEscapes = {\n  '\\\\': '\\\\',\n  \"'\": \"'\",\n  '\\n': 'n',\n  '\\r': 'r',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\n/**\n * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n *\n * @private\n * @param {string} chr The matched character to escape.\n * @param {string} leadingChar The capture group for a leading character.\n * @param {string} whitespaceChar The capture group for a whitespace character.\n * @returns {string} Returns the escaped character.\n */\nfunction escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n  if (leadingChar) {\n    chr = regexpEscapes[chr];\n  } else if (whitespaceChar) {\n    chr = stringEscapes[chr];\n  }\n  return '\\\\' + chr;\n}\n\nmodule.exports = escapeRegExpChar;\n"]}