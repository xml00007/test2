{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/setData.js"],"names":["baseSetData","require","now","HOT_COUNT","HOT_SPAN","setData","count","lastCalled","key","value","stamp","remaining","module","exports"],"mappings":";;AAAA,IAAIA,cAAcC,QAAQ,eAAR,CAAlB;AAAA,IACIC,MAAMD,QAAQ,aAAR,CADV;;AAGA;AACA,IAAIE,YAAY,GAAhB;AAAA,IACIC,WAAW,EADf;;AAGA;;;;;;;;;;;;;AAaA,IAAIC,UAAW,YAAW;AACxB,MAAIC,QAAQ,CAAZ;AAAA,MACIC,aAAa,CADjB;;AAGA,SAAO,UAASC,GAAT,EAAcC,KAAd,EAAqB;AAC1B,QAAIC,QAAQR,KAAZ;AAAA,QACIS,YAAYP,YAAYM,QAAQH,UAApB,CADhB;;AAGAA,iBAAaG,KAAb;AACA,QAAIC,YAAY,CAAhB,EAAmB;AACjB,UAAI,EAAEL,KAAF,IAAWH,SAAf,EAA0B;AACxB,eAAOK,GAAP;AACD;AACF,KAJD,MAIO;AACLF,cAAQ,CAAR;AACD;AACD,WAAON,YAAYQ,GAAZ,EAAiBC,KAAjB,CAAP;AACD,GAbD;AAcD,CAlBc,EAAf;;AAoBAG,OAAOC,OAAP,GAAiBR,OAAjB","file":"setData.js","sourcesContent":["var baseSetData = require('./baseSetData'),\n    now = require('../date/now');\n\n/** Used to detect when a function becomes hot. */\nvar HOT_COUNT = 150,\n    HOT_SPAN = 16;\n\n/**\n * Sets metadata for `func`.\n *\n * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n * period of time, it will trip its breaker and transition to an identity function\n * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n * for more details.\n *\n * @private\n * @param {Function} func The function to associate metadata with.\n * @param {*} data The metadata.\n * @returns {Function} Returns `func`.\n */\nvar setData = (function() {\n  var count = 0,\n      lastCalled = 0;\n\n  return function(key, value) {\n    var stamp = now(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return key;\n      }\n    } else {\n      count = 0;\n    }\n    return baseSetData(key, value);\n  };\n}());\n\nmodule.exports = setData;\n"]}