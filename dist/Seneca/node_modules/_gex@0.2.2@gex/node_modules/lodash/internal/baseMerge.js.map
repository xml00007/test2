{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/baseMerge.js"],"names":["arrayEach","require","baseMergeDeep","isArray","isArrayLike","isObject","isObjectLike","isTypedArray","keys","baseMerge","object","source","customizer","stackA","stackB","isSrcArr","props","undefined","srcValue","key","value","result","isCommon","module","exports"],"mappings":";;AAAA,IAAIA,YAAYC,QAAQ,aAAR,CAAhB;AAAA,IACIC,gBAAgBD,QAAQ,iBAAR,CADpB;AAAA,IAEIE,UAAUF,QAAQ,iBAAR,CAFd;AAAA,IAGIG,cAAcH,QAAQ,eAAR,CAHlB;AAAA,IAIII,WAAWJ,QAAQ,kBAAR,CAJf;AAAA,IAKIK,eAAeL,QAAQ,gBAAR,CALnB;AAAA,IAMIM,eAAeN,QAAQ,sBAAR,CANnB;AAAA,IAOIO,OAAOP,QAAQ,gBAAR,CAPX;;AASA;;;;;;;;;;;;AAYA,SAASQ,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,UAAnC,EAA+CC,MAA/C,EAAuDC,MAAvD,EAA+D;AAC7D,MAAI,CAACT,SAASK,MAAT,CAAL,EAAuB;AACrB,WAAOA,MAAP;AACD;AACD,MAAIK,WAAWX,YAAYO,MAAZ,MAAwBR,QAAQQ,MAAR,KAAmBJ,aAAaI,MAAb,CAA3C,CAAf;AAAA,MACIK,QAAQD,WAAWE,SAAX,GAAuBT,KAAKG,MAAL,CADnC;;AAGAX,YAAUgB,SAASL,MAAnB,EAA2B,UAASO,QAAT,EAAmBC,GAAnB,EAAwB;AACjD,QAAIH,KAAJ,EAAW;AACTG,YAAMD,QAAN;AACAA,iBAAWP,OAAOQ,GAAP,CAAX;AACD;AACD,QAAIb,aAAaY,QAAb,CAAJ,EAA4B;AAC1BL,iBAAWA,SAAS,EAApB;AACAC,iBAAWA,SAAS,EAApB;AACAZ,oBAAcQ,MAAd,EAAsBC,MAAtB,EAA8BQ,GAA9B,EAAmCV,SAAnC,EAA8CG,UAA9C,EAA0DC,MAA1D,EAAkEC,MAAlE;AACD,KAJD,MAKK;AACH,UAAIM,QAAQV,OAAOS,GAAP,CAAZ;AAAA,UACIE,SAAST,aAAaA,WAAWQ,KAAX,EAAkBF,QAAlB,EAA4BC,GAA5B,EAAiCT,MAAjC,EAAyCC,MAAzC,CAAb,GAAgEM,SAD7E;AAAA,UAEIK,WAAWD,WAAWJ,SAF1B;;AAIA,UAAIK,QAAJ,EAAc;AACZD,iBAASH,QAAT;AACD;AACD,UAAI,CAACG,WAAWJ,SAAX,IAAyBF,YAAY,EAAEI,OAAOT,MAAT,CAAtC,MACCY,aAAaD,WAAWA,MAAX,GAAqBA,WAAWD,KAAhC,GAA0CA,UAAUA,KAAjE,CADD,CAAJ,EACgF;AAC9EV,eAAOS,GAAP,IAAcE,MAAd;AACD;AACF;AACF,GAvBD;AAwBA,SAAOX,MAAP;AACD;;AAEDa,OAAOC,OAAP,GAAiBf,SAAjB","file":"baseMerge.js","sourcesContent":["var arrayEach = require('./arrayEach'),\n    baseMergeDeep = require('./baseMergeDeep'),\n    isArray = require('../lang/isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isObject = require('../lang/isObject'),\n    isObjectLike = require('./isObjectLike'),\n    isTypedArray = require('../lang/isTypedArray'),\n    keys = require('../object/keys');\n\n/**\n * The base implementation of `_.merge` without support for argument juggling,\n * multiple sources, and `this` binding `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Array} [stackA=[]] Tracks traversed source objects.\n * @param {Array} [stackB=[]] Associates values with source counterparts.\n * @returns {Object} Returns `object`.\n */\nfunction baseMerge(object, source, customizer, stackA, stackB) {\n  if (!isObject(object)) {\n    return object;\n  }\n  var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n      props = isSrcArr ? undefined : keys(source);\n\n  arrayEach(props || source, function(srcValue, key) {\n    if (props) {\n      key = srcValue;\n      srcValue = source[key];\n    }\n    if (isObjectLike(srcValue)) {\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n      baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n    }\n    else {\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n      }\n      if ((result !== undefined || (isSrcArr && !(key in object))) &&\n          (isCommon || (result === result ? (result !== value) : (value === value)))) {\n        object[key] = result;\n      }\n    }\n  });\n  return object;\n}\n\nmodule.exports = baseMerge;\n"]}