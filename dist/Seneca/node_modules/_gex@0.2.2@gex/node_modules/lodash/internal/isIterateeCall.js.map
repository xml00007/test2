{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/isIterateeCall.js"],"names":["isArrayLike","require","isIndex","isObject","isIterateeCall","value","index","object","type","length","other","module","exports"],"mappings":";;;;AAAA,IAAIA,cAAcC,QAAQ,eAAR,CAAlB;AAAA,IACIC,UAAUD,QAAQ,WAAR,CADd;AAAA,IAEIE,WAAWF,QAAQ,kBAAR,CAFf;;AAIA;;;;;;;;;AASA,SAASG,cAAT,CAAwBC,KAAxB,EAA+BC,KAA/B,EAAsCC,MAAtC,EAA8C;AAC5C,MAAI,CAACJ,SAASI,MAAT,CAAL,EAAuB;AACrB,WAAO,KAAP;AACD;AACD,MAAIC,cAAcF,KAAd,yCAAcA,KAAd,CAAJ;AACA,MAAIE,QAAQ,QAAR,GACGR,YAAYO,MAAZ,KAAuBL,QAAQI,KAAR,EAAeC,OAAOE,MAAtB,CAD1B,GAEGD,QAAQ,QAAR,IAAoBF,SAASC,MAFpC,EAE6C;AAC3C,QAAIG,QAAQH,OAAOD,KAAP,CAAZ;AACA,WAAOD,UAAUA,KAAV,GAAmBA,UAAUK,KAA7B,GAAuCA,UAAUA,KAAxD;AACD;AACD,SAAO,KAAP;AACD;;AAEDC,OAAOC,OAAP,GAAiBR,cAAjB","file":"isIterateeCall.js","sourcesContent":["var isArrayLike = require('./isArrayLike'),\n    isIndex = require('./isIndex'),\n    isObject = require('../lang/isObject');\n\n/**\n * Checks if the provided arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n      ? (isArrayLike(object) && isIndex(index, object.length))\n      : (type == 'string' && index in object)) {\n    var other = object[index];\n    return value === value ? (value === other) : (other !== other);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n"]}