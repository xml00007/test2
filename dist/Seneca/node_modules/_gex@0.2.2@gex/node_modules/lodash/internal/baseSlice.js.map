{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/baseSlice.js"],"names":["baseSlice","array","start","end","index","length","undefined","result","Array","module","exports"],"mappings":";;AAAA;;;;;;;;;AASA,SAASA,SAAT,CAAmBC,KAAnB,EAA0BC,KAA1B,EAAiCC,GAAjC,EAAsC;AACpC,MAAIC,QAAQ,CAAC,CAAb;AAAA,MACIC,SAASJ,MAAMI,MADnB;;AAGAH,UAAQA,SAAS,IAAT,GAAgB,CAAhB,GAAqB,CAACA,KAAD,IAAU,CAAvC;AACA,MAAIA,QAAQ,CAAZ,EAAe;AACbA,YAAQ,CAACA,KAAD,GAASG,MAAT,GAAkB,CAAlB,GAAuBA,SAASH,KAAxC;AACD;AACDC,QAAOA,QAAQG,SAAR,IAAqBH,MAAME,MAA5B,GAAsCA,MAAtC,GAAgD,CAACF,GAAD,IAAQ,CAA9D;AACA,MAAIA,MAAM,CAAV,EAAa;AACXA,WAAOE,MAAP;AACD;AACDA,WAASH,QAAQC,GAAR,GAAc,CAAd,GAAoBA,MAAMD,KAAP,KAAkB,CAA9C;AACAA,aAAW,CAAX;;AAEA,MAAIK,SAASC,MAAMH,MAAN,CAAb;AACA,SAAO,EAAED,KAAF,GAAUC,MAAjB,EAAyB;AACvBE,WAAOH,KAAP,IAAgBH,MAAMG,QAAQF,KAAd,CAAhB;AACD;AACD,SAAOK,MAAP;AACD;;AAEDE,OAAOC,OAAP,GAAiBV,SAAjB","file":"baseSlice.js","sourcesContent":["/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  start = start == null ? 0 : (+start || 0);\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = (end === undefined || end > length) ? length : (+end || 0);\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n"]}