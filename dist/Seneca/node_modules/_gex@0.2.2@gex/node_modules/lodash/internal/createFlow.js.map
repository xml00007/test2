{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/createFlow.js"],"names":["LodashWrapper","require","getData","getFuncName","isArray","isLaziable","CURRY_FLAG","PARTIAL_FLAG","ARY_FLAG","REARG_FLAG","LARGE_ARRAY_SIZE","FUNC_ERROR_TEXT","createFlow","fromRight","wrapper","length","arguments","index","leftIndex","funcs","Array","func","TypeError","prototype","thru","funcName","data","undefined","apply","args","value","plant","result","call","module","exports"],"mappings":"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","file":"createFlow.js","sourcesContent":["var LodashWrapper = require('./LodashWrapper'),\n    getData = require('./getData'),\n    getFuncName = require('./getFuncName'),\n    isArray = require('../lang/isArray'),\n    isLaziable = require('./isLaziable');\n\n/** Used to compose bitmasks for wrapper metadata. */\nvar CURRY_FLAG = 8,\n    PARTIAL_FLAG = 32,\n    ARY_FLAG = 128,\n    REARG_FLAG = 256;\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a `_.flow` or `_.flowRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new flow function.\n */\nfunction createFlow(fromRight) {\n  return function() {\n    var wrapper,\n        length = arguments.length,\n        index = fromRight ? length : -1,\n        leftIndex = 0,\n        funcs = Array(length);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var func = funcs[leftIndex++] = arguments[index];\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n        wrapper = new LodashWrapper([], true);\n      }\n    }\n    index = wrapper ? -1 : length;\n    while (++index < length) {\n      func = funcs[index];\n\n      var funcName = getFuncName(func),\n          data = funcName == 'wrapper' ? getData(func) : undefined;\n\n      if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n        wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n      } else {\n        wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n      }\n    }\n    return function() {\n      var args = arguments,\n          value = args[0];\n\n      if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n        return wrapper.plant(value).value();\n      }\n      var index = 0,\n          result = length ? funcs[index].apply(this, args) : value;\n\n      while (++index < length) {\n        result = funcs[index].call(this, result);\n      }\n      return result;\n    };\n  };\n}\n\nmodule.exports = createFlow;\n"]}