{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/createHybridWrapper.js"],"names":["arrayCopy","require","composeArgs","composeArgsRight","createCtorWrapper","isLaziable","reorder","replaceHolders","setData","BIND_FLAG","BIND_KEY_FLAG","CURRY_BOUND_FLAG","CURRY_FLAG","CURRY_RIGHT_FLAG","PARTIAL_FLAG","PARTIAL_RIGHT_FLAG","ARY_FLAG","nativeMax","Math","max","createHybridWrapper","func","bitmask","thisArg","partials","holders","partialsRight","holdersRight","argPos","ary","arity","isAry","isBind","isBindKey","isCurry","isCurryBound","isCurryRight","Ctor","undefined","wrapper","length","arguments","index","args","Array","placeholder","argsHolders","newArgPos","newArity","newsHolders","newHoldersRight","newPartials","newPartialsRight","newData","result","apply","thisBinding","fn","global","module","exports"],"mappings":"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","file":"createHybridWrapper.js","sourcesContent":["var arrayCopy = require('./arrayCopy'),\n    composeArgs = require('./composeArgs'),\n    composeArgsRight = require('./composeArgsRight'),\n    createCtorWrapper = require('./createCtorWrapper'),\n    isLaziable = require('./isLaziable'),\n    reorder = require('./reorder'),\n    replaceHolders = require('./replaceHolders'),\n    setData = require('./setData');\n\n/** Used to compose bitmasks for wrapper metadata. */\nvar BIND_FLAG = 1,\n    BIND_KEY_FLAG = 2,\n    CURRY_BOUND_FLAG = 4,\n    CURRY_FLAG = 8,\n    CURRY_RIGHT_FLAG = 16,\n    PARTIAL_FLAG = 32,\n    PARTIAL_RIGHT_FLAG = 64,\n    ARY_FLAG = 128;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that wraps `func` and invokes it with optional `this`\n * binding of, partial application, and currying.\n *\n * @private\n * @param {Function|string} func The function or method name to reference.\n * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n  var isAry = bitmask & ARY_FLAG,\n      isBind = bitmask & BIND_FLAG,\n      isBindKey = bitmask & BIND_KEY_FLAG,\n      isCurry = bitmask & CURRY_FLAG,\n      isCurryBound = bitmask & CURRY_BOUND_FLAG,\n      isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n      Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n  function wrapper() {\n    // Avoid `arguments` object use disqualifying optimizations by\n    // converting it to an array before providing it to other functions.\n    var length = arguments.length,\n        index = length,\n        args = Array(length);\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    if (partials) {\n      args = composeArgs(args, partials, holders);\n    }\n    if (partialsRight) {\n      args = composeArgsRight(args, partialsRight, holdersRight);\n    }\n    if (isCurry || isCurryRight) {\n      var placeholder = wrapper.placeholder,\n          argsHolders = replaceHolders(args, placeholder);\n\n      length -= argsHolders.length;\n      if (length < arity) {\n        var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n            newArity = nativeMax(arity - length, 0),\n            newsHolders = isCurry ? argsHolders : undefined,\n            newHoldersRight = isCurry ? undefined : argsHolders,\n            newPartials = isCurry ? args : undefined,\n            newPartialsRight = isCurry ? undefined : args;\n\n        bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n        bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n        if (!isCurryBound) {\n          bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n        }\n        var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n            result = createHybridWrapper.apply(undefined, newData);\n\n        if (isLaziable(func)) {\n          setData(result, newData);\n        }\n        result.placeholder = placeholder;\n        return result;\n      }\n    }\n    var thisBinding = isBind ? thisArg : this,\n        fn = isBindKey ? thisBinding[func] : func;\n\n    if (argPos) {\n      args = reorder(args, argPos);\n    }\n    if (isAry && ary < args.length) {\n      args.length = ary;\n    }\n    if (this && this !== global && this instanceof wrapper) {\n      fn = Ctor || createCtorWrapper(func);\n    }\n    return fn.apply(thisBinding, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createHybridWrapper;\n"]}