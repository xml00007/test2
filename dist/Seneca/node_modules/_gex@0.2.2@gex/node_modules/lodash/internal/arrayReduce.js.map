{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/arrayReduce.js"],"names":["arrayReduce","array","iteratee","accumulator","initFromArray","index","length","module","exports"],"mappings":";;AAAA;;;;;;;;;;;;AAYA,SAASA,WAAT,CAAqBC,KAArB,EAA4BC,QAA5B,EAAsCC,WAAtC,EAAmDC,aAAnD,EAAkE;AAChE,MAAIC,QAAQ,CAAC,CAAb;AAAA,MACIC,SAASL,MAAMK,MADnB;;AAGA,MAAIF,iBAAiBE,MAArB,EAA6B;AAC3BH,kBAAcF,MAAM,EAAEI,KAAR,CAAd;AACD;AACD,SAAO,EAAEA,KAAF,GAAUC,MAAjB,EAAyB;AACvBH,kBAAcD,SAASC,WAAT,EAAsBF,MAAMI,KAAN,CAAtB,EAAoCA,KAApC,EAA2CJ,KAA3C,CAAd;AACD;AACD,SAAOE,WAAP;AACD;;AAEDI,OAAOC,OAAP,GAAiBR,WAAjB","file":"arrayReduce.js","sourcesContent":["/**\n * A specialized version of `_.reduce` for arrays without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initFromArray] Specify using the first element of `array`\n *  as the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initFromArray) {\n  var index = -1,\n      length = array.length;\n\n  if (initFromArray && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n"]}