{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/compareAscending.js"],"names":["baseCompareAscending","require","compareAscending","object","other","criteria","index","module","exports"],"mappings":";;AAAA,IAAIA,uBAAuBC,QAAQ,wBAAR,CAA3B;;AAEA;;;;;;;;;AASA,SAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,KAAlC,EAAyC;AACvC,SAAOJ,qBAAqBG,OAAOE,QAA5B,EAAsCD,MAAMC,QAA5C,KAA0DF,OAAOG,KAAP,GAAeF,MAAME,KAAtF;AACD;;AAEDC,OAAOC,OAAP,GAAiBN,gBAAjB","file":"compareAscending.js","sourcesContent":["var baseCompareAscending = require('./baseCompareAscending');\n\n/**\n * Used by `_.sortBy` to compare transformed elements of a collection and stable\n * sort them in ascending order.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareAscending(object, other) {\n  return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n}\n\nmodule.exports = compareAscending;\n"]}