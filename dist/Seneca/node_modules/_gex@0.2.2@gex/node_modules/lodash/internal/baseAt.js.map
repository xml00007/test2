{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/baseAt.js"],"names":["isArrayLike","require","isIndex","baseAt","collection","props","index","isNil","isArr","length","propsLength","result","Array","key","undefined","module","exports"],"mappings":";;AAAA,IAAIA,cAAcC,QAAQ,eAAR,CAAlB;AAAA,IACIC,UAAUD,QAAQ,WAAR,CADd;;AAGA;;;;;;;;;AASA,SAASE,MAAT,CAAgBC,UAAhB,EAA4BC,KAA5B,EAAmC;AACjC,MAAIC,QAAQ,CAAC,CAAb;AAAA,MACIC,QAAQH,cAAc,IAD1B;AAAA,MAEII,QAAQ,CAACD,KAAD,IAAUP,YAAYI,UAAZ,CAFtB;AAAA,MAGIK,SAASD,QAAQJ,WAAWK,MAAnB,GAA4B,CAHzC;AAAA,MAIIC,cAAcL,MAAMI,MAJxB;AAAA,MAKIE,SAASC,MAAMF,WAAN,CALb;;AAOA,SAAM,EAAEJ,KAAF,GAAUI,WAAhB,EAA6B;AAC3B,QAAIG,MAAMR,MAAMC,KAAN,CAAV;AACA,QAAIE,KAAJ,EAAW;AACTG,aAAOL,KAAP,IAAgBJ,QAAQW,GAAR,EAAaJ,MAAb,IAAuBL,WAAWS,GAAX,CAAvB,GAAyCC,SAAzD;AACD,KAFD,MAEO;AACLH,aAAOL,KAAP,IAAgBC,QAAQO,SAAR,GAAoBV,WAAWS,GAAX,CAApC;AACD;AACF;AACD,SAAOF,MAAP;AACD;;AAEDI,OAAOC,OAAP,GAAiBb,MAAjB","file":"baseAt.js","sourcesContent":["var isArrayLike = require('./isArrayLike'),\n    isIndex = require('./isIndex');\n\n/**\n * The base implementation of `_.at` without support for string collections\n * and individual key arguments.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {number[]|string[]} props The property names or indexes of elements to pick.\n * @returns {Array} Returns the new array of picked elements.\n */\nfunction baseAt(collection, props) {\n  var index = -1,\n      isNil = collection == null,\n      isArr = !isNil && isArrayLike(collection),\n      length = isArr ? collection.length : 0,\n      propsLength = props.length,\n      result = Array(propsLength);\n\n  while(++index < propsLength) {\n    var key = props[index];\n    if (isArr) {\n      result[index] = isIndex(key, length) ? collection[key] : undefined;\n    } else {\n      result[index] = isNil ? undefined : collection[key];\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseAt;\n"]}