{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/baseUniq.js"],"names":["baseIndexOf","require","cacheIndexOf","createCache","LARGE_ARRAY_SIZE","baseUniq","array","iteratee","index","indexOf","length","isCommon","isLarge","seen","result","outer","value","computed","seenIndex","push","module","exports"],"mappings":";;AAAA,IAAIA,cAAcC,QAAQ,eAAR,CAAlB;AAAA,IACIC,eAAeD,QAAQ,gBAAR,CADnB;AAAA,IAEIE,cAAcF,QAAQ,eAAR,CAFlB;;AAIA;AACA,IAAIG,mBAAmB,GAAvB;;AAEA;;;;;;;;;AASA,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,QAAzB,EAAmC;AACjC,MAAIC,QAAQ,CAAC,CAAb;AAAA,MACIC,UAAUT,WADd;AAAA,MAEIU,SAASJ,MAAMI,MAFnB;AAAA,MAGIC,WAAW,IAHf;AAAA,MAIIC,UAAUD,YAAYD,UAAUN,gBAJpC;AAAA,MAKIS,OAAOD,UAAUT,aAAV,GAA0B,IALrC;AAAA,MAMIW,SAAS,EANb;;AAQA,MAAID,IAAJ,EAAU;AACRJ,cAAUP,YAAV;AACAS,eAAW,KAAX;AACD,GAHD,MAGO;AACLC,cAAU,KAAV;AACAC,WAAON,WAAW,EAAX,GAAgBO,MAAvB;AACD;AACDC,SACA,OAAO,EAAEP,KAAF,GAAUE,MAAjB,EAAyB;AACvB,QAAIM,QAAQV,MAAME,KAAN,CAAZ;AAAA,QACIS,WAAWV,WAAWA,SAASS,KAAT,EAAgBR,KAAhB,EAAuBF,KAAvB,CAAX,GAA2CU,KAD1D;;AAGA,QAAIL,YAAYK,UAAUA,KAA1B,EAAiC;AAC/B,UAAIE,YAAYL,KAAKH,MAArB;AACA,aAAOQ,WAAP,EAAoB;AAClB,YAAIL,KAAKK,SAAL,MAAoBD,QAAxB,EAAkC;AAChC,mBAASF,KAAT;AACD;AACF;AACD,UAAIR,QAAJ,EAAc;AACZM,aAAKM,IAAL,CAAUF,QAAV;AACD;AACDH,aAAOK,IAAP,CAAYH,KAAZ;AACD,KAXD,MAYK,IAAIP,QAAQI,IAAR,EAAcI,QAAd,EAAwB,CAAxB,IAA6B,CAAjC,EAAoC;AACvC,UAAIV,YAAYK,OAAhB,EAAyB;AACvBC,aAAKM,IAAL,CAAUF,QAAV;AACD;AACDH,aAAOK,IAAP,CAAYH,KAAZ;AACD;AACF;AACD,SAAOF,MAAP;AACD;;AAEDM,OAAOC,OAAP,GAAiBhB,QAAjB","file":"baseUniq.js","sourcesContent":["var baseIndexOf = require('./baseIndexOf'),\n    cacheIndexOf = require('./cacheIndexOf'),\n    createCache = require('./createCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniq` without support for callback shorthands\n * and `this` binding.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The function invoked per iteration.\n * @returns {Array} Returns the new duplicate-value-free array.\n */\nfunction baseUniq(array, iteratee) {\n  var index = -1,\n      indexOf = baseIndexOf,\n      length = array.length,\n      isCommon = true,\n      isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n      seen = isLarge ? createCache() : null,\n      result = [];\n\n  if (seen) {\n    indexOf = cacheIndexOf;\n    isCommon = false;\n  } else {\n    isLarge = false;\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value, index, array) : value;\n\n    if (isCommon && value === value) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (indexOf(seen, computed, 0) < 0) {\n      if (iteratee || isLarge) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n"]}