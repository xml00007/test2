{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/baseSortByOrder.js"],"names":["arrayMap","require","baseCallback","baseMap","baseSortBy","compareMultiple","baseSortByOrder","collection","iteratees","orders","index","iteratee","result","value","criteria","object","other","module","exports"],"mappings":";;AAAA,IAAIA,WAAWC,QAAQ,YAAR,CAAf;AAAA,IACIC,eAAeD,QAAQ,gBAAR,CADnB;AAAA,IAEIE,UAAUF,QAAQ,WAAR,CAFd;AAAA,IAGIG,aAAaH,QAAQ,cAAR,CAHjB;AAAA,IAIII,kBAAkBJ,QAAQ,mBAAR,CAJtB;;AAMA;;;;;;;;;AASA,SAASK,eAAT,CAAyBC,UAAzB,EAAqCC,SAArC,EAAgDC,MAAhD,EAAwD;AACtD,MAAIC,QAAQ,CAAC,CAAb;;AAEAF,cAAYR,SAASQ,SAAT,EAAoB,UAASG,QAAT,EAAmB;AAAE,WAAOT,aAAaS,QAAb,CAAP;AAAgC,GAAzE,CAAZ;;AAEA,MAAIC,SAAST,QAAQI,UAAR,EAAoB,UAASM,KAAT,EAAgB;AAC/C,QAAIC,WAAWd,SAASQ,SAAT,EAAoB,UAASG,QAAT,EAAmB;AAAE,aAAOA,SAASE,KAAT,CAAP;AAAyB,KAAlE,CAAf;AACA,WAAO,EAAE,YAAYC,QAAd,EAAwB,SAAS,EAAEJ,KAAnC,EAA0C,SAASG,KAAnD,EAAP;AACD,GAHY,CAAb;;AAKA,SAAOT,WAAWQ,MAAX,EAAmB,UAASG,MAAT,EAAiBC,KAAjB,EAAwB;AAChD,WAAOX,gBAAgBU,MAAhB,EAAwBC,KAAxB,EAA+BP,MAA/B,CAAP;AACD,GAFM,CAAP;AAGD;;AAEDQ,OAAOC,OAAP,GAAiBZ,eAAjB","file":"baseSortByOrder.js","sourcesContent":["var arrayMap = require('./arrayMap'),\n    baseCallback = require('./baseCallback'),\n    baseMap = require('./baseMap'),\n    baseSortBy = require('./baseSortBy'),\n    compareMultiple = require('./compareMultiple');\n\n/**\n * The base implementation of `_.sortByOrder` without param guards.\n *\n * @private\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {boolean[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseSortByOrder(collection, iteratees, orders) {\n  var index = -1;\n\n  iteratees = arrayMap(iteratees, function(iteratee) { return baseCallback(iteratee); });\n\n  var result = baseMap(collection, function(value) {\n    var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseSortByOrder;\n"]}