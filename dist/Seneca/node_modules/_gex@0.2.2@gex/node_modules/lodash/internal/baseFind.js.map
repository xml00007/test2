{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/baseFind.js"],"names":["baseFind","collection","predicate","eachFunc","retKey","result","value","key","module","exports"],"mappings":";;AAAA;;;;;;;;;;;;;AAaA,SAASA,QAAT,CAAkBC,UAAlB,EAA8BC,SAA9B,EAAyCC,QAAzC,EAAmDC,MAAnD,EAA2D;AACzD,MAAIC,MAAJ;AACAF,WAASF,UAAT,EAAqB,UAASK,KAAT,EAAgBC,GAAhB,EAAqBN,UAArB,EAAiC;AACpD,QAAIC,UAAUI,KAAV,EAAiBC,GAAjB,EAAsBN,UAAtB,CAAJ,EAAuC;AACrCI,eAASD,SAASG,GAAT,GAAeD,KAAxB;AACA,aAAO,KAAP;AACD;AACF,GALD;AAMA,SAAOD,MAAP;AACD;;AAEDG,OAAOC,OAAP,GAAiBT,QAAjB","file":"baseFind.js","sourcesContent":["/**\n * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n * without support for callback shorthands and `this` binding, which iterates\n * over `collection` using the provided `eachFunc`.\n *\n * @private\n * @param {Array|Object|string} collection The collection to search.\n * @param {Function} predicate The function invoked per iteration.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @param {boolean} [retKey] Specify returning the key of the found element\n *  instead of the element itself.\n * @returns {*} Returns the found element or its key, else `undefined`.\n */\nfunction baseFind(collection, predicate, eachFunc, retKey) {\n  var result;\n  eachFunc(collection, function(value, key, collection) {\n    if (predicate(value, key, collection)) {\n      result = retKey ? key : value;\n      return false;\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFind;\n"]}