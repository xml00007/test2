{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/isKey.js"],"names":["isArray","require","toObject","reIsDeepProp","reIsPlainProp","isKey","value","object","type","test","result","module","exports"],"mappings":";;;;AAAA,IAAIA,UAAUC,QAAQ,iBAAR,CAAd;AAAA,IACIC,WAAWD,QAAQ,YAAR,CADf;;AAGA;AACA,IAAIE,eAAe,oDAAnB;AAAA,IACIC,gBAAgB,OADpB;;AAGA;;;;;;;;AAQA,SAASC,KAAT,CAAeC,KAAf,EAAsBC,MAAtB,EAA8B;AAC5B,MAAIC,cAAcF,KAAd,yCAAcA,KAAd,CAAJ;AACA,MAAKE,QAAQ,QAAR,IAAoBJ,cAAcK,IAAd,CAAmBH,KAAnB,CAArB,IAAmDE,QAAQ,QAA/D,EAAyE;AACvE,WAAO,IAAP;AACD;AACD,MAAIR,QAAQM,KAAR,CAAJ,EAAoB;AAClB,WAAO,KAAP;AACD;AACD,MAAII,SAAS,CAACP,aAAaM,IAAb,CAAkBH,KAAlB,CAAd;AACA,SAAOI,UAAWH,UAAU,IAAV,IAAkBD,SAASJ,SAASK,MAAT,CAA7C;AACD;;AAEDI,OAAOC,OAAP,GAAiBP,KAAjB","file":"isKey.js","sourcesContent":["var isArray = require('../lang/isArray'),\n    toObject = require('./toObject');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  var type = typeof value;\n  if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n    return true;\n  }\n  if (isArray(value)) {\n    return false;\n  }\n  var result = !reIsDeepProp.test(value);\n  return result || (object != null && value in toObject(object));\n}\n\nmodule.exports = isKey;\n"]}