{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/bufferClone.js"],"names":["ArrayBuffer","global","Uint8Array","bufferClone","buffer","result","byteLength","view","set","module","exports"],"mappings":";;AAAA;AACA,IAAIA,cAAcC,OAAOD,WAAzB;AAAA,IACIE,aAAaD,OAAOC,UADxB;;AAGA;;;;;;;AAOA,SAASC,WAAT,CAAqBC,MAArB,EAA6B;AAC3B,QAAIC,SAAS,IAAIL,WAAJ,CAAgBI,OAAOE,UAAvB,CAAb;AAAA,QACIC,OAAO,IAAIL,UAAJ,CAAeG,MAAf,CADX;;AAGAE,SAAKC,GAAL,CAAS,IAAIN,UAAJ,CAAeE,MAAf,CAAT;AACA,WAAOC,MAAP;AACD;;AAEDI,OAAOC,OAAP,GAAiBP,WAAjB","file":"bufferClone.js","sourcesContent":["/** Native method references. */\nvar ArrayBuffer = global.ArrayBuffer,\n    Uint8Array = global.Uint8Array;\n\n/**\n * Creates a clone of the given array buffer.\n *\n * @private\n * @param {ArrayBuffer} buffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction bufferClone(buffer) {\n  var result = new ArrayBuffer(buffer.byteLength),\n      view = new Uint8Array(result);\n\n  view.set(new Uint8Array(buffer));\n  return result;\n}\n\nmodule.exports = bufferClone;\n"]}