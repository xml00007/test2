{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/initCloneByTag.js"],"names":["bufferClone","require","boolTag","dateTag","numberTag","regexpTag","stringTag","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reFlags","initCloneByTag","object","tag","isDeep","Ctor","constructor","buffer","byteOffset","length","result","source","exec","lastIndex","module","exports"],"mappings":";;AAAA,IAAIA,cAAcC,QAAQ,eAAR,CAAlB;;AAEA;AACA,IAAIC,UAAU,kBAAd;AAAA,IACIC,UAAU,eADd;AAAA,IAEIC,YAAY,iBAFhB;AAAA,IAGIC,YAAY,iBAHhB;AAAA,IAIIC,YAAY,iBAJhB;;AAMA,IAAIC,iBAAiB,sBAArB;AAAA,IACIC,aAAa,uBADjB;AAAA,IAEIC,aAAa,uBAFjB;AAAA,IAGIC,UAAU,oBAHd;AAAA,IAIIC,WAAW,qBAJf;AAAA,IAKIC,WAAW,qBALf;AAAA,IAMIC,WAAW,qBANf;AAAA,IAOIC,kBAAkB,4BAPtB;AAAA,IAQIC,YAAY,sBARhB;AAAA,IASIC,YAAY,sBAThB;;AAWA;AACA,IAAIC,UAAU,MAAd;;AAEA;;;;;;;;;;;;AAYA,SAASC,cAAT,CAAwBC,MAAxB,EAAgCC,GAAhC,EAAqCC,MAArC,EAA6C;AAC3C,MAAIC,OAAOH,OAAOI,WAAlB;AACA,UAAQH,GAAR;AACE,SAAKb,cAAL;AACE,aAAOP,YAAYmB,MAAZ,CAAP;;AAEF,SAAKjB,OAAL;AACA,SAAKC,OAAL;AACE,aAAO,IAAImB,IAAJ,CAAS,CAACH,MAAV,CAAP;;AAEF,SAAKX,UAAL,CAAiB,KAAKC,UAAL;AACjB,SAAKC,OAAL,CAAc,KAAKC,QAAL,CAAe,KAAKC,QAAL;AAC7B,SAAKC,QAAL,CAAe,KAAKC,eAAL,CAAsB,KAAKC,SAAL,CAAgB,KAAKC,SAAL;AACnD,UAAIQ,SAASL,OAAOK,MAApB;AACA,aAAO,IAAIF,IAAJ,CAASD,SAASrB,YAAYwB,MAAZ,CAAT,GAA+BA,MAAxC,EAAgDL,OAAOM,UAAvD,EAAmEN,OAAOO,MAA1E,CAAP;;AAEF,SAAKtB,SAAL;AACA,SAAKE,SAAL;AACE,aAAO,IAAIgB,IAAJ,CAASH,MAAT,CAAP;;AAEF,SAAKd,SAAL;AACE,UAAIsB,SAAS,IAAIL,IAAJ,CAASH,OAAOS,MAAhB,EAAwBX,QAAQY,IAAR,CAAaV,MAAb,CAAxB,CAAb;AACAQ,aAAOG,SAAP,GAAmBX,OAAOW,SAA1B;AApBJ;AAsBA,SAAOH,MAAP;AACD;;AAEDI,OAAOC,OAAP,GAAiBd,cAAjB","file":"initCloneByTag.js","sourcesContent":["var bufferClone = require('./bufferClone');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    stringTag = '[object String]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return bufferClone(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      var buffer = object.buffer;\n      return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      var result = new Ctor(object.source, reFlags.exec(object));\n      result.lastIndex = object.lastIndex;\n  }\n  return result;\n}\n\nmodule.exports = initCloneByTag;\n"]}