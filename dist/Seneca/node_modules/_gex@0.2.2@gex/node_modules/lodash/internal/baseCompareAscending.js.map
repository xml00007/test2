{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/baseCompareAscending.js"],"names":["baseCompareAscending","value","other","valIsNull","valIsUndef","undefined","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","module","exports"],"mappings":";;AAAA;;;;;;;;;AASA,SAASA,oBAAT,CAA8BC,KAA9B,EAAqCC,KAArC,EAA4C;AAC1C,MAAID,UAAUC,KAAd,EAAqB;AACnB,QAAIC,YAAYF,UAAU,IAA1B;AAAA,QACIG,aAAaH,UAAUI,SAD3B;AAAA,QAEIC,iBAAiBL,UAAUA,KAF/B;;AAIA,QAAIM,YAAYL,UAAU,IAA1B;AAAA,QACIM,aAAaN,UAAUG,SAD3B;AAAA,QAEII,iBAAiBP,UAAUA,KAF/B;;AAIA,QAAKD,QAAQC,KAAR,IAAiB,CAACK,SAAnB,IAAiC,CAACD,cAAlC,IACCH,aAAa,CAACK,UAAd,IAA4BC,cAD7B,IAECL,cAAcK,cAFnB,EAEoC;AAClC,aAAO,CAAP;AACD;AACD,QAAKR,QAAQC,KAAR,IAAiB,CAACC,SAAnB,IAAiC,CAACM,cAAlC,IACCF,aAAa,CAACH,UAAd,IAA4BE,cAD7B,IAECE,cAAcF,cAFnB,EAEoC;AAClC,aAAO,CAAC,CAAR;AACD;AACF;AACD,SAAO,CAAP;AACD;;AAEDI,OAAOC,OAAP,GAAiBX,oBAAjB","file":"baseCompareAscending.js","sourcesContent":["/**\n * The base implementation of `compareAscending` which compares values and\n * sorts them in ascending order without guaranteeing a stable sort.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction baseCompareAscending(value, other) {\n  if (value !== other) {\n    var valIsNull = value === null,\n        valIsUndef = value === undefined,\n        valIsReflexive = value === value;\n\n    var othIsNull = other === null,\n        othIsUndef = other === undefined,\n        othIsReflexive = other === other;\n\n    if ((value > other && !othIsNull) || !valIsReflexive ||\n        (valIsNull && !othIsUndef && othIsReflexive) ||\n        (valIsUndef && othIsReflexive)) {\n      return 1;\n    }\n    if ((value < other && !valIsNull) || !othIsReflexive ||\n        (othIsNull && !valIsUndef && valIsReflexive) ||\n        (othIsUndef && valIsReflexive)) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = baseCompareAscending;\n"]}