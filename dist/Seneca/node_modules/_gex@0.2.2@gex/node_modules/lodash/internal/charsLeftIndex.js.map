{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/charsLeftIndex.js"],"names":["charsLeftIndex","string","chars","index","length","indexOf","charAt","module","exports"],"mappings":";;AAAA;;;;;;;;;AASA,SAASA,cAAT,CAAwBC,MAAxB,EAAgCC,KAAhC,EAAuC;AACrC,MAAIC,QAAQ,CAAC,CAAb;AAAA,MACIC,SAASH,OAAOG,MADpB;;AAGA,SAAO,EAAED,KAAF,GAAUC,MAAV,IAAoBF,MAAMG,OAAN,CAAcJ,OAAOK,MAAP,CAAcH,KAAd,CAAd,IAAsC,CAAC,CAAlE,EAAqE,CAAE;AACvE,SAAOA,KAAP;AACD;;AAEDI,OAAOC,OAAP,GAAiBR,cAAjB","file":"charsLeftIndex.js","sourcesContent":["/**\n * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n * of `string` that is not found in `chars`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @param {string} chars The characters to find.\n * @returns {number} Returns the index of the first character not found in `chars`.\n */\nfunction charsLeftIndex(string, chars) {\n  var index = -1,\n      length = string.length;\n\n  while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n  return index;\n}\n\nmodule.exports = charsLeftIndex;\n"]}