{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/collection/size.js"],"names":["getLength","require","isLength","keys","size","collection","length","module","exports"],"mappings":";;AAAA,IAAIA,YAAYC,QAAQ,uBAAR,CAAhB;AAAA,IACIC,WAAWD,QAAQ,sBAAR,CADf;AAAA,IAEIE,OAAOF,QAAQ,gBAAR,CAFX;;AAIA;;;;;;;;;;;;;;;;;;;;AAoBA,SAASG,IAAT,CAAcC,UAAd,EAA0B;AACxB,MAAIC,SAASD,aAAaL,UAAUK,UAAV,CAAb,GAAqC,CAAlD;AACA,SAAOH,SAASI,MAAT,IAAmBA,MAAnB,GAA4BH,KAAKE,UAAL,EAAiBC,MAApD;AACD;;AAEDC,OAAOC,OAAP,GAAiBJ,IAAjB","file":"size.js","sourcesContent":["var getLength = require('../internal/getLength'),\n    isLength = require('../internal/isLength'),\n    keys = require('../object/keys');\n\n/**\n * Gets the size of `collection` by returning its length for array-like\n * values or the number of own enumerable properties for objects.\n *\n * @static\n * @memberOf _\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @returns {number} Returns the size of `collection`.\n * @example\n *\n * _.size([1, 2, 3]);\n * // => 3\n *\n * _.size({ 'a': 1, 'b': 2 });\n * // => 2\n *\n * _.size('pebbles');\n * // => 7\n */\nfunction size(collection) {\n  var length = collection ? getLength(collection) : 0;\n  return isLength(length) ? length : keys(collection).length;\n}\n\nmodule.exports = size;\n"]}