{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/collection/findWhere.js"],"names":["baseMatches","require","find","findWhere","collection","source","module","exports"],"mappings":";;AAAA,IAAIA,cAAcC,QAAQ,yBAAR,CAAlB;AAAA,IACIC,OAAOD,QAAQ,QAAR,CADX;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,SAASE,SAAT,CAAmBC,UAAnB,EAA+BC,MAA/B,EAAuC;AACrC,SAAOH,KAAKE,UAAL,EAAiBJ,YAAYK,MAAZ,CAAjB,CAAP;AACD;;AAEDC,OAAOC,OAAP,GAAiBJ,SAAjB","file":"findWhere.js","sourcesContent":["var baseMatches = require('../internal/baseMatches'),\n    find = require('./find');\n\n/**\n * Performs a deep comparison between each element in `collection` and the\n * source object, returning the first element that has equivalent property\n * values.\n *\n * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n * numbers, `Object` objects, regexes, and strings. Objects are compared by\n * their own, not inherited, enumerable properties. For comparing a single\n * own or inherited property value see `_.matchesProperty`.\n *\n * @static\n * @memberOf _\n * @category Collection\n * @param {Array|Object|string} collection The collection to search.\n * @param {Object} source The object of property values to match.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n * // => 'barney'\n *\n * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n * // => 'fred'\n */\nfunction findWhere(collection, source) {\n  return find(collection, baseMatches(source));\n}\n\nmodule.exports = findWhere;\n"]}