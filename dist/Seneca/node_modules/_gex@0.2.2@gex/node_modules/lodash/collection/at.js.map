{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/collection/at.js"],"names":["baseAt","require","baseFlatten","restParam","at","collection","props","module","exports"],"mappings":";;AAAA,IAAIA,SAASC,QAAQ,oBAAR,CAAb;AAAA,IACIC,cAAcD,QAAQ,yBAAR,CADlB;AAAA,IAEIE,YAAYF,QAAQ,uBAAR,CAFhB;;AAIA;;;;;;;;;;;;;;;;;;;;AAoBA,IAAIG,KAAKD,UAAU,UAASE,UAAT,EAAqBC,KAArB,EAA4B;AAC7C,SAAON,OAAOK,UAAP,EAAmBH,YAAYI,KAAZ,CAAnB,CAAP;AACD,CAFQ,CAAT;;AAIAC,OAAOC,OAAP,GAAiBJ,EAAjB","file":"at.js","sourcesContent":["var baseAt = require('../internal/baseAt'),\n    baseFlatten = require('../internal/baseFlatten'),\n    restParam = require('../function/restParam');\n\n/**\n * Creates an array of elements corresponding to the given keys, or indexes,\n * of `collection`. Keys may be specified as individual arguments or as arrays\n * of keys.\n *\n * @static\n * @memberOf _\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {...(number|number[]|string|string[])} [props] The property names\n *  or indexes of elements to pick, specified individually or in arrays.\n * @returns {Array} Returns the new array of picked elements.\n * @example\n *\n * _.at(['a', 'b', 'c'], [0, 2]);\n * // => ['a', 'c']\n *\n * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n * // => ['barney', 'pebbles']\n */\nvar at = restParam(function(collection, props) {\n  return baseAt(collection, baseFlatten(props));\n});\n\nmodule.exports = at;\n"]}