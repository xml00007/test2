{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/collection/invoke.js"],"names":["baseEach","require","invokePath","isArrayLike","isKey","restParam","invoke","collection","path","args","index","isFunc","isProp","result","Array","length","value","func","undefined","apply","module","exports"],"mappings":";;AAAA,IAAIA,WAAWC,QAAQ,sBAAR,CAAf;AAAA,IACIC,aAAaD,QAAQ,wBAAR,CADjB;AAAA,IAEIE,cAAcF,QAAQ,yBAAR,CAFlB;AAAA,IAGIG,QAAQH,QAAQ,mBAAR,CAHZ;AAAA,IAIII,YAAYJ,QAAQ,uBAAR,CAJhB;;AAMA;;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAIK,SAASD,UAAU,UAASE,UAAT,EAAqBC,IAArB,EAA2BC,IAA3B,EAAiC;AACtD,QAAIC,QAAQ,CAAC,CAAb;AAAA,QACIC,SAAS,OAAOH,IAAP,IAAe,UAD5B;AAAA,QAEII,SAASR,MAAMI,IAAN,CAFb;AAAA,QAGIK,SAASV,YAAYI,UAAZ,IAA0BO,MAAMP,WAAWQ,MAAjB,CAA1B,GAAqD,EAHlE;;AAKAf,aAASO,UAAT,EAAqB,UAASS,KAAT,EAAgB;AACnC,YAAIC,OAAON,SAASH,IAAT,GAAkBI,UAAUI,SAAS,IAApB,GAA4BA,MAAMR,IAAN,CAA5B,GAA0CU,SAAtE;AACAL,eAAO,EAAEH,KAAT,IAAkBO,OAAOA,KAAKE,KAAL,CAAWH,KAAX,EAAkBP,IAAlB,CAAP,GAAiCP,WAAWc,KAAX,EAAkBR,IAAlB,EAAwBC,IAAxB,CAAnD;AACD,KAHD;AAIA,WAAOI,MAAP;AACD,CAXY,CAAb;;AAaAO,OAAOC,OAAP,GAAiBf,MAAjB","file":"invoke.js","sourcesContent":["var baseEach = require('../internal/baseEach'),\n    invokePath = require('../internal/invokePath'),\n    isArrayLike = require('../internal/isArrayLike'),\n    isKey = require('../internal/isKey'),\n    restParam = require('../function/restParam');\n\n/**\n * Invokes the method at `path` of each element in `collection`, returning\n * an array of the results of each invoked method. Any additional arguments\n * are provided to each invoked method. If `methodName` is a function it is\n * invoked for, and `this` bound to, each element in `collection`.\n *\n * @static\n * @memberOf _\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Array|Function|string} path The path of the method to invoke or\n *  the function invoked per iteration.\n * @param {...*} [args] The arguments to invoke the method with.\n * @returns {Array} Returns the array of results.\n * @example\n *\n * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n * // => [[1, 5, 7], [1, 2, 3]]\n *\n * _.invoke([123, 456], String.prototype.split, '');\n * // => [['1', '2', '3'], ['4', '5', '6']]\n */\nvar invoke = restParam(function(collection, path, args) {\n  var index = -1,\n      isFunc = typeof path == 'function',\n      isProp = isKey(path),\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value) {\n    var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n    result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n  });\n  return result;\n});\n\nmodule.exports = invoke;\n"]}