{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/collection/filter.js"],"names":["arrayFilter","require","baseCallback","baseFilter","isArray","filter","collection","predicate","thisArg","func","module","exports"],"mappings":";;AAAA,IAAIA,cAAcC,QAAQ,yBAAR,CAAlB;AAAA,IACIC,eAAeD,QAAQ,0BAAR,CADnB;AAAA,IAEIE,aAAaF,QAAQ,wBAAR,CAFjB;AAAA,IAGIG,UAAUH,QAAQ,iBAAR,CAHd;;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA,SAASI,MAAT,CAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,OAAvC,EAAgD;AAC9C,MAAIC,OAAOL,QAAQE,UAAR,IAAsBN,WAAtB,GAAoCG,UAA/C;AACAI,cAAYL,aAAaK,SAAb,EAAwBC,OAAxB,EAAiC,CAAjC,CAAZ;AACA,SAAOC,KAAKH,UAAL,EAAiBC,SAAjB,CAAP;AACD;;AAEDG,OAAOC,OAAP,GAAiBN,MAAjB","file":"filter.js","sourcesContent":["var arrayFilter = require('../internal/arrayFilter'),\n    baseCallback = require('../internal/baseCallback'),\n    baseFilter = require('../internal/baseFilter'),\n    isArray = require('../lang/isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n * invoked with three arguments: (value, index|key, collection).\n *\n * If a property name is provided for `predicate` the created `_.property`\n * style callback returns the property value of the given element.\n *\n * If a value is also provided for `thisArg` the created `_.matchesProperty`\n * style callback returns `true` for elements that have a matching property\n * value, else `false`.\n *\n * If an object is provided for `predicate` the created `_.matches` style\n * callback returns `true` for elements that have the properties of the given\n * object, else `false`.\n *\n * @static\n * @memberOf _\n * @alias select\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [predicate=_.identity] The function invoked\n *  per iteration.\n * @param {*} [thisArg] The `this` binding of `predicate`.\n * @returns {Array} Returns the new filtered array.\n * @example\n *\n * _.filter([4, 5, 6], function(n) {\n *   return n % 2 == 0;\n * });\n * // => [4, 6]\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * // using the `_.matches` callback shorthand\n * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n * // => ['barney']\n *\n * // using the `_.matchesProperty` callback shorthand\n * _.pluck(_.filter(users, 'active', false), 'user');\n * // => ['fred']\n *\n * // using the `_.property` callback shorthand\n * _.pluck(_.filter(users, 'active'), 'user');\n * // => ['barney']\n */\nfunction filter(collection, predicate, thisArg) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  predicate = baseCallback(predicate, thisArg, 3);\n  return func(collection, predicate);\n}\n\nmodule.exports = filter;\n"]}