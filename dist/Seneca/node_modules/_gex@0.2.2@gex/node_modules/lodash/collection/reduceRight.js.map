{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/collection/reduceRight.js"],"names":["arrayReduceRight","require","baseEachRight","createReduce","reduceRight","module","exports"],"mappings":";;AAAA,IAAIA,mBAAmBC,QAAQ,8BAAR,CAAvB;AAAA,IACIC,gBAAgBD,QAAQ,2BAAR,CADpB;AAAA,IAEIE,eAAeF,QAAQ,0BAAR,CAFnB;;AAIA;;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAIG,cAAcD,aAAaH,gBAAb,EAA+BE,aAA/B,CAAlB;;AAEAG,OAAOC,OAAP,GAAiBF,WAAjB","file":"reduceRight.js","sourcesContent":["var arrayReduceRight = require('../internal/arrayReduceRight'),\n    baseEachRight = require('../internal/baseEachRight'),\n    createReduce = require('../internal/createReduce');\n\n/**\n * This method is like `_.reduce` except that it iterates over elements of\n * `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @alias foldr\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {*} [thisArg] The `this` binding of `iteratee`.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * var array = [[0, 1], [2, 3], [4, 5]];\n *\n * _.reduceRight(array, function(flattened, other) {\n *   return flattened.concat(other);\n * }, []);\n * // => [4, 5, 2, 3, 0, 1]\n */\nvar reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\nmodule.exports = reduceRight;\n"]}