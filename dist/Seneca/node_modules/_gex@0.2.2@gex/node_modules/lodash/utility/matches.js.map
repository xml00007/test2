{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/utility/matches.js"],"names":["baseClone","require","baseMatches","matches","source","module","exports"],"mappings":";;AAAA,IAAIA,YAAYC,QAAQ,uBAAR,CAAhB;AAAA,IACIC,cAAcD,QAAQ,yBAAR,CADlB;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,SAASE,OAAT,CAAiBC,MAAjB,EAAyB;AACvB,SAAOF,YAAYF,UAAUI,MAAV,EAAkB,IAAlB,CAAZ,CAAP;AACD;;AAEDC,OAAOC,OAAP,GAAiBH,OAAjB","file":"matches.js","sourcesContent":["var baseClone = require('../internal/baseClone'),\n    baseMatches = require('../internal/baseMatches');\n\n/**\n * Creates a function that performs a deep comparison between a given object\n * and `source`, returning `true` if the given object has equivalent property\n * values, else `false`.\n *\n * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n * numbers, `Object` objects, regexes, and strings. Objects are compared by\n * their own, not inherited, enumerable properties. For comparing a single\n * own or inherited property value see `_.matchesProperty`.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n */\nfunction matches(source) {\n  return baseMatches(baseClone(source, true));\n}\n\nmodule.exports = matches;\n"]}