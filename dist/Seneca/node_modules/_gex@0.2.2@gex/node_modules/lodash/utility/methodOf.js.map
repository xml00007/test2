{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/utility/methodOf.js"],"names":["invokePath","require","restParam","methodOf","object","args","path","module","exports"],"mappings":";;AAAA,IAAIA,aAAaC,QAAQ,wBAAR,CAAjB;AAAA,IACIC,YAAYD,QAAQ,uBAAR,CADhB;;AAGA;;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAIE,WAAWD,UAAU,UAASE,MAAT,EAAiBC,IAAjB,EAAuB;AAC9C,SAAO,UAASC,IAAT,EAAe;AACpB,WAAON,WAAWI,MAAX,EAAmBE,IAAnB,EAAyBD,IAAzB,CAAP;AACD,GAFD;AAGD,CAJc,CAAf;;AAMAE,OAAOC,OAAP,GAAiBL,QAAjB","file":"methodOf.js","sourcesContent":["var invokePath = require('../internal/invokePath'),\n    restParam = require('../function/restParam');\n\n/**\n * The opposite of `_.method`; this method creates a function that invokes\n * the method at a given path on `object`. Any additional arguments are\n * provided to the invoked method.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {Object} object The object to query.\n * @param {...*} [args] The arguments to invoke the method with.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var array = _.times(3, _.constant),\n *     object = { 'a': array, 'b': array, 'c': array };\n *\n * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n * // => [2, 0]\n *\n * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n * // => [2, 0]\n */\nvar methodOf = restParam(function(object, args) {\n  return function(path) {\n    return invokePath(object, path, args);\n  };\n});\n\nmodule.exports = methodOf;\n"]}