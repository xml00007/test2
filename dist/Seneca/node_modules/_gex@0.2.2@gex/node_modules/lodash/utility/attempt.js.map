{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/utility/attempt.js"],"names":["isError","require","restParam","attempt","func","args","apply","undefined","e","Error","module","exports"],"mappings":";;AAAA,IAAIA,UAAUC,QAAQ,iBAAR,CAAd;AAAA,IACIC,YAAYD,QAAQ,uBAAR,CADhB;;AAGA;;;;;;;;;;;;;;;;;;;;AAoBA,IAAIE,UAAUD,UAAU,UAASE,IAAT,EAAeC,IAAf,EAAqB;AAC3C,MAAI;AACF,WAAOD,KAAKE,KAAL,CAAWC,SAAX,EAAsBF,IAAtB,CAAP;AACD,GAFD,CAEE,OAAMG,CAAN,EAAS;AACT,WAAOR,QAAQQ,CAAR,IAAaA,CAAb,GAAiB,IAAIC,KAAJ,CAAUD,CAAV,CAAxB;AACD;AACF,CANa,CAAd;;AAQAE,OAAOC,OAAP,GAAiBR,OAAjB","file":"attempt.js","sourcesContent":["var isError = require('../lang/isError'),\n    restParam = require('../function/restParam');\n\n/**\n * Attempts to invoke `func`, returning either the result or the caught error\n * object. Any additional arguments are provided to `func` when it is invoked.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {Function} func The function to attempt.\n * @returns {*} Returns the `func` result or error object.\n * @example\n *\n * // avoid throwing errors for invalid selectors\n * var elements = _.attempt(function(selector) {\n *   return document.querySelectorAll(selector);\n * }, '>_>');\n *\n * if (_.isError(elements)) {\n *   elements = [];\n * }\n */\nvar attempt = restParam(function(func, args) {\n  try {\n    return func.apply(undefined, args);\n  } catch(e) {\n    return isError(e) ? e : new Error(e);\n  }\n});\n\nmodule.exports = attempt;\n"]}