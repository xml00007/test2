{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/array/xor.js"],"names":["arrayPush","require","baseDifference","baseUniq","isArrayLike","xor","index","length","arguments","array","result","module","exports"],"mappings":";;AAAA,IAAIA,YAAYC,QAAQ,uBAAR,CAAhB;AAAA,IACIC,iBAAiBD,QAAQ,4BAAR,CADrB;AAAA,IAEIE,WAAWF,QAAQ,sBAAR,CAFf;AAAA,IAGIG,cAAcH,QAAQ,yBAAR,CAHlB;;AAKA;;;;;;;;;;;;;;AAcA,SAASI,GAAT,GAAe;AACb,MAAIC,QAAQ,CAAC,CAAb;AAAA,MACIC,SAASC,UAAUD,MADvB;;AAGA,SAAO,EAAED,KAAF,GAAUC,MAAjB,EAAyB;AACvB,QAAIE,QAAQD,UAAUF,KAAV,CAAZ;AACA,QAAIF,YAAYK,KAAZ,CAAJ,EAAwB;AACtB,UAAIC,SAASA,SACTV,UAAUE,eAAeQ,MAAf,EAAuBD,KAAvB,CAAV,EAAyCP,eAAeO,KAAf,EAAsBC,MAAtB,CAAzC,CADS,GAETD,KAFJ;AAGD;AACF;AACD,SAAOC,SAASP,SAASO,MAAT,CAAT,GAA4B,EAAnC;AACD;;AAEDC,OAAOC,OAAP,GAAiBP,GAAjB","file":"xor.js","sourcesContent":["var arrayPush = require('../internal/arrayPush'),\n    baseDifference = require('../internal/baseDifference'),\n    baseUniq = require('../internal/baseUniq'),\n    isArrayLike = require('../internal/isArrayLike');\n\n/**\n * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n * of the provided arrays.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of values.\n * @example\n *\n * _.xor([1, 2], [4, 2]);\n * // => [1, 4]\n */\nfunction xor() {\n  var index = -1,\n      length = arguments.length;\n\n  while (++index < length) {\n    var array = arguments[index];\n    if (isArrayLike(array)) {\n      var result = result\n        ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n        : array;\n    }\n  }\n  return result ? baseUniq(result) : [];\n}\n\nmodule.exports = xor;\n"]}