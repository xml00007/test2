{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/array/takeRight.js"],"names":["baseSlice","require","isIterateeCall","takeRight","array","n","guard","length","module","exports"],"mappings":";;AAAA,IAAIA,YAAYC,QAAQ,uBAAR,CAAhB;AAAA,IACIC,iBAAiBD,QAAQ,4BAAR,CADrB;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,SAASE,SAAT,CAAmBC,KAAnB,EAA0BC,CAA1B,EAA6BC,KAA7B,EAAoC;AAClC,MAAIC,SAASH,QAAQA,MAAMG,MAAd,GAAuB,CAApC;AACA,MAAI,CAACA,MAAL,EAAa;AACX,WAAO,EAAP;AACD;AACD,MAAID,QAAQJ,eAAeE,KAAf,EAAsBC,CAAtB,EAAyBC,KAAzB,CAAR,GAA0CD,KAAK,IAAnD,EAAyD;AACvDA,QAAI,CAAJ;AACD;AACDA,MAAIE,UAAU,CAACF,CAAD,IAAM,CAAhB,CAAJ;AACA,SAAOL,UAAUI,KAAV,EAAiBC,IAAI,CAAJ,GAAQ,CAAR,GAAYA,CAA7B,CAAP;AACD;;AAEDG,OAAOC,OAAP,GAAiBN,SAAjB","file":"takeRight.js","sourcesContent":["var baseSlice = require('../internal/baseSlice'),\n    isIterateeCall = require('../internal/isIterateeCall');\n\n/**\n * Creates a slice of `array` with `n` elements taken from the end.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to take.\n * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.takeRight([1, 2, 3]);\n * // => [3]\n *\n * _.takeRight([1, 2, 3], 2);\n * // => [2, 3]\n *\n * _.takeRight([1, 2, 3], 5);\n * // => [1, 2, 3]\n *\n * _.takeRight([1, 2, 3], 0);\n * // => []\n */\nfunction takeRight(array, n, guard) {\n  var length = array ? array.length : 0;\n  if (!length) {\n    return [];\n  }\n  if (guard ? isIterateeCall(array, n, guard) : n == null) {\n    n = 1;\n  }\n  n = length - (+n || 0);\n  return baseSlice(array, n < 0 ? 0 : n);\n}\n\nmodule.exports = takeRight;\n"]}