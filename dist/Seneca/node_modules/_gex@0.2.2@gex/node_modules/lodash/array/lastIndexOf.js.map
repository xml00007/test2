{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/array/lastIndexOf.js"],"names":["binaryIndex","require","indexOfNaN","nativeMax","Math","max","nativeMin","min","lastIndexOf","array","value","fromIndex","length","index","other","module","exports"],"mappings":";;AAAA,IAAIA,cAAcC,QAAQ,yBAAR,CAAlB;AAAA,IACIC,aAAaD,QAAQ,wBAAR,CADjB;;AAGA;AACA,IAAIE,YAAYC,KAAKC,GAArB;AAAA,IACIC,YAAYF,KAAKG,GADrB;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,KAA5B,EAAmCC,SAAnC,EAA8C;AAC5C,MAAIC,SAASH,QAAQA,MAAMG,MAAd,GAAuB,CAApC;AACA,MAAI,CAACA,MAAL,EAAa;AACX,WAAO,CAAC,CAAR;AACD;AACD,MAAIC,QAAQD,MAAZ;AACA,MAAI,OAAOD,SAAP,IAAoB,QAAxB,EAAkC;AAChCE,YAAQ,CAACF,YAAY,CAAZ,GAAgBR,UAAUS,SAASD,SAAnB,EAA8B,CAA9B,CAAhB,GAAmDL,UAAUK,aAAa,CAAvB,EAA0BC,SAAS,CAAnC,CAApD,IAA6F,CAArG;AACD,GAFD,MAEO,IAAID,SAAJ,EAAe;AACpBE,YAAQb,YAAYS,KAAZ,EAAmBC,KAAnB,EAA0B,IAA1B,IAAkC,CAA1C;AACA,QAAII,QAAQL,MAAMI,KAAN,CAAZ;AACA,QAAIH,UAAUA,KAAV,GAAmBA,UAAUI,KAA7B,GAAuCA,UAAUA,KAArD,EAA6D;AAC3D,aAAOD,KAAP;AACD;AACD,WAAO,CAAC,CAAR;AACD;AACD,MAAIH,UAAUA,KAAd,EAAqB;AACnB,WAAOR,WAAWO,KAAX,EAAkBI,KAAlB,EAAyB,IAAzB,CAAP;AACD;AACD,SAAOA,OAAP,EAAgB;AACd,QAAIJ,MAAMI,KAAN,MAAiBH,KAArB,EAA4B;AAC1B,aAAOG,KAAP;AACD;AACF;AACD,SAAO,CAAC,CAAR;AACD;;AAEDE,OAAOC,OAAP,GAAiBR,WAAjB","file":"lastIndexOf.js","sourcesContent":["var binaryIndex = require('../internal/binaryIndex'),\n    indexOfNaN = require('../internal/indexOfNaN');\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * This method is like `_.indexOf` except that it iterates over elements of\n * `array` from right to left.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n *  or `true` to perform a binary search on a sorted array.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.lastIndexOf([1, 2, 1, 2], 2);\n * // => 3\n *\n * // using `fromIndex`\n * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n * // => 1\n *\n * // performing a binary search\n * _.lastIndexOf([1, 1, 2, 2], 2, true);\n * // => 3\n */\nfunction lastIndexOf(array, value, fromIndex) {\n  var length = array ? array.length : 0;\n  if (!length) {\n    return -1;\n  }\n  var index = length;\n  if (typeof fromIndex == 'number') {\n    index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n  } else if (fromIndex) {\n    index = binaryIndex(array, value, true) - 1;\n    var other = array[index];\n    if (value === value ? (value === other) : (other !== other)) {\n      return index;\n    }\n    return -1;\n  }\n  if (value !== value) {\n    return indexOfNaN(array, index, true);\n  }\n  while (index--) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = lastIndexOf;\n"]}