{"version":3,"sources":["../cluster.js"],"names":["cluster","require","http","numCPUs","cpus","length","isMaster","console","log","process","pid","i","fork","on","worker","code","signal","createServer","req","res","writeHead","end","listen"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAME,UAAUF,QAAQ,IAAR,EAAcG,IAAd,GAAqBC,MAArC;;AAEA,IAAIL,QAAQM,QAAZ,EAAsB;AACpBC,UAAQC,GAAR,yBAAmBC,QAAQC,GAA3B;;AAEA;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIR,OAApB,EAA6BQ,GAA7B,EAAkC;AAChCX,YAAQY,IAAR;AACD;;AAEDZ,UAAQa,EAAR,CAAW,MAAX,EAAmB,UAACC,MAAD,EAASC,IAAT,EAAeC,MAAf,EAA0B;AAC3CT,YAAQC,GAAR,+BAAoBM,OAAOL,OAAP,CAAeC,GAAnC;AACD,GAFD;AAGD,CAXD,MAWO;AACL;AACA;AACAR,OAAKe,YAAL,CAAkB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC9BA,QAAIC,SAAJ,CAAc,GAAd;AACAb,YAAQC,GAAR,CAAYC,QAAQC,GAApB;AACAS,QAAIE,GAAJ,CAAQ,eAAR;AACD,GAJD,EAIGC,MAJH,CAIU,IAJV;;AAMAf,UAAQC,GAAR,+BAAoBC,QAAQC,GAA5B;AACD","file":"cluster.js","sourcesContent":["const cluster = require('cluster');\nconst http = require('http');\nconst numCPUs = require('os').cpus().length;\n\nif (cluster.isMaster) {\n  console.log(`主进程 ${process.pid} 正在运行`);\n\n  // 衍生工作进程。\n  for (let i = 0; i < numCPUs; i++) {\n    cluster.fork();\n  }\n\n  cluster.on('exit', (worker, code, signal) => {\n    console.log(`工作进程 ${worker.process.pid} 已退出`);\n  });\n} else {\n  // 工作进程可以共享任何 TCP 连接。\n  // 在本例子中，共享的是一个 HTTP 服务器。\n  http.createServer((req, res) => {\n    res.writeHead(200);\n    console.log(process.pid);\n    res.end('hello world\\n');\n  }).listen(8000);\n\n  console.log(`工作进程 ${process.pid} 已启动`);\n}"]}