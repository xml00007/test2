{"version":3,"sources":["../../linux_doc/index.js"],"names":["fs","require","request","cheerio","mkdirp","Iconv","htmlparser2","url","dir","err","console","log","obj","files","getPaths","name","encoding","error","response","body","bodyOld","convert","toString","statusCode","dom","parseDOM","$","load","length","each","newName","src","attr","text","data","find","replace","size","children","time","title","year","split","month","day","path","createTime","linuxDoc","create","download","filename"],"mappings":"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","file":"index.js","sourcesContent":["//依赖模块\nlet fs = require('fs');\nlet request = require('request');\nlet cheerio = require('cheerio');\nlet mkdirp = require('mkdirp');\nlet Iconv = require('iconv').Iconv;\nconst htmlparser2 = require('htmlparser2');\nimport Model from '../sequelize';\n\n// 数据库链接\n\n//目标网址\nlet url = 'http://linux.linuxidc.com/index.php';\n\n\n//本地存储目录\nlet dir = './images';\n\n//创建目录\nmkdirp(dir, function(err) {\n  if (err) {\n    console.log(err);\n  }\n});\n\nlet obj = {};\nlet files = {};\n\n//发送请求\nfunction getPaths(url, name) {\n  request({url, encoding: null}, function(error, response, body) {\n    // body = new Iconv('GBK', 'UTF-8').convert(body).toString();\n    const bodyOld = body;\n    try {\n      body = new Iconv('GBK', 'UTF-8').convert(body).toString();\n    } catch (err) {\n      body = bodyOld;\n    }\n    if (!error && response.statusCode === 200) {\n      const dom = htmlparser2.parseDOM(body);\n      let $ = cheerio.load(dom);\n\n      if ($('tr.folder_bg a').length > 0) {\n        $('tr.folder_bg a').each(function() {\n          let newName = name;\n          let src = 'http://linux.linuxidc.com/' + $(this).attr('href');\n          let text = $(this).text();\n          // console.log('进入文件夹', src);\n          obj[text] = {};\n          newName += '_' + text;\n          getPaths(src, newName);\n        });\n      }\n      if ($('tr.file_bg1').length > 0) {\n        $('tr.file_bg1').each(function() {\n          let data = {};\n          let newName = name;\n          let src = 'http://linux.linuxidc.com/' + $(this).find('a').attr('href');\n          let text = $(this).find('a').text().replace(/\\./g, '_').replace(/-/g, '_');\n          let size = $(this).children()[1].children[0].data;\n          let time = $(this).children()[2].children[0].data;\n          newName += '_' + text;\n          data.title = text;\n          data.size = size;\n          data.src = src;\n          data.year = newName.split('_')[1];\n          data.month = newName.split('_')[2];\n          data.day = newName.split('_')[3];\n          data.path = newName;\n          data.createTime = time;\n          Model.linuxDoc.create(data);\n          console.log('正在下载2222222', newName);\n          // download(src, dir, Math.floor(Math.random() * 100000) + src.substr(-4, 4));\n        });\n      }\n    }\n  });\n}\n\n//下载方法\nlet download = function(url, dir, filename) {\n  // console.log('files', url, dir, filename);\n  // request.head(url, function(err, res, body) {\n  //   request(url).pipe(fs.createWriteStream(dir + '/' + filename));\n  // });\n};\n\ngetPaths(url, '');\n// console.log(obj);\n\n// fs.writeFile('./content.js', JSON.stringify(obj), (err) => {\n//   console.log(err, '写入完成');\n// });\n"]}