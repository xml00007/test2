{"version":3,"sources":["../../mockServerClient/client1.js"],"names":["mockServer","require","mockServerClient","proxyClient","remote","remoteProxy","reset","mockSimpleResponse","name","mockAnyResponse","JSON","stringify"],"mappings":";;AAAA;;;;AAKA;AACA,IAAIA,aAAaC,QAAQ,mBAAR,CAAjB;AAAA,IACIC,mBAAmBF,WAAWE,gBADlC;AAAA,IACoD;AAChDC,cAAcH,WAAWG,WAF7B,C,CAE0C;;AAE1C,IAAIC,SAASF,iBAAiB,WAAjB,EAA8B,IAA9B,CAAb;AAAA,IACIG,cAAcF,YAAY,WAAZ,EAAyB,IAAzB,CADlB;;AAGA;AACAC,OAAOE,KAAP;;AAEA;AACA;AACAF,OAAOG,kBAAP,CAA0B,WAA1B,EAAuC,EAAEC,MAAM,OAAR,EAAvC,EAAyD,GAAzD;;AAEA;AACA;AACAJ,OAAOK,eAAP,CAAuB;AACrB,iBAAe;AACb,cAAU,MADG;AAEb,YAAQ,YAFK;AAGb,6BAAyB,CACvB;AACE,cAAQ,MADV;AAEE,gBAAU,CAAE,MAAF;AAFZ,KADuB,CAHZ;AASb,YAAQ;AACN,cAAQ,QADF;AAEN,eAAS;AAFH;AATK,GADM,EAclB;AACH,kBAAgB;AACd,kBAAc,GADA;AAEd,YAAQC,KAAKC,SAAL,CAAe,EAACH,MAAM,OAAP,EAAf,CAFM;AAGd,aAAS;AACP,kBAAY,cADL;AAEP,eAAS;AAFF;AAHK,GAfK,EAsBlB;AACH,WAAS;AACP,sBAAkB,CADX;AAEP,iBAAa;AAFN;AAvBY,CAAvB","file":"client1.js","sourcesContent":["/**\n * Created by Arthur on 2017/7/14.\n */\n\n\n/*File: client1.js*/\nvar mockServer = require('mockserver-client'),\n    mockServerClient = mockServer.mockServerClient, // MockServer client\n    proxyClient = mockServer.proxyClient; // proxy client\n\nvar remote = mockServerClient('localhost', 1080),\n    remoteProxy = proxyClient('localhost', 1090);\n\n// 使用之前清除服务器里边已经注册的 mockup 信息，因为可能会影响当前测试结果或者开发结果呢。\nremote.reset();\n\n// 简单的设置想要的response信息\n// curl -X POST http://localhost:1080/api/demo\nremote.mockSimpleResponse('/api/demo', { name: 'value'}, 203);\n\n// 精确的设置想要的response消息，会参考输入的情况来判断怎么跑\n// curl -X POST 'http://localhost:1080/api/demo2?test=true' -d someBody\nremote.mockAnyResponse({\n  'httpRequest': {\n    'method': 'POST',\n    'path': '/api/demo2',\n    'queryStringParameters': [\n      {\n        'name': 'test',\n        'values': [ 'true' ]\n      }\n    ],\n    'body': {\n      'type': \"STRING\",\n      'value': 'someBody'\n    }\n  }, /*httpRequest*/\n  'httpResponse': {\n    'statusCode': 200,\n    'body': JSON.stringify({name: 'value'}),\n    'delay': {\n      'timeUnit': 'MILLISECONDS',\n      'value': 250\n    }\n  }, /*httpResponse*/\n  'times': {\n    'remainingTimes': 1,\n    'unlimited': false\n  }\n});"]}