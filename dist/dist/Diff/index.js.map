{"version":3,"sources":["../../Diff/index.js"],"names":["oldData","require","newData","xlsx","default","_","fs","obj","getUrl","data","url","prop","typeText","type","console","log","type1","error","_array","length","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","next","done","arr","value","err","return","o","s","Object","prototype","toString","call","tt","slice","indexOf","toLowerCase","allDiff","datan","get","type2","oldType","newType","_prop","_url","_type","_datan","_type2","i","allDiffnew","keys","sort","forEach","item","array","a","push","substring","writeXls","datas","buffer","build","name","writeFileSync"],"mappings":"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","file":"index.js","sourcesContent":["'use strict';\n\n// import creditOld from './creditOld';\n// import creditNew from './creditNew';\n\n// const oldData = require('./kaNiuData/credit_old_2');\n// const newData = require('./creditNew');\n\n// const oldData = require('./kaNiuData/bianliang_old_2');\n// const newData = require('./bianliangNew');\n\n// const oldData = require('./Data/wacaiCreditOld');\n// const newData = require('./Data/wacaiCreditNew');\n\n\nlet oldData = require('./Data/applistAndHistory_old');\nlet newData = require('./Data/applistAndHistory_new');\nlet xlsx = require('node-xlsx').default;\nlet _ = require('lodash');\nlet fs = require('fs');\n\nlet obj = {};\n\nfunction getUrl(data, url) {\n  for (let prop in data) {\n    let typeText = type(data[prop]);\n    console.log('prop', prop, typeText);\n    if (typeText !== 'object' && typeText !== 'array') {\n      let type1 = null;\n      switch (typeText) {\n        case 'NumberLong':\n          type1 = 'NumberLong';\n          break;\n        case 'NumberInt':\n          type1 = 'NumberInt';\n          break;\n        case 'string':\n          type1 = 'string';\n          break;\n        case 'number':\n          type1 = 'number';\n          break;\n        default:\n          console.error('111111111111111111111', typeText);\n          type1 = 'string';\n          break;\n      }\n      obj[url + '.' + prop] = {\n        url: url + '.' + prop,\n        type1: type1\n      };\n    }\n    if (typeText === 'object') {\n      getUrl(data[prop], url + '.' + prop);\n    }\n    if (typeText === 'array') {\n      let _array = data[prop];\n      if (_array.length > 0) {\n        let _iteratorNormalCompletion = true;\n        let _didIteratorError = false;\n        let _iteratorError = undefined;\n\n        try {\n          for (let _iterator = _array[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            let arr = _step.value;\n\n            getUrl(arr, url + '.' + prop + '[0]');\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction type(o) {\n  let s = Object.prototype.toString.call(o);\n  let tt = s.slice(s.indexOf(' ') + 1, s.length - 1).toLowerCase();\n  if (o === 'NumberLong') {\n    return 'NumberLong';\n  }\n  if (o === 'NumberInt') {\n    return 'NumberInt';\n  }\n  return tt;\n}\n\nlet allDiff = {};\n// 得到老数据的所有路径及字段类型\ngetUrl(oldData.data, 'data');\n\n//  对比新数据 找到差异\nfor (let prop in obj) {\n  let url = obj[prop].url;\n  let type1 = obj[prop].type1;\n  let datan = _.get(newData, url);\n  let type2 = type(datan);\n  if (!allDiff[url]) {\n    allDiff[url] = {\n      oldType: type1,\n      newType: type2\n    };\n  }\n}\nobj = {};\n\n// 得到新数据的所有路径及字段类型\ngetUrl(newData.data, 'data');\n\n//  对比新数据 找到差异\nfor (let _prop in obj) {\n  let _url = obj[_prop].url;\n  let _type = obj[_prop].type1;\n  let _datan = _.get(oldData, _url);\n  let _type2 = type(_datan);\n  let i = 0;\n  if (!allDiff[_url]) {\n    i = i + 1;\n    allDiff[_url] = {\n      oldType: _type2,\n      newType: _type,\n      i: i\n    };\n  }\n}\n\n// 排序\nlet allDiffnew = {};\nObject.keys(allDiff).sort().forEach(function (item) {\n  allDiffnew[item] = allDiff[item];\n});\n\nlet array = [];\nfor (let a in allDiffnew) {\n  //  只要类型有差异的数据\n  if (allDiffnew[a].oldType !== allDiffnew[a].newType) {\n    let arr = [];\n    arr.push(a.substring(a.indexOf('.') + 1));\n    arr.push(allDiffnew[a].oldType);\n    arr.push(allDiffnew[a].newType);\n    array.push(arr);\n  }\n}\n\nfunction writeXls(datas) {\n  let buffer = xlsx.build([{ name: 'mySheetName', data: datas }]);\n  fs.writeFileSync('applistAndHistory_02.xlsx', buffer, 'binary');\n}\n\nwriteXls(array);\n//# sourceMappingURL=index.js.map"]}