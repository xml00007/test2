{"version":3,"sources":["../../../Diff/Data/getType.js"],"names":["newData","require","xlsx","default","_","fs","obj","getUrl","data","url","prop","typeText","type","console","log","type1","error","_array","length","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","next","done","arr","value","err","return","o","s","Object","prototype","toString","call","tt","slice","indexOf","toLowerCase","array","a","push","substring","writeXls","datas","buffer","build","name","writeFileSync"],"mappings":"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","file":"getType.js","sourcesContent":["'use strict';\n\nlet newData = require('./applistAndHistory_new');\nlet xlsx = require('node-xlsx').default;\nlet _ = require('lodash');\nlet fs = require('fs');\n\nlet obj = {};\n\nfunction getUrl(data, url) {\n  for (let prop in data) {\n    let typeText = type(data[prop]);\n    console.log('prop', prop, typeText);\n    if (typeText !== 'object' && typeText !== 'array') {\n      let type1 = null;\n      switch (typeText) {\n        case 'NumberLong':\n          type1 = 'NumberLong';\n          break;\n        case 'NumberInt':\n          type1 = 'NumberInt';\n          break;\n        case 'string':\n          type1 = 'string';\n          break;\n        case 'number':\n          type1 = 'number';\n          break;\n        default:\n          console.error('111111111111111111111', typeText);\n          type1 = 'string';\n          break;\n      }\n      obj[url + '.' + prop] = {\n        url: url + '.' + prop,\n        type1: type1\n      };\n    }\n    if (typeText === 'object') {\n      getUrl(data[prop], url + '.' + prop);\n    }\n    if (typeText === 'array') {\n      let _array = data[prop];\n      if (_array.length > 0) {\n        let _iteratorNormalCompletion = true;\n        let _didIteratorError = false;\n        let _iteratorError = undefined;\n\n        try {\n          for (let _iterator = _array[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            let arr = _step.value;\n\n            getUrl(arr, url + '.' + prop + '[0]');\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n    }\n  }\n}\nfunction type(o) {\n  let s = Object.prototype.toString.call(o);\n  let tt = s.slice(s.indexOf(' ') + 1, s.length - 1).toLowerCase();\n  if (o === 'NumberLong') {\n    return 'NumberLong';\n  }\n  if (o === 'NumberInt') {\n    return 'NumberInt';\n  }\n  return tt;\n}\n\ngetUrl(newData.data, 'data');\n\nlet array = [];\nfor (let a in obj) {\n  let arr = [];\n  arr.push(a.substring(a.indexOf('.') + 1));\n  arr.push(obj[a].type1);\n  array.push(arr);\n}\n\nfunction writeXls(datas) {\n  let buffer = xlsx.build([{ name: 'mySheetName', data: datas }]);\n  fs.writeFileSync('applistAndHistory_new.xlsx', buffer, 'binary');\n}\n\nwriteXls(array);\n//# sourceMappingURL=getType.js.map"]}