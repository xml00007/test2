{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/chain/wrapperConcat.js"],"names":["arrayConcat","require","baseFlatten","isArray","restParam","toObject","wrapperConcat","values","thru","array","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,cAAcC,QAAQ,yBAAR,CAAlB;AAAA,IACIC,cAAcD,QAAQ,yBAAR,CADlB;AAAA,IAEIE,UAAUF,QAAQ,iBAAR,CAFd;AAAA,IAGIG,YAAYH,QAAQ,uBAAR,CAHhB;AAAA,IAIII,WAAWJ,QAAQ,sBAAR,CAJf;;AAMA;;;;;;;;;;;;;;;;;;;;AAoBA,IAAIK,gBAAgBF,UAAU,UAAUG,MAAV,EAAkB;AAC9CA,WAASL,YAAYK,MAAZ,CAAT;AACA,SAAO,KAAKC,IAAL,CAAU,UAAUC,KAAV,EAAiB;AAChC,WAAOT,YAAYG,QAAQM,KAAR,IAAiBA,KAAjB,GAAyB,CAACJ,SAASI,KAAT,CAAD,CAArC,EAAwDF,MAAxD,CAAP;AACD,GAFM,CAAP;AAGD,CALmB,CAApB;;AAOAG,OAAOC,OAAP,GAAiBL,aAAjB;AACA","file":"wrapperConcat.js","sourcesContent":["'use strict';\n\nlet arrayConcat = require('../internal/arrayConcat'),\n    baseFlatten = require('../internal/baseFlatten'),\n    isArray = require('../lang/isArray'),\n    restParam = require('../function/restParam'),\n    toObject = require('../internal/toObject');\n\n/**\n * Creates a new array joining a wrapped array with any additional arrays\n * and/or values.\n *\n * @name concat\n * @memberOf _\n * @category Chain\n * @param {...*} [values] The values to concatenate.\n * @returns {Array} Returns the new concatenated array.\n * @example\n *\n * let array = [1];\n * let wrapped = _(array).concat(2, [3], [[4]]);\n *\n * console.log(wrapped.value());\n * // => [1, 2, 3, [4]]\n *\n * console.log(array);\n * // => [1]\n */\nlet wrapperConcat = restParam(function (values) {\n  values = baseFlatten(values);\n  return this.thru(function (array) {\n    return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n  });\n});\n\nmodule.exports = wrapperConcat;\n//# sourceMappingURL=wrapperConcat.js.map"]}