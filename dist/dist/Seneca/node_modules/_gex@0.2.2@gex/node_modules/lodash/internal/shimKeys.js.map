{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/shimKeys.js"],"names":["isArguments","require","isArray","isIndex","isLength","keysIn","objectProto","Object","prototype","hasOwnProperty","shimKeys","object","props","propsLength","length","allowIndexes","index","result","key","call","push","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,cAAcC,QAAQ,qBAAR,CAAlB;AAAA,IACIC,UAAUD,QAAQ,iBAAR,CADd;AAAA,IAEIE,UAAUF,QAAQ,WAAR,CAFd;AAAA,IAGIG,WAAWH,QAAQ,YAAR,CAHf;AAAA,IAIII,SAASJ,QAAQ,kBAAR,CAJb;;AAMA;AACA,IAAIK,cAAcC,OAAOC,SAAzB;;AAEA;AACA,IAAIC,iBAAiBH,YAAYG,cAAjC;;AAEA;;;;;;;;AAQA,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;AACxB,QAAIC,QAAQP,OAAOM,MAAP,CAAZ;AAAA,QACIE,cAAcD,MAAME,MADxB;AAAA,QAEIA,SAASD,eAAeF,OAAOG,MAFnC;;AAIA,QAAIC,eAAe,CAAC,CAACD,MAAF,IAAYV,SAASU,MAAT,CAAZ,KAAiCZ,QAAQS,MAAR,KAAmBX,YAAYW,MAAZ,CAApD,CAAnB;;AAEA,QAAIK,QAAQ,CAAC,CAAb;AAAA,QACIC,SAAS,EADb;;AAGA,WAAO,EAAED,KAAF,GAAUH,WAAjB,EAA8B;AAC5B,YAAIK,MAAMN,MAAMI,KAAN,CAAV;AACA,YAAID,gBAAgBZ,QAAQe,GAAR,EAAaJ,MAAb,CAAhB,IAAwCL,eAAeU,IAAf,CAAoBR,MAApB,EAA4BO,GAA5B,CAA5C,EAA8E;AAC5ED,mBAAOG,IAAP,CAAYF,GAAZ;AACD;AACF;AACD,WAAOD,MAAP;AACD;;AAEDI,OAAOC,OAAP,GAAiBZ,QAAjB;AACA","file":"shimKeys.js","sourcesContent":["'use strict';\n\nlet isArguments = require('../lang/isArguments'),\n    isArray = require('../lang/isArray'),\n    isIndex = require('./isIndex'),\n    isLength = require('./isLength'),\n    keysIn = require('../object/keysIn');\n\n/** Used for native method references. */\nlet objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nlet hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A fallback implementation of `Object.keys` which creates an array of the\n * own enumerable property names of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction shimKeys(object) {\n  let props = keysIn(object),\n      propsLength = props.length,\n      length = propsLength && object.length;\n\n  let allowIndexes = !!length && isLength(length) && (isArray(object) || isArguments(object));\n\n  let index = -1,\n      result = [];\n\n  while (++index < propsLength) {\n    let key = props[index];\n    if (allowIndexes && isIndex(key, length) || hasOwnProperty.call(object, key)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = shimKeys;\n//# sourceMappingURL=shimKeys.js.map"]}