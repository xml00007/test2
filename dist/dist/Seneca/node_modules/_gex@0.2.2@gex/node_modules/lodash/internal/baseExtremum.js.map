{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/baseExtremum.js"],"names":["baseEach","require","baseExtremum","collection","iteratee","comparator","exValue","computed","result","value","index","current","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,WAAWC,QAAQ,YAAR,CAAf;;AAEA;;;;;;;;;;;;AAYA,SAASC,YAAT,CAAsBC,UAAtB,EAAkCC,QAAlC,EAA4CC,UAA5C,EAAwDC,OAAxD,EAAiE;AAC/D,MAAIC,WAAWD,OAAf;AAAA,MACIE,SAASD,QADb;;AAGAP,WAASG,UAAT,EAAqB,UAAUM,KAAV,EAAiBC,KAAjB,EAAwBP,UAAxB,EAAoC;AACvD,QAAIQ,UAAU,CAACP,SAASK,KAAT,EAAgBC,KAAhB,EAAuBP,UAAvB,CAAf;AACA,QAAIE,WAAWM,OAAX,EAAoBJ,QAApB,KAAiCI,YAAYL,OAAZ,IAAuBK,YAAYH,MAAxE,EAAgF;AAC9ED,iBAAWI,OAAX;AACAH,eAASC,KAAT;AACD;AACF,GAND;AAOA,SAAOD,MAAP;AACD;;AAEDI,OAAOC,OAAP,GAAiBX,YAAjB;AACA","file":"baseExtremum.js","sourcesContent":["'use strict';\n\nlet baseEach = require('./baseEach');\n\n/**\n * Gets the extremum value of `collection` invoking `iteratee` for each value\n * in `collection` to generate the criterion by which the value is ranked.\n * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n *\n * @private\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} comparator The function used to compare values.\n * @param {*} exValue The initial extremum value.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(collection, iteratee, comparator, exValue) {\n  let computed = exValue,\n      result = computed;\n\n  baseEach(collection, function (value, index, collection) {\n    let current = +iteratee(value, index, collection);\n    if (comparator(current, computed) || current === exValue && current === result) {\n      computed = current;\n      result = value;\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseExtremum;\n//# sourceMappingURL=baseExtremum.js.map"]}