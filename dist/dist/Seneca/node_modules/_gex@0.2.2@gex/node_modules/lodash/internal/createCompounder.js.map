{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/createCompounder.js"],"names":["deburr","require","words","createCompounder","callback","string","index","array","length","result","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,SAASC,QAAQ,kBAAR,CAAb;AAAA,IACIC,QAAQD,QAAQ,iBAAR,CADZ;;AAGA;;;;;;;;AAQA,SAASE,gBAAT,CAA0BC,QAA1B,EAAoC;AAClC,SAAO,UAAUC,MAAV,EAAkB;AACvB,QAAIC,QAAQ,CAAC,CAAb;AAAA,QACIC,QAAQL,MAAMF,OAAOK,MAAP,CAAN,CADZ;AAAA,QAEIG,SAASD,MAAMC,MAFnB;AAAA,QAGIC,SAAS,EAHb;;AAKA,WAAO,EAAEH,KAAF,GAAUE,MAAjB,EAAyB;AACvBC,eAASL,SAASK,MAAT,EAAiBF,MAAMD,KAAN,CAAjB,EAA+BA,KAA/B,CAAT;AACD;AACD,WAAOG,MAAP;AACD,GAVD;AAWD;;AAEDC,OAAOC,OAAP,GAAiBR,gBAAjB;AACA","file":"createCompounder.js","sourcesContent":["'use strict';\n\nlet deburr = require('../string/deburr'),\n    words = require('../string/words');\n\n/**\n * Creates a function that produces compound words out of the words in a\n * given string.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function (string) {\n    let index = -1,\n        array = words(deburr(string)),\n        length = array.length,\n        result = '';\n\n    while (++index < length) {\n      result = callback(result, array[index], index);\n    }\n    return result;\n  };\n}\n\nmodule.exports = createCompounder;\n//# sourceMappingURL=createCompounder.js.map"]}