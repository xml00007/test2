{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/toPath.js"],"names":["baseToString","require","isArray","rePropName","reEscapeChar","toPath","value","result","replace","match","number","quote","string","push","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,eAAeC,QAAQ,gBAAR,CAAnB;AAAA,IACIC,UAAUD,QAAQ,iBAAR,CADd;;AAGA;AACA,IAAIE,aAAa,uEAAjB;;AAEA;AACA,IAAIC,eAAe,UAAnB;;AAEA;;;;;;;AAOA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,MAAIJ,QAAQI,KAAR,CAAJ,EAAoB;AAClB,WAAOA,KAAP;AACD;AACD,MAAIC,SAAS,EAAb;AACAP,eAAaM,KAAb,EAAoBE,OAApB,CAA4BL,UAA5B,EAAwC,UAAUM,KAAV,EAAiBC,MAAjB,EAAyBC,KAAzB,EAAgCC,MAAhC,EAAwC;AAC9EL,WAAOM,IAAP,CAAYF,QAAQC,OAAOJ,OAAP,CAAeJ,YAAf,EAA6B,IAA7B,CAAR,GAA6CM,UAAUD,KAAnE;AACD,GAFD;AAGA,SAAOF,MAAP;AACD;;AAEDO,OAAOC,OAAP,GAAiBV,MAAjB;AACA","file":"toPath.js","sourcesContent":["'use strict';\n\nlet baseToString = require('./baseToString'),\n    isArray = require('../lang/isArray');\n\n/** Used to match property names within property paths. */\nlet rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n/** Used to match backslashes in property paths. */\nlet reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `value` to property path array if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Array} Returns the property path array.\n */\nfunction toPath(value) {\n  if (isArray(value)) {\n    return value;\n  }\n  let result = [];\n  baseToString(value).replace(rePropName, function (match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n}\n\nmodule.exports = toPath;\n//# sourceMappingURL=toPath.js.map"]}