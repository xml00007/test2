{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/baseIndexOf.js"],"names":["indexOfNaN","require","baseIndexOf","array","value","fromIndex","index","length","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,aAAaC,QAAQ,cAAR,CAAjB;;AAEA;;;;;;;;;AASA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,KAA5B,EAAmCC,SAAnC,EAA8C;AAC5C,MAAID,UAAUA,KAAd,EAAqB;AACnB,WAAOJ,WAAWG,KAAX,EAAkBE,SAAlB,CAAP;AACD;AACD,MAAIC,QAAQD,YAAY,CAAxB;AAAA,MACIE,SAASJ,MAAMI,MADnB;;AAGA,SAAO,EAAED,KAAF,GAAUC,MAAjB,EAAyB;AACvB,QAAIJ,MAAMG,KAAN,MAAiBF,KAArB,EAA4B;AAC1B,aAAOE,KAAP;AACD;AACF;AACD,SAAO,CAAC,CAAR;AACD;;AAEDE,OAAOC,OAAP,GAAiBP,WAAjB;AACA","file":"baseIndexOf.js","sourcesContent":["'use strict';\n\nlet indexOfNaN = require('./indexOfNaN');\n\n/**\n * The base implementation of `_.indexOf` without support for binary searches.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  if (value !== value) {\n    return indexOfNaN(array, fromIndex);\n  }\n  let index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseIndexOf;\n//# sourceMappingURL=baseIndexOf.js.map"]}