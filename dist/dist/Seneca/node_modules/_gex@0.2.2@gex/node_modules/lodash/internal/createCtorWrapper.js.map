{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/createCtorWrapper.js"],"names":["baseCreate","require","isObject","createCtorWrapper","Ctor","args","arguments","length","thisBinding","prototype","result","apply","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,aAAaC,QAAQ,cAAR,CAAjB;AAAA,IACIC,WAAWD,QAAQ,kBAAR,CADf;;AAGA;;;;;;;;AAQA,SAASE,iBAAT,CAA2BC,IAA3B,EAAiC;AAC/B,SAAO,YAAY;AACjB;AACA;AACA;AACA,QAAIC,OAAOC,SAAX;AACA,YAAQD,KAAKE,MAAb;AACE,WAAK,CAAL;AACE,eAAO,IAAIH,IAAJ,EAAP;AACF,WAAK,CAAL;AACE,eAAO,IAAIA,IAAJ,CAASC,KAAK,CAAL,CAAT,CAAP;AACF,WAAK,CAAL;AACE,eAAO,IAAID,IAAJ,CAASC,KAAK,CAAL,CAAT,EAAkBA,KAAK,CAAL,CAAlB,CAAP;AACF,WAAK,CAAL;AACE,eAAO,IAAID,IAAJ,CAASC,KAAK,CAAL,CAAT,EAAkBA,KAAK,CAAL,CAAlB,EAA2BA,KAAK,CAAL,CAA3B,CAAP;AACF,WAAK,CAAL;AACE,eAAO,IAAID,IAAJ,CAASC,KAAK,CAAL,CAAT,EAAkBA,KAAK,CAAL,CAAlB,EAA2BA,KAAK,CAAL,CAA3B,EAAoCA,KAAK,CAAL,CAApC,CAAP;AACF,WAAK,CAAL;AACE,eAAO,IAAID,IAAJ,CAASC,KAAK,CAAL,CAAT,EAAkBA,KAAK,CAAL,CAAlB,EAA2BA,KAAK,CAAL,CAA3B,EAAoCA,KAAK,CAAL,CAApC,EAA6CA,KAAK,CAAL,CAA7C,CAAP;AACF,WAAK,CAAL;AACE,eAAO,IAAID,IAAJ,CAASC,KAAK,CAAL,CAAT,EAAkBA,KAAK,CAAL,CAAlB,EAA2BA,KAAK,CAAL,CAA3B,EAAoCA,KAAK,CAAL,CAApC,EAA6CA,KAAK,CAAL,CAA7C,EAAsDA,KAAK,CAAL,CAAtD,CAAP;AACF,WAAK,CAAL;AACE,eAAO,IAAID,IAAJ,CAASC,KAAK,CAAL,CAAT,EAAkBA,KAAK,CAAL,CAAlB,EAA2BA,KAAK,CAAL,CAA3B,EAAoCA,KAAK,CAAL,CAApC,EAA6CA,KAAK,CAAL,CAA7C,EAAsDA,KAAK,CAAL,CAAtD,EAA+DA,KAAK,CAAL,CAA/D,CAAP;AAhBJ;AAkBA,QAAIG,cAAcR,WAAWI,KAAKK,SAAhB,CAAlB;AAAA,QACIC,SAASN,KAAKO,KAAL,CAAWH,WAAX,EAAwBH,IAAxB,CADb;;AAGA;AACA;AACA,WAAOH,SAASQ,MAAT,IAAmBA,MAAnB,GAA4BF,WAAnC;AACD,GA7BD;AA8BD;;AAEDI,OAAOC,OAAP,GAAiBV,iBAAjB;AACA","file":"createCtorWrapper.js","sourcesContent":["'use strict';\n\nlet baseCreate = require('./baseCreate'),\n    isObject = require('../lang/isObject');\n\n/**\n * Creates a function that produces an instance of `Ctor` regardless of\n * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n *\n * @private\n * @param {Function} Ctor The constructor to wrap.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCtorWrapper(Ctor) {\n  return function () {\n    // Use a `switch` statement to work with class constructors.\n    // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n    // for more details.\n    let args = arguments;\n    switch (args.length) {\n      case 0:\n        return new Ctor();\n      case 1:\n        return new Ctor(args[0]);\n      case 2:\n        return new Ctor(args[0], args[1]);\n      case 3:\n        return new Ctor(args[0], args[1], args[2]);\n      case 4:\n        return new Ctor(args[0], args[1], args[2], args[3]);\n      case 5:\n        return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n      case 6:\n        return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n      case 7:\n        return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n    }\n    let thisBinding = baseCreate(Ctor.prototype),\n        result = Ctor.apply(thisBinding, args);\n\n    // Mimic the constructor's `return` behavior.\n    // See https://es5.github.io/#x13.2.2 for more details.\n    return isObject(result) ? result : thisBinding;\n  };\n}\n\nmodule.exports = createCtorWrapper;\n//# sourceMappingURL=createCtorWrapper.js.map"]}