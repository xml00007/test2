{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/arrayMap.js"],"names":["arrayMap","array","iteratee","index","length","result","Array","module","exports"],"mappings":"AAAA;;AAEA;;;;;;;;;;AASA,SAASA,QAAT,CAAkBC,KAAlB,EAAyBC,QAAzB,EAAmC;AACjC,MAAIC,QAAQ,CAAC,CAAb;AAAA,MACIC,SAASH,MAAMG,MADnB;AAAA,MAEIC,SAASC,MAAMF,MAAN,CAFb;;AAIA,SAAO,EAAED,KAAF,GAAUC,MAAjB,EAAyB;AACvBC,WAAOF,KAAP,IAAgBD,SAASD,MAAME,KAAN,CAAT,EAAuBA,KAAvB,EAA8BF,KAA9B,CAAhB;AACD;AACD,SAAOI,MAAP;AACD;;AAEDE,OAAOC,OAAP,GAAiBR,QAAjB;AACA","file":"arrayMap.js","sourcesContent":["\"use strict\";\n\n/**\n * A specialized version of `_.map` for arrays without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  let index = -1,\n      length = array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n//# sourceMappingURL=arrayMap.js.map"]}