{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/baseGet.js"],"names":["toObject","require","baseGet","object","path","pathKey","undefined","index","length","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,WAAWC,QAAQ,YAAR,CAAf;;AAEA;;;;;;;;;;AAUA,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,OAA/B,EAAwC;AACtC,MAAIF,UAAU,IAAd,EAAoB;AAClB;AACD;AACD,MAAIE,YAAYC,SAAZ,IAAyBD,WAAWL,SAASG,MAAT,CAAxC,EAA0D;AACxDC,WAAO,CAACC,OAAD,CAAP;AACD;AACD,MAAIE,QAAQ,CAAZ;AAAA,MACIC,SAASJ,KAAKI,MADlB;;AAGA,SAAOL,UAAU,IAAV,IAAkBI,QAAQC,MAAjC,EAAyC;AACvCL,aAASA,OAAOC,KAAKG,OAAL,CAAP,CAAT;AACD;AACD,SAAOA,SAASA,SAASC,MAAlB,GAA2BL,MAA3B,GAAoCG,SAA3C;AACD;;AAEDG,OAAOC,OAAP,GAAiBR,OAAjB;AACA","file":"baseGet.js","sourcesContent":["'use strict';\n\nlet toObject = require('./toObject');\n\n/**\n * The base implementation of `get` without support for string paths\n * and default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path of the property to get.\n * @param {string} [pathKey] The key representation of path.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path, pathKey) {\n  if (object == null) {\n    return;\n  }\n  if (pathKey !== undefined && pathKey in toObject(object)) {\n    path = [pathKey];\n  }\n  let index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[path[index++]];\n  }\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;\n//# sourceMappingURL=baseGet.js.map"]}