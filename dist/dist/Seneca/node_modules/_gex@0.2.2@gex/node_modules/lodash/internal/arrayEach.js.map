{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/arrayEach.js"],"names":["arrayEach","array","iteratee","index","length","module","exports"],"mappings":"AAAA;;AAEA;;;;;;;;;;AASA,SAASA,SAAT,CAAmBC,KAAnB,EAA0BC,QAA1B,EAAoC;AAClC,MAAIC,QAAQ,CAAC,CAAb;AAAA,MACIC,SAASH,MAAMG,MADnB;;AAGA,SAAO,EAAED,KAAF,GAAUC,MAAjB,EAAyB;AACvB,QAAIF,SAASD,MAAME,KAAN,CAAT,EAAuBA,KAAvB,EAA8BF,KAA9B,MAAyC,KAA7C,EAAoD;AAClD;AACD;AACF;AACD,SAAOA,KAAP;AACD;;AAEDI,OAAOC,OAAP,GAAiBN,SAAjB;AACA","file":"arrayEach.js","sourcesContent":["\"use strict\";\n\n/**\n * A specialized version of `_.forEach` for arrays without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  let index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n//# sourceMappingURL=arrayEach.js.map"]}