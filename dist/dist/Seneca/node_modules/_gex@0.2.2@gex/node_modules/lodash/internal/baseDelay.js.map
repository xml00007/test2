{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/baseDelay.js"],"names":["FUNC_ERROR_TEXT","baseDelay","func","wait","args","TypeError","setTimeout","apply","undefined","module","exports"],"mappings":"AAAA;;AAEA;;AACA,IAAIA,kBAAkB,qBAAtB;;AAEA;;;;;;;;;;AAUA,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqC;AACnC,MAAI,OAAOF,IAAP,IAAe,UAAnB,EAA+B;AAC7B,UAAM,IAAIG,SAAJ,CAAcL,eAAd,CAAN;AACD;AACD,SAAOM,WAAW,YAAY;AAC5BJ,SAAKK,KAAL,CAAWC,SAAX,EAAsBJ,IAAtB;AACD,GAFM,EAEJD,IAFI,CAAP;AAGD;;AAEDM,OAAOC,OAAP,GAAiBT,SAAjB;AACA","file":"baseDelay.js","sourcesContent":["'use strict';\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nlet FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * The base implementation of `_.delay` and `_.defer` which accepts an index\n * of where to slice the arguments to provide to `func`.\n *\n * @private\n * @param {Function} func The function to delay.\n * @param {number} wait The number of milliseconds to delay invocation.\n * @param {Object} args The arguments provide to `func`.\n * @returns {number} Returns the timer id.\n */\nfunction baseDelay(func, wait, args) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return setTimeout(function () {\n    func.apply(undefined, args);\n  }, wait);\n}\n\nmodule.exports = baseDelay;\n//# sourceMappingURL=baseDelay.js.map"]}