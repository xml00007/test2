{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/createFind.js"],"names":["baseCallback","require","baseFind","baseFindIndex","isArray","createFind","eachFunc","fromRight","collection","predicate","thisArg","index","undefined","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,eAAeC,QAAQ,gBAAR,CAAnB;AAAA,IACIC,WAAWD,QAAQ,YAAR,CADf;AAAA,IAEIE,gBAAgBF,QAAQ,iBAAR,CAFpB;AAAA,IAGIG,UAAUH,QAAQ,iBAAR,CAHd;;AAKA;;;;;;;;AAQA,SAASI,UAAT,CAAoBC,QAApB,EAA8BC,SAA9B,EAAyC;AACvC,SAAO,UAAUC,UAAV,EAAsBC,SAAtB,EAAiCC,OAAjC,EAA0C;AAC/CD,gBAAYT,aAAaS,SAAb,EAAwBC,OAAxB,EAAiC,CAAjC,CAAZ;AACA,QAAIN,QAAQI,UAAR,CAAJ,EAAyB;AACvB,UAAIG,QAAQR,cAAcK,UAAd,EAA0BC,SAA1B,EAAqCF,SAArC,CAAZ;AACA,aAAOI,QAAQ,CAAC,CAAT,GAAaH,WAAWG,KAAX,CAAb,GAAiCC,SAAxC;AACD;AACD,WAAOV,SAASM,UAAT,EAAqBC,SAArB,EAAgCH,QAAhC,CAAP;AACD,GAPD;AAQD;;AAEDO,OAAOC,OAAP,GAAiBT,UAAjB;AACA","file":"createFind.js","sourcesContent":["'use strict';\n\nlet baseCallback = require('./baseCallback'),\n    baseFind = require('./baseFind'),\n    baseFindIndex = require('./baseFindIndex'),\n    isArray = require('../lang/isArray');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(eachFunc, fromRight) {\n  return function (collection, predicate, thisArg) {\n    predicate = baseCallback(predicate, thisArg, 3);\n    if (isArray(collection)) {\n      let index = baseFindIndex(collection, predicate, fromRight);\n      return index > -1 ? collection[index] : undefined;\n    }\n    return baseFind(collection, predicate, eachFunc);\n  };\n}\n\nmodule.exports = createFind;\n//# sourceMappingURL=createFind.js.map"]}