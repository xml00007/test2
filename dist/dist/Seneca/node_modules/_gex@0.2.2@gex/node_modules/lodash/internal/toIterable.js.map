{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/internal/toIterable.js"],"names":["isArrayLike","require","isObject","values","toIterable","value","Object","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,cAAcC,QAAQ,eAAR,CAAlB;AAAA,IACIC,WAAWD,QAAQ,kBAAR,CADf;AAAA,IAEIE,SAASF,QAAQ,kBAAR,CAFb;;AAIA;;;;;;;AAOA,SAASG,UAAT,CAAoBC,KAApB,EAA2B;AACzB,MAAIA,SAAS,IAAb,EAAmB;AACjB,WAAO,EAAP;AACD;AACD,MAAI,CAACL,YAAYK,KAAZ,CAAL,EAAyB;AACvB,WAAOF,OAAOE,KAAP,CAAP;AACD;AACD,SAAOH,SAASG,KAAT,IAAkBA,KAAlB,GAA0BC,OAAOD,KAAP,CAAjC;AACD;;AAEDE,OAAOC,OAAP,GAAiBJ,UAAjB;AACA","file":"toIterable.js","sourcesContent":["'use strict';\n\nlet isArrayLike = require('./isArrayLike'),\n    isObject = require('../lang/isObject'),\n    values = require('../object/values');\n\n/**\n * Converts `value` to an array-like object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Array|Object} Returns the array-like object.\n */\nfunction toIterable(value) {\n  if (value == null) {\n    return [];\n  }\n  if (!isArrayLike(value)) {\n    return values(value);\n  }\n  return isObject(value) ? value : Object(value);\n}\n\nmodule.exports = toIterable;\n//# sourceMappingURL=toIterable.js.map"]}