{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/object/keys.js"],"names":["getNative","require","isArrayLike","isObject","shimKeys","nativeKeys","Object","keys","object","Ctor","undefined","constructor","prototype","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,YAAYC,QAAQ,uBAAR,CAAhB;AAAA,IACIC,cAAcD,QAAQ,yBAAR,CADlB;AAAA,IAEIE,WAAWF,QAAQ,kBAAR,CAFf;AAAA,IAGIG,WAAWH,QAAQ,sBAAR,CAHf;;AAKA;AACA,IAAII,aAAaL,UAAUM,MAAV,EAAkB,MAAlB,CAAjB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,IAAIC,OAAO,CAACF,UAAD,GAAcD,QAAd,GAAyB,UAAUI,MAAV,EAAkB;AACpD,MAAIC,OAAOD,UAAU,IAAV,GAAiBE,SAAjB,GAA6BF,OAAOG,WAA/C;AACA,MAAI,OAAOF,IAAP,IAAe,UAAf,IAA6BA,KAAKG,SAAL,KAAmBJ,MAAhD,IAA0D,OAAOA,MAAP,IAAiB,UAAjB,IAA+BN,YAAYM,MAAZ,CAA7F,EAAkH;AAChH,WAAOJ,SAASI,MAAT,CAAP;AACD;AACD,SAAOL,SAASK,MAAT,IAAmBH,WAAWG,MAAX,CAAnB,GAAwC,EAA/C;AACD,CAND;;AAQAK,OAAOC,OAAP,GAAiBP,IAAjB;AACA","file":"keys.js","sourcesContent":["'use strict';\n\nlet getNative = require('../internal/getNative'),\n    isArrayLike = require('../internal/isArrayLike'),\n    isObject = require('../lang/isObject'),\n    shimKeys = require('../internal/shimKeys');\n\n/* Native method references for those with the same name as other `lodash` methods. */\nlet nativeKeys = getNative(Object, 'keys');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nlet keys = !nativeKeys ? shimKeys : function (object) {\n  let Ctor = object == null ? undefined : object.constructor;\n  if (typeof Ctor == 'function' && Ctor.prototype === object || typeof object != 'function' && isArrayLike(object)) {\n    return shimKeys(object);\n  }\n  return isObject(object) ? nativeKeys(object) : [];\n};\n\nmodule.exports = keys;\n//# sourceMappingURL=keys.js.map"]}