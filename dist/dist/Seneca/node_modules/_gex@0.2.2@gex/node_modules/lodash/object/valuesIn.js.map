{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/object/valuesIn.js"],"names":["baseValues","require","keysIn","valuesIn","object","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,aAAaC,QAAQ,wBAAR,CAAjB;AAAA,IACIC,SAASD,QAAQ,UAAR,CADb;;AAGA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAASE,QAAT,CAAkBC,MAAlB,EAA0B;AACxB,SAAOJ,WAAWI,MAAX,EAAmBF,OAAOE,MAAP,CAAnB,CAAP;AACD;;AAEDC,OAAOC,OAAP,GAAiBH,QAAjB;AACA","file":"valuesIn.js","sourcesContent":["'use strict';\n\nlet baseValues = require('../internal/baseValues'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of the own and inherited enumerable property values\n * of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.valuesIn(new Foo);\n * // => [1, 2, 3] (iteration order is not guaranteed)\n */\nfunction valuesIn(object) {\n  return baseValues(object, keysIn(object));\n}\n\nmodule.exports = valuesIn;\n//# sourceMappingURL=valuesIn.js.map"]}