{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/object/pick.js"],"names":["baseFlatten","require","bindCallback","pickByArray","pickByCallback","restParam","pick","object","props","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,cAAcC,QAAQ,yBAAR,CAAlB;AAAA,IACIC,eAAeD,QAAQ,0BAAR,CADnB;AAAA,IAEIE,cAAcF,QAAQ,yBAAR,CAFlB;AAAA,IAGIG,iBAAiBH,QAAQ,4BAAR,CAHrB;AAAA,IAIII,YAAYJ,QAAQ,uBAAR,CAJhB;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,IAAIK,OAAOD,UAAU,UAAUE,MAAV,EAAkBC,KAAlB,EAAyB;AAC5C,MAAID,UAAU,IAAd,EAAoB;AAClB,WAAO,EAAP;AACD;AACD,SAAO,OAAOC,MAAM,CAAN,CAAP,IAAmB,UAAnB,GAAgCJ,eAAeG,MAAf,EAAuBL,aAAaM,MAAM,CAAN,CAAb,EAAuBA,MAAM,CAAN,CAAvB,EAAiC,CAAjC,CAAvB,CAAhC,GAA8FL,YAAYI,MAAZ,EAAoBP,YAAYQ,KAAZ,CAApB,CAArG;AACD,CALU,CAAX;;AAOAC,OAAOC,OAAP,GAAiBJ,IAAjB;AACA","file":"pick.js","sourcesContent":["'use strict';\n\nlet baseFlatten = require('../internal/baseFlatten'),\n    bindCallback = require('../internal/bindCallback'),\n    pickByArray = require('../internal/pickByArray'),\n    pickByCallback = require('../internal/pickByCallback'),\n    restParam = require('../function/restParam');\n\n/**\n * Creates an object composed of the picked `object` properties. Property\n * names may be specified as individual arguments or as arrays of property\n * names. If `predicate` is provided it is invoked for each property of `object`\n * picking the properties `predicate` returns truthy for. The predicate is\n * bound to `thisArg` and invoked with three arguments: (value, key, object).\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {Function|...(string|string[])} [predicate] The function invoked per\n *  iteration or property names to pick, specified as individual property\n *  names or arrays of property names.\n * @param {*} [thisArg] The `this` binding of `predicate`.\n * @returns {Object} Returns the new object.\n * @example\n *\n * let object = { 'user': 'fred', 'age': 40 };\n *\n * _.pick(object, 'user');\n * // => { 'user': 'fred' }\n *\n * _.pick(object, _.isString);\n * // => { 'user': 'fred' }\n */\nlet pick = restParam(function (object, props) {\n  if (object == null) {\n    return {};\n  }\n  return typeof props[0] == 'function' ? pickByCallback(object, bindCallback(props[0], props[1], 3)) : pickByArray(object, baseFlatten(props));\n});\n\nmodule.exports = pick;\n//# sourceMappingURL=pick.js.map"]}