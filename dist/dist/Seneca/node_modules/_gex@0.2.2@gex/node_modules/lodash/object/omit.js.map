{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/object/omit.js"],"names":["arrayMap","require","baseDifference","baseFlatten","bindCallback","keysIn","pickByArray","pickByCallback","restParam","omit","object","props","String","predicate","value","key","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,WAAWC,QAAQ,sBAAR,CAAf;AAAA,IACIC,iBAAiBD,QAAQ,4BAAR,CADrB;AAAA,IAEIE,cAAcF,QAAQ,yBAAR,CAFlB;AAAA,IAGIG,eAAeH,QAAQ,0BAAR,CAHnB;AAAA,IAIII,SAASJ,QAAQ,UAAR,CAJb;AAAA,IAKIK,cAAcL,QAAQ,yBAAR,CALlB;AAAA,IAMIM,iBAAiBN,QAAQ,4BAAR,CANrB;AAAA,IAOIO,YAAYP,QAAQ,uBAAR,CAPhB;;AASA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,IAAIQ,OAAOD,UAAU,UAAUE,MAAV,EAAkBC,KAAlB,EAAyB;AAC5C,MAAID,UAAU,IAAd,EAAoB;AAClB,WAAO,EAAP;AACD;AACD,MAAI,OAAOC,MAAM,CAAN,CAAP,IAAmB,UAAvB,EAAmC;AACjC,QAAIA,SAAQX,SAASG,YAAYQ,MAAZ,CAAT,EAA6BC,MAA7B,CAAZ;AACA,WAAON,YAAYI,MAAZ,EAAoBR,eAAeG,OAAOK,MAAP,CAAf,EAA+BC,MAA/B,CAApB,CAAP;AACD;AACD,MAAIE,YAAYT,aAAaO,MAAM,CAAN,CAAb,EAAuBA,MAAM,CAAN,CAAvB,EAAiC,CAAjC,CAAhB;AACA,SAAOJ,eAAeG,MAAf,EAAuB,UAAUI,KAAV,EAAiBC,GAAjB,EAAsBL,MAAtB,EAA8B;AAC1D,WAAO,CAACG,UAAUC,KAAV,EAAiBC,GAAjB,EAAsBL,MAAtB,CAAR;AACD,GAFM,CAAP;AAGD,CAZU,CAAX;;AAcAM,OAAOC,OAAP,GAAiBR,IAAjB;AACA","file":"omit.js","sourcesContent":["'use strict';\n\nlet arrayMap = require('../internal/arrayMap'),\n    baseDifference = require('../internal/baseDifference'),\n    baseFlatten = require('../internal/baseFlatten'),\n    bindCallback = require('../internal/bindCallback'),\n    keysIn = require('./keysIn'),\n    pickByArray = require('../internal/pickByArray'),\n    pickByCallback = require('../internal/pickByCallback'),\n    restParam = require('../function/restParam');\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable properties of `object` that are not omitted.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {Function|...(string|string[])} [predicate] The function invoked per\n *  iteration or property names to omit, specified as individual property\n *  names or arrays of property names.\n * @param {*} [thisArg] The `this` binding of `predicate`.\n * @returns {Object} Returns the new object.\n * @example\n *\n * let object = { 'user': 'fred', 'age': 40 };\n *\n * _.omit(object, 'age');\n * // => { 'user': 'fred' }\n *\n * _.omit(object, _.isNumber);\n * // => { 'user': 'fred' }\n */\nlet omit = restParam(function (object, props) {\n  if (object == null) {\n    return {};\n  }\n  if (typeof props[0] != 'function') {\n    let props = arrayMap(baseFlatten(props), String);\n    return pickByArray(object, baseDifference(keysIn(object), props));\n  }\n  let predicate = bindCallback(props[0], props[1], 3);\n  return pickByCallback(object, function (value, key, object) {\n    return !predicate(value, key, object);\n  });\n});\n\nmodule.exports = omit;\n//# sourceMappingURL=omit.js.map"]}