{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/lang/isMatch.js"],"names":["baseIsMatch","require","bindCallback","getMatchData","isMatch","object","source","customizer","thisArg","undefined","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,cAAcC,QAAQ,yBAAR,CAAlB;AAAA,IACIC,eAAeD,QAAQ,0BAAR,CADnB;AAAA,IAEIE,eAAeF,QAAQ,0BAAR,CAFnB;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,SAASG,OAAT,CAAiBC,MAAjB,EAAyBC,MAAzB,EAAiCC,UAAjC,EAA6CC,OAA7C,EAAsD;AACpDD,eAAa,OAAOA,UAAP,IAAqB,UAArB,GAAkCL,aAAaK,UAAb,EAAyBC,OAAzB,EAAkC,CAAlC,CAAlC,GAAyEC,SAAtF;AACA,SAAOT,YAAYK,MAAZ,EAAoBF,aAAaG,MAAb,CAApB,EAA0CC,UAA1C,CAAP;AACD;;AAEDG,OAAOC,OAAP,GAAiBP,OAAjB;AACA","file":"isMatch.js","sourcesContent":["'use strict';\n\nlet baseIsMatch = require('../internal/baseIsMatch'),\n    bindCallback = require('../internal/bindCallback'),\n    getMatchData = require('../internal/getMatchData');\n\n/**\n * Performs a deep comparison between `object` and `source` to determine if\n * `object` contains equivalent property values. If `customizer` is provided\n * it is invoked to compare values. If `customizer` returns `undefined`\n * comparisons are handled by the method instead. The `customizer` is bound\n * to `thisArg` and invoked with three arguments: (value, other, index|key).\n *\n * **Note:** This method supports comparing properties of arrays, booleans,\n * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n * and DOM nodes are **not** supported. Provide a customizer function to extend\n * support for comparing other values.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Function} [customizer] The function to customize value comparisons.\n * @param {*} [thisArg] The `this` binding of `customizer`.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n * @example\n *\n * let object = { 'user': 'fred', 'age': 40 };\n *\n * _.isMatch(object, { 'age': 40 });\n * // => true\n *\n * _.isMatch(object, { 'age': 36 });\n * // => false\n *\n * // using a customizer callback\n * let object = { 'greeting': 'hello' };\n * let source = { 'greeting': 'hi' };\n *\n * _.isMatch(object, source, function(value, other) {\n *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n * });\n * // => true\n */\nfunction isMatch(object, source, customizer, thisArg) {\n  customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n  return baseIsMatch(object, getMatchData(source), customizer);\n}\n\nmodule.exports = isMatch;\n//# sourceMappingURL=isMatch.js.map"]}