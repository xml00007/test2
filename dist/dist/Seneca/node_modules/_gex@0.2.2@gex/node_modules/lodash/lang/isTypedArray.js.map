{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/lang/isTypedArray.js"],"names":["isLength","require","isObjectLike","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","weakMapTag","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","typedArrayTags","objectProto","Object","prototype","objToString","toString","isTypedArray","value","length","call","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,WAAWC,QAAQ,sBAAR,CAAf;AAAA,IACIC,eAAeD,QAAQ,0BAAR,CADnB;;AAGA;AACA,IAAIE,UAAU,oBAAd;AAAA,IACIC,WAAW,gBADf;AAAA,IAEIC,UAAU,kBAFd;AAAA,IAGIC,UAAU,eAHd;AAAA,IAIIC,WAAW,gBAJf;AAAA,IAKIC,UAAU,mBALd;AAAA,IAMIC,SAAS,cANb;AAAA,IAOIC,YAAY,iBAPhB;AAAA,IAQIC,YAAY,iBARhB;AAAA,IASIC,YAAY,iBAThB;AAAA,IAUIC,SAAS,cAVb;AAAA,IAWIC,YAAY,iBAXhB;AAAA,IAYIC,aAAa,kBAZjB;;AAcA,IAAIC,iBAAiB,sBAArB;AAAA,IACIC,aAAa,uBADjB;AAAA,IAEIC,aAAa,uBAFjB;AAAA,IAGIC,UAAU,oBAHd;AAAA,IAIIC,WAAW,qBAJf;AAAA,IAKIC,WAAW,qBALf;AAAA,IAMIC,WAAW,qBANf;AAAA,IAOIC,kBAAkB,4BAPtB;AAAA,IAQIC,YAAY,sBARhB;AAAA,IASIC,YAAY,sBAThB;;AAWA;AACA,IAAIC,iBAAiB,EAArB;AACAA,eAAeT,UAAf,IAA6BS,eAAeR,UAAf,IAA6BQ,eAAeP,OAAf,IAA0BO,eAAeN,QAAf,IAA2BM,eAAeL,QAAf,IAA2BK,eAAeJ,QAAf,IAA2BI,eAAeH,eAAf,IAAkCG,eAAeF,SAAf,IAA4BE,eAAeD,SAAf,IAA4B,IAA/P;AACAC,eAAevB,OAAf,IAA0BuB,eAAetB,QAAf,IAA2BsB,eAAeV,cAAf,IAAiCU,eAAerB,OAAf,IAA0BqB,eAAepB,OAAf,IAA0BoB,eAAenB,QAAf,IAA2BmB,eAAelB,OAAf,IAA0BkB,eAAejB,MAAf,IAAyBiB,eAAehB,SAAf,IAA4BgB,eAAef,SAAf,IAA4Be,eAAed,SAAf,IAA4Bc,eAAeb,MAAf,IAAyBa,eAAeZ,SAAf,IAA4BY,eAAeX,UAAf,IAA6B,KAA9X;;AAEA;AACA,IAAIY,cAAcC,OAAOC,SAAzB;;AAEA;;;;AAIA,IAAIC,cAAcH,YAAYI,QAA9B;;AAEA;;;;;;;;;;;;;;;;AAgBA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,WAAO/B,aAAa+B,KAAb,KAAuBjC,SAASiC,MAAMC,MAAf,CAAvB,IAAiD,CAAC,CAACR,eAAeI,YAAYK,IAAZ,CAAiBF,KAAjB,CAAf,CAA1D;AACH;;AAEDG,OAAOC,OAAP,GAAiBL,YAAjB;AACA","file":"isTypedArray.js","sourcesContent":["'use strict';\n\nlet isLength = require('../internal/isLength'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** `Object#toString` result references. */\nlet argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nlet arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nlet typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n/** Used for native method references. */\nlet objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nlet objToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nfunction isTypedArray(value) {\n    return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n}\n\nmodule.exports = isTypedArray;\n//# sourceMappingURL=isTypedArray.js.map"]}