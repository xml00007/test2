{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/lang/toArray.js"],"names":["arrayCopy","require","getLength","isLength","values","toArray","value","length","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,YAAYC,QAAQ,uBAAR,CAAhB;AAAA,IACIC,YAAYD,QAAQ,uBAAR,CADhB;AAAA,IAEIE,WAAWF,QAAQ,sBAAR,CAFf;AAAA,IAGIG,SAASH,QAAQ,kBAAR,CAHb;;AAKA;;;;;;;;;;;;;;;AAeA,SAASI,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,MAAIC,SAASD,QAAQJ,UAAUI,KAAV,CAAR,GAA2B,CAAxC;AACA,MAAI,CAACH,SAASI,MAAT,CAAL,EAAuB;AACrB,WAAOH,OAAOE,KAAP,CAAP;AACD;AACD,MAAI,CAACC,MAAL,EAAa;AACX,WAAO,EAAP;AACD;AACD,SAAOP,UAAUM,KAAV,CAAP;AACD;;AAEDE,OAAOC,OAAP,GAAiBJ,OAAjB;AACA","file":"toArray.js","sourcesContent":["'use strict';\n\nlet arrayCopy = require('../internal/arrayCopy'),\n    getLength = require('../internal/getLength'),\n    isLength = require('../internal/isLength'),\n    values = require('../object/values');\n\n/**\n * Converts `value` to an array.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Array} Returns the converted array.\n * @example\n *\n * (function() {\n *   return _.toArray(arguments).slice(1);\n * }(1, 2, 3));\n * // => [2, 3]\n */\nfunction toArray(value) {\n  let length = value ? getLength(value) : 0;\n  if (!isLength(length)) {\n    return values(value);\n  }\n  if (!length) {\n    return [];\n  }\n  return arrayCopy(value);\n}\n\nmodule.exports = toArray;\n//# sourceMappingURL=toArray.js.map"]}