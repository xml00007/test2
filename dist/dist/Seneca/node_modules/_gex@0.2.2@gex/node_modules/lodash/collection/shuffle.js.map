{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/collection/shuffle.js"],"names":["sample","require","POSITIVE_INFINITY","Number","shuffle","collection","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,SAASC,QAAQ,UAAR,CAAb;;AAEA;AACA,IAAIC,oBAAoBC,OAAOD,iBAA/B;;AAEA;;;;;;;;;;;;;;AAcA,SAASE,OAAT,CAAiBC,UAAjB,EAA6B;AAC3B,SAAOL,OAAOK,UAAP,EAAmBH,iBAAnB,CAAP;AACD;;AAEDI,OAAOC,OAAP,GAAiBH,OAAjB;AACA","file":"shuffle.js","sourcesContent":["'use strict';\n\nlet sample = require('./sample');\n\n/** Used as references for `-Infinity` and `Infinity`. */\nlet POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @category Collection\n * @param {Array|Object|string} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  return sample(collection, POSITIVE_INFINITY);\n}\n\nmodule.exports = shuffle;\n//# sourceMappingURL=shuffle.js.map"]}