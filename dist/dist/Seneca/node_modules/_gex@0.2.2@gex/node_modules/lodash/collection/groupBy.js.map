{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/collection/groupBy.js"],"names":["createAggregator","require","objectProto","Object","prototype","hasOwnProperty","groupBy","result","value","key","call","push","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,mBAAmBC,QAAQ,8BAAR,CAAvB;;AAEA;AACA,IAAIC,cAAcC,OAAOC,SAAzB;;AAEA;AACA,IAAIC,iBAAiBH,YAAYG,cAAjC;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA,IAAIC,UAAUN,iBAAiB,UAAUO,MAAV,EAAkBC,KAAlB,EAAyBC,GAAzB,EAA8B;AAC3D,MAAIJ,eAAeK,IAAf,CAAoBH,MAApB,EAA4BE,GAA5B,CAAJ,EAAsC;AACpCF,WAAOE,GAAP,EAAYE,IAAZ,CAAiBH,KAAjB;AACD,GAFD,MAEO;AACLD,WAAOE,GAAP,IAAc,CAACD,KAAD,CAAd;AACD;AACF,CANa,CAAd;;AAQAI,OAAOC,OAAP,GAAiBP,OAAjB;AACA","file":"groupBy.js","sourcesContent":["'use strict';\n\nlet createAggregator = require('../internal/createAggregator');\n\n/** Used for native method references. */\nlet objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nlet hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` through `iteratee`. The corresponding value\n * of each key is an array of the elements responsible for generating the key.\n * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n * (value, index|key, collection).\n *\n * If a property name is provided for `iteratee` the created `_.property`\n * style callback returns the property value of the given element.\n *\n * If a value is also provided for `thisArg` the created `_.matchesProperty`\n * style callback returns `true` for elements that have a matching property\n * value, else `false`.\n *\n * If an object is provided for `iteratee` the created `_.matches` style\n * callback returns `true` for elements that have the properties of the given\n * object, else `false`.\n *\n * @static\n * @memberOf _\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n *  per iteration.\n * @param {*} [thisArg] The `this` binding of `iteratee`.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([4.2, 6.1, 6.4], function(n) {\n *   return Math.floor(n);\n * });\n * // => { '4': [4.2], '6': [6.1, 6.4] }\n *\n * _.groupBy([4.2, 6.1, 6.4], function(n) {\n *   return this.floor(n);\n * }, Math);\n * // => { '4': [4.2], '6': [6.1, 6.4] }\n *\n * // using the `_.property` callback shorthand\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nlet groupBy = createAggregator(function (result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    result[key] = [value];\n  }\n});\n\nmodule.exports = groupBy;\n//# sourceMappingURL=groupBy.js.map"]}