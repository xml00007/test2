{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/collection/forEach.js"],"names":["arrayEach","require","baseEach","createForEach","forEach","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,YAAYC,QAAQ,uBAAR,CAAhB;AAAA,IACIC,WAAWD,QAAQ,sBAAR,CADf;AAAA,IAEIE,gBAAgBF,QAAQ,2BAAR,CAFpB;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,IAAIG,UAAUD,cAAcH,SAAd,EAAyBE,QAAzB,CAAd;;AAEAG,OAAOC,OAAP,GAAiBF,OAAjB;AACA","file":"forEach.js","sourcesContent":["'use strict';\n\nlet arrayEach = require('../internal/arrayEach'),\n    baseEach = require('../internal/baseEach'),\n    createForEach = require('../internal/createForEach');\n\n/**\n * Iterates over elements of `collection` invoking `iteratee` for each element.\n * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n * (value, index|key, collection). Iteratee functions may exit iteration early\n * by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n * may be used for object iteration.\n *\n * @static\n * @memberOf _\n * @alias each\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [thisArg] The `this` binding of `iteratee`.\n * @returns {Array|Object|string} Returns `collection`.\n * @example\n *\n * _([1, 2]).forEach(function(n) {\n *   console.log(n);\n * }).value();\n * // => logs each value from left to right and returns the array\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n *   console.log(n, key);\n * });\n * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n */\nlet forEach = createForEach(arrayEach, baseEach);\n\nmodule.exports = forEach;\n//# sourceMappingURL=forEach.js.map"]}