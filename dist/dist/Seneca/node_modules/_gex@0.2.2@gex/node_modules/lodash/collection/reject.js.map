{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/collection/reject.js"],"names":["arrayFilter","require","baseCallback","baseFilter","isArray","reject","collection","predicate","thisArg","func","value","index","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,cAAcC,QAAQ,yBAAR,CAAlB;AAAA,IACIC,eAAeD,QAAQ,0BAAR,CADnB;AAAA,IAEIE,aAAaF,QAAQ,wBAAR,CAFjB;AAAA,IAGIG,UAAUH,QAAQ,iBAAR,CAHd;;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,SAASI,MAAT,CAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,OAAvC,EAAgD;AAC9C,MAAIC,OAAOL,QAAQE,UAAR,IAAsBN,WAAtB,GAAoCG,UAA/C;AACAI,cAAYL,aAAaK,SAAb,EAAwBC,OAAxB,EAAiC,CAAjC,CAAZ;AACA,SAAOC,KAAKH,UAAL,EAAiB,UAAUI,KAAV,EAAiBC,KAAjB,EAAwBL,UAAxB,EAAoC;AAC1D,WAAO,CAACC,UAAUG,KAAV,EAAiBC,KAAjB,EAAwBL,UAAxB,CAAR;AACD,GAFM,CAAP;AAGD;;AAEDM,OAAOC,OAAP,GAAiBR,MAAjB;AACA","file":"reject.js","sourcesContent":["'use strict';\n\nlet arrayFilter = require('../internal/arrayFilter'),\n    baseCallback = require('../internal/baseCallback'),\n    baseFilter = require('../internal/baseFilter'),\n    isArray = require('../lang/isArray');\n\n/**\n * The opposite of `_.filter`; this method returns the elements of `collection`\n * that `predicate` does **not** return truthy for.\n *\n * @static\n * @memberOf _\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [predicate=_.identity] The function invoked\n *  per iteration.\n * @param {*} [thisArg] The `this` binding of `predicate`.\n * @returns {Array} Returns the new filtered array.\n * @example\n *\n * _.reject([1, 2, 3, 4], function(n) {\n *   return n % 2 == 0;\n * });\n * // => [1, 3]\n *\n * let users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': true }\n * ];\n *\n * // using the `_.matches` callback shorthand\n * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n * // => ['barney']\n *\n * // using the `_.matchesProperty` callback shorthand\n * _.pluck(_.reject(users, 'active', false), 'user');\n * // => ['fred']\n *\n * // using the `_.property` callback shorthand\n * _.pluck(_.reject(users, 'active'), 'user');\n * // => ['barney']\n */\nfunction reject(collection, predicate, thisArg) {\n  let func = isArray(collection) ? arrayFilter : baseFilter;\n  predicate = baseCallback(predicate, thisArg, 3);\n  return func(collection, function (value, index, collection) {\n    return !predicate(value, index, collection);\n  });\n}\n\nmodule.exports = reject;\n//# sourceMappingURL=reject.js.map"]}