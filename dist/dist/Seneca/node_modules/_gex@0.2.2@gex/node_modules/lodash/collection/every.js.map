{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/collection/every.js"],"names":["arrayEvery","require","baseCallback","baseEvery","isArray","isIterateeCall","every","collection","predicate","thisArg","func","undefined","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,aAAaC,QAAQ,wBAAR,CAAjB;AAAA,IACIC,eAAeD,QAAQ,0BAAR,CADnB;AAAA,IAEIE,YAAYF,QAAQ,uBAAR,CAFhB;AAAA,IAGIG,UAAUH,QAAQ,iBAAR,CAHd;AAAA,IAIII,iBAAiBJ,QAAQ,4BAAR,CAJrB;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA,SAASK,KAAT,CAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,OAAtC,EAA+C;AAC7C,MAAIC,OAAON,QAAQG,UAAR,IAAsBP,UAAtB,GAAmCG,SAA9C;AACA,MAAIM,WAAWJ,eAAeE,UAAf,EAA2BC,SAA3B,EAAsCC,OAAtC,CAAf,EAA+D;AAC7DD,gBAAYG,SAAZ;AACD;AACD,MAAI,OAAOH,SAAP,IAAoB,UAApB,IAAkCC,YAAYE,SAAlD,EAA6D;AAC3DH,gBAAYN,aAAaM,SAAb,EAAwBC,OAAxB,EAAiC,CAAjC,CAAZ;AACD;AACD,SAAOC,KAAKH,UAAL,EAAiBC,SAAjB,CAAP;AACD;;AAEDI,OAAOC,OAAP,GAAiBP,KAAjB;AACA","file":"every.js","sourcesContent":["'use strict';\n\nlet arrayEvery = require('../internal/arrayEvery'),\n    baseCallback = require('../internal/baseCallback'),\n    baseEvery = require('../internal/baseEvery'),\n    isArray = require('../lang/isArray'),\n    isIterateeCall = require('../internal/isIterateeCall');\n\n/**\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\n * The predicate is bound to `thisArg` and invoked with three arguments:\n * (value, index|key, collection).\n *\n * If a property name is provided for `predicate` the created `_.property`\n * style callback returns the property value of the given element.\n *\n * If a value is also provided for `thisArg` the created `_.matchesProperty`\n * style callback returns `true` for elements that have a matching property\n * value, else `false`.\n *\n * If an object is provided for `predicate` the created `_.matches` style\n * callback returns `true` for elements that have the properties of the given\n * object, else `false`.\n *\n * @static\n * @memberOf _\n * @alias all\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [predicate=_.identity] The function invoked\n *  per iteration.\n * @param {*} [thisArg] The `this` binding of `predicate`.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n * @example\n *\n * _.every([true, 1, null, 'yes'], Boolean);\n * // => false\n *\n * let users = [\n *   { 'user': 'barney', 'active': false },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // using the `_.matches` callback shorthand\n * _.every(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // using the `_.matchesProperty` callback shorthand\n * _.every(users, 'active', false);\n * // => true\n *\n * // using the `_.property` callback shorthand\n * _.every(users, 'active');\n * // => false\n */\nfunction every(collection, predicate, thisArg) {\n  let func = isArray(collection) ? arrayEvery : baseEvery;\n  if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n    predicate = undefined;\n  }\n  if (typeof predicate != 'function' || thisArg !== undefined) {\n    predicate = baseCallback(predicate, thisArg, 3);\n  }\n  return func(collection, predicate);\n}\n\nmodule.exports = every;\n//# sourceMappingURL=every.js.map"]}