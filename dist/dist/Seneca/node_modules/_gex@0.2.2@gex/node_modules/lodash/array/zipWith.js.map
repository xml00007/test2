{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/array/zipWith.js"],"names":["restParam","require","unzipWith","zipWith","arrays","length","iteratee","undefined","thisArg","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,YAAYC,QAAQ,uBAAR,CAAhB;AAAA,IACIC,YAAYD,QAAQ,aAAR,CADhB;;AAGA;;;;;;;;;;;;;;;;;AAiBA,IAAIE,UAAUH,UAAU,UAAUI,MAAV,EAAkB;AACxC,MAAIC,SAASD,OAAOC,MAApB;AAAA,MACIC,WAAWD,SAAS,CAAT,GAAaD,OAAOC,SAAS,CAAhB,CAAb,GAAkCE,SADjD;AAAA,MAEIC,UAAUH,SAAS,CAAT,GAAaD,OAAOC,SAAS,CAAhB,CAAb,GAAkCE,SAFhD;;AAIA,MAAIF,SAAS,CAAT,IAAc,OAAOC,QAAP,IAAmB,UAArC,EAAiD;AAC/CD,cAAU,CAAV;AACD,GAFD,MAEO;AACLC,eAAWD,SAAS,CAAT,IAAc,OAAOG,OAAP,IAAkB,UAAhC,IAA8C,EAAEH,MAAF,EAAUG,OAAxD,IAAmED,SAA9E;AACAC,cAAUD,SAAV;AACD;AACDH,SAAOC,MAAP,GAAgBA,MAAhB;AACA,SAAOH,UAAUE,MAAV,EAAkBE,QAAlB,EAA4BE,OAA5B,CAAP;AACD,CAba,CAAd;;AAeAC,OAAOC,OAAP,GAAiBP,OAAjB;AACA","file":"zipWith.js","sourcesContent":["'use strict';\n\nlet restParam = require('../function/restParam'),\n    unzipWith = require('./unzipWith');\n\n/**\n * This method is like `_.zip` except that it accepts an iteratee to specify\n * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n * and invoked with four arguments: (accumulator, value, index, group).\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {...Array} [arrays] The arrays to process.\n * @param {Function} [iteratee] The function to combine grouped values.\n * @param {*} [thisArg] The `this` binding of `iteratee`.\n * @returns {Array} Returns the new array of grouped elements.\n * @example\n *\n * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n * // => [111, 222]\n */\nlet zipWith = restParam(function (arrays) {\n  let length = arrays.length,\n      iteratee = length > 2 ? arrays[length - 2] : undefined,\n      thisArg = length > 1 ? arrays[length - 1] : undefined;\n\n  if (length > 2 && typeof iteratee == 'function') {\n    length -= 2;\n  } else {\n    iteratee = length > 1 && typeof thisArg == 'function' ? (--length, thisArg) : undefined;\n    thisArg = undefined;\n  }\n  arrays.length = length;\n  return unzipWith(arrays, iteratee, thisArg);\n});\n\nmodule.exports = zipWith;\n//# sourceMappingURL=zipWith.js.map"]}