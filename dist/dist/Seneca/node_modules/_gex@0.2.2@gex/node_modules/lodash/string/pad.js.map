{"version":3,"sources":["../../../../../../../Seneca/node_modules/_gex@0.2.2@gex/node_modules/lodash/string/pad.js"],"names":["baseToString","require","createPadding","nativeCeil","Math","ceil","nativeFloor","floor","nativeIsFinite","global","isFinite","pad","string","length","chars","strLength","mid","leftLength","rightLength","slice","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,eAAeC,QAAQ,0BAAR,CAAnB;AAAA,IACIC,gBAAgBD,QAAQ,2BAAR,CADpB;;AAGA;AACA,IAAIE,aAAaC,KAAKC,IAAtB;AAAA,IACIC,cAAcF,KAAKG,KADvB;AAAA,IAEIC,iBAAiBC,OAAOC,QAF5B;;AAIA;;;;;;;;;;;;;;;;;;;;;;AAsBA,SAASC,GAAT,CAAaC,MAAb,EAAqBC,MAArB,EAA6BC,KAA7B,EAAoC;AAChCF,aAASZ,aAAaY,MAAb,CAAT;AACAC,aAAS,CAACA,MAAV;;AAEA,QAAIE,YAAYH,OAAOC,MAAvB;AACA,QAAIE,aAAaF,MAAb,IAAuB,CAACL,eAAeK,MAAf,CAA5B,EAAoD;AAChD,eAAOD,MAAP;AACH;AACD,QAAII,MAAM,CAACH,SAASE,SAAV,IAAuB,CAAjC;AAAA,QACIE,aAAaX,YAAYU,GAAZ,CADjB;AAAA,QAEIE,cAAcf,WAAWa,GAAX,CAFlB;;AAIAF,YAAQZ,cAAc,EAAd,EAAkBgB,WAAlB,EAA+BJ,KAA/B,CAAR;AACA,WAAOA,MAAMK,KAAN,CAAY,CAAZ,EAAeF,UAAf,IAA6BL,MAA7B,GAAsCE,KAA7C;AACH;;AAEDM,OAAOC,OAAP,GAAiBV,GAAjB;AACA","file":"pad.js","sourcesContent":["'use strict';\n\nlet baseToString = require('../internal/baseToString'),\n    createPadding = require('../internal/createPadding');\n\n/* Native method references for those with the same name as other `lodash` methods. */\nlet nativeCeil = Math.ceil,\n    nativeFloor = Math.floor,\n    nativeIsFinite = global.isFinite;\n\n/**\n * Pads `string` on the left and right sides if it's shorter than `length`.\n * Padding characters are truncated if they can't be evenly divided by `length`.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to pad.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padded string.\n * @example\n *\n * _.pad('abc', 8);\n * // => '  abc   '\n *\n * _.pad('abc', 8, '_-');\n * // => '_-abc_-_'\n *\n * _.pad('abc', 3);\n * // => 'abc'\n */\nfunction pad(string, length, chars) {\n    string = baseToString(string);\n    length = +length;\n\n    let strLength = string.length;\n    if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n    }\n    let mid = (length - strLength) / 2,\n        leftLength = nativeFloor(mid),\n        rightLength = nativeCeil(mid);\n\n    chars = createPadding('', rightLength, chars);\n    return chars.slice(0, leftLength) + string + chars;\n}\n\nmodule.exports = pad;\n//# sourceMappingURL=pad.js.map"]}