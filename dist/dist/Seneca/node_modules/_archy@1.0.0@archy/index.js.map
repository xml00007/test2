{"version":3,"sources":["../../../../Seneca/node_modules/_archy@1.0.0@archy/index.js"],"names":["module","exports","archy","obj","prefix","opts","undefined","chr","s","chars","unicode","label","nodes","lines","split","splitter","length","join","map","node","ix","last","more","prefix_","slice"],"mappings":"AAAA;;AAEAA,OAAOC,OAAP,GAAiB,SAASC,KAAT,CAAeC,GAAf,EAAoBC,MAApB,EAA4BC,IAA5B,EAAkC;AAC/C,QAAID,WAAWE,SAAf,EAA0BF,SAAS,EAAT;AAC1B,QAAI,CAACC,IAAL,EAAWA,OAAO,EAAP;AACX,QAAIE,MAAM,SAASA,GAAT,CAAaC,CAAb,EAAgB;AACtB,YAAIC,QAAQ;AACR,iBAAK,GADG;AAER,iBAAK,GAFG;AAGR,iBAAK,GAHG;AAIR,iBAAK,GAJG;AAKR,iBAAK;AALG,SAAZ;AAOA,eAAOJ,KAAKK,OAAL,KAAiB,KAAjB,GAAyBD,MAAMD,CAAN,CAAzB,GAAoCA,CAA3C;AACH,KATD;;AAWA,QAAI,OAAOL,GAAP,KAAe,QAAnB,EAA6BA,MAAM,EAAEQ,OAAOR,GAAT,EAAN;;AAE7B,QAAIS,QAAQT,IAAIS,KAAJ,IAAa,EAAzB;AACA,QAAIC,QAAQ,CAACV,IAAIQ,KAAJ,IAAa,EAAd,EAAkBG,KAAlB,CAAwB,IAAxB,CAAZ;AACA,QAAIC,WAAW,OAAOX,MAAP,IAAiBQ,MAAMI,MAAN,GAAeT,IAAI,GAAJ,CAAf,GAA0B,GAA3C,IAAkD,GAAjE;;AAEA,WAAOH,SAASS,MAAMI,IAAN,CAAWF,QAAX,CAAT,GAAgC,IAAhC,GAAuCH,MAAMM,GAAN,CAAU,UAAUC,IAAV,EAAgBC,EAAhB,EAAoB;AACxE,YAAIC,OAAOD,OAAOR,MAAMI,MAAN,GAAe,CAAjC;AACA,YAAIM,OAAOH,KAAKP,KAAL,IAAcO,KAAKP,KAAL,CAAWI,MAApC;AACA,YAAIO,UAAUnB,UAAUiB,OAAO,GAAP,GAAad,IAAI,GAAJ,CAAvB,IAAmC,GAAjD;;AAEA,eAAOH,UAAUiB,OAAOd,IAAI,GAAJ,CAAP,GAAkBA,IAAI,GAAJ,CAA5B,IAAwCA,IAAI,GAAJ,CAAxC,IAAoDe,OAAOf,IAAI,GAAJ,CAAP,GAAkBA,IAAI,GAAJ,CAAtE,IAAkF,GAAlF,GAAwFL,MAAMiB,IAAN,EAAYI,OAAZ,EAAqBlB,IAArB,EAA2BmB,KAA3B,CAAiCpB,OAAOY,MAAP,GAAgB,CAAjD,CAA/F;AACH,KAN6C,EAM3CC,IAN2C,CAMtC,EANsC,CAA9C;AAOH,CA3BD;AA4BA","file":"index.js","sourcesContent":["'use strict';\n\nmodule.exports = function archy(obj, prefix, opts) {\n    if (prefix === undefined) prefix = '';\n    if (!opts) opts = {};\n    let chr = function chr(s) {\n        let chars = {\n            '│': '|',\n            '└': '`',\n            '├': '+',\n            '─': '-',\n            '┬': '-'\n        };\n        return opts.unicode === false ? chars[s] : s;\n    };\n\n    if (typeof obj === 'string') obj = { label: obj };\n\n    let nodes = obj.nodes || [];\n    let lines = (obj.label || '').split('\\n');\n    let splitter = '\\n' + prefix + (nodes.length ? chr('│') : ' ') + ' ';\n\n    return prefix + lines.join(splitter) + '\\n' + nodes.map(function (node, ix) {\n        let last = ix === nodes.length - 1;\n        let more = node.nodes && node.nodes.length;\n        let prefix_ = prefix + (last ? ' ' : chr('│')) + ' ';\n\n        return prefix + (last ? chr('└') : chr('├')) + chr('─') + (more ? chr('┬') : chr('─')) + ' ' + archy(node, prefix_, opts).slice(prefix.length + 2);\n    }).join('');\n};\n//# sourceMappingURL=index.js.map"]}