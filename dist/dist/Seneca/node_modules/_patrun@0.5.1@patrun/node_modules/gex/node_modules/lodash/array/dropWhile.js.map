{"version":3,"sources":["../../../../../../../../../Seneca/node_modules/_patrun@0.5.1@patrun/node_modules/gex/node_modules/lodash/array/dropWhile.js"],"names":["baseCallback","require","baseWhile","dropWhile","array","predicate","thisArg","length","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,eAAeC,QAAQ,0BAAR,CAAnB;AAAA,IACIC,YAAYD,QAAQ,uBAAR,CADhB;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA,SAASE,SAAT,CAAmBC,KAAnB,EAA0BC,SAA1B,EAAqCC,OAArC,EAA8C;AAC1C,WAAOF,SAASA,MAAMG,MAAf,GAAwBL,UAAUE,KAAV,EAAiBJ,aAAaK,SAAb,EAAwBC,OAAxB,EAAiC,CAAjC,CAAjB,EAAsD,IAAtD,CAAxB,GAAsF,EAA7F;AACH;;AAEDE,OAAOC,OAAP,GAAiBN,SAAjB;AACA","file":"dropWhile.js","sourcesContent":["'use strict';\n\nlet baseCallback = require('../internal/baseCallback'),\n    baseWhile = require('../internal/baseWhile');\n\n/**\n * Creates a slice of `array` excluding elements dropped from the beginning.\n * Elements are dropped until `predicate` returns falsey. The predicate is\n * bound to `thisArg` and invoked with three arguments: (value, index, array).\n *\n * If a property name is provided for `predicate` the created `_.property`\n * style callback returns the property value of the given element.\n *\n * If a value is also provided for `thisArg` the created `_.matchesProperty`\n * style callback returns `true` for elements that have a matching property\n * value, else `false`.\n *\n * If an object is provided for `predicate` the created `_.matches` style\n * callback returns `true` for elements that have the properties of the given\n * object, else `false`.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {Array} array The array to query.\n * @param {Function|Object|string} [predicate=_.identity] The function invoked\n *  per iteration.\n * @param {*} [thisArg] The `this` binding of `predicate`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.dropWhile([1, 2, 3], function(n) {\n *   return n < 3;\n * });\n * // => [3]\n *\n * let users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * // using the `_.matches` callback shorthand\n * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n * // => ['fred', 'pebbles']\n *\n * // using the `_.matchesProperty` callback shorthand\n * _.pluck(_.dropWhile(users, 'active', false), 'user');\n * // => ['pebbles']\n *\n * // using the `_.property` callback shorthand\n * _.pluck(_.dropWhile(users, 'active'), 'user');\n * // => ['barney', 'fred', 'pebbles']\n */\nfunction dropWhile(array, predicate, thisArg) {\n    return array && array.length ? baseWhile(array, baseCallback(predicate, thisArg, 3), true) : [];\n}\n\nmodule.exports = dropWhile;\n//# sourceMappingURL=dropWhile.js.map"]}