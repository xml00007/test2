{"version":3,"sources":["../test3.js"],"names":["tasks","i","push","console","log","ReplyResult","message","result","Object","assign","data","code"],"mappingspBC,YAAQC,GAAR,CAAY,SAASH,CAArB;AACD,GAFD;;;AADF,KAAK,IAAIA,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;AAAA,QAAnBA,CAAmB;AAI3B;AACD;AACAD,MAAM,CAAN;AACAA,MAAM,CAAN;AACAA,MAAM,CAAN;AACAA,MAAM,CAAN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASK,WAAT,CAAqBC,OAArB,EAA2C;AAAA,MAAbC,MAAa,uEAAJ,EAAI;;AACzC,SAAOC,OAAOC,MAAP,CAAc,EAAd,EAAkBH,OAAlB,EAA2B,EAACC,cAAD,EAA3B,CAAP;AACD;;AAED,IAAMA,SAAS;AACbG,QAAM;AADO,CAAf;;AAIAP,QAAQC,GAAR,CAAYC,YAAY,EAACM,MAAM,GAAP,EAAYJ,QAAQ,CAApB,EAAZ,EAAoC,EAApC,CAAZ","file":"test3.js","sourcesContent":["// const a = [1, 2];\n// a.valueOf = function() {\n//   return '3';\n// };\n//\n// const b = [3, 4];\n// b.valueOf = function() {\n//   return 5;\n// };\n//\n// console.log(+a + b);\n//\n// const c = '3.14';\n// console.log(typeof (c - 0));\n//\n// const d = {\n//   a: '1',\n//   toString: function() {\n//     return this.a;\n//   },\n// };\n//\n// const e = {\n//   a: '2',\n//   toString: function() {\n//     return this.a;\n//   },\n// };\n//\n// console.log(e - d);\n// // console.log('222' - '21');\n// // console.log(true + true);\n// //\n// // console.log(!!42);\n// // console.log(!!{});\n// // console.log(!!'222');\n// // console.log(!!0);\n// // console.log(!!null);\n// // console.log(!!undefined);\n// // console.log(!!'');\n// //\n// // console.log(1 || null);\n// // console.log(null || '2');\n// // console.log(1 && undefined);\n// //\n// // console.log('' == null);\n// // console.log('' == undefined);\n// // console.log(undefined == null);\n// // console.log(null == undefined);\n// // console.log(null == false);\n// // console.log(null == '2');\n// //\n// // console.log('------------------------------------------------------');\n// // console.log(0 == false);\n// // console.log('0' == false);\n// // console.log('' == false);\n// // console.log('' == 0);\n// // console.log('' == []);\n// // console.log(0 == []);\n// //\n// // console.log(parseInt(''));\n// // console.log(typeof String(0));\n// //\n// // console.log('-----------------------------------------------------------');\n// // console.log(Boolean(1));\n// // console.log(Boolean(0));\n// // console.log(+new Date());\n// // console.log(new Date());\n// //\n// // console.log(~9);\n// // console.log(~-1);\n// //\n// // console.log(parseInt('ss2'));\n// //\n// // console.log(typeof (parseInt('ss2') + '4'));\n//\n// function aaa({a = 0, b}) {\n//   try {\n//     console.log(b);\n//     const c = {\n//       b: b,\n//       a,\n//     };\n//     console.log(c);\n//     cc(c);\n//\n//   } catch (err) {\n//     console.log(err instanceof Error);\n//   }\n// }\n//\n// function cc(data) {\n//   console.log(111111111);\n//   console.log(data);\n//   console.log(JSON.stringify(data));\n// }\n//\n// aaa({a: 1});\n\n// let a;\n// let b = 'b'\n//\n// console.log({a,b})\n\n// let a = {a: 1, b: undefined};\n// console.log(a);\n//\n// let b = a;\n// console.log(b);\n\nlet tasks = [];\n\nfor (let i = 0; i < 3; i++) {\n  tasks.push(function() {\n    console.log('>>> ' + i);\n  });\n}\n// tasks.forEach((item) => item());\ntasks[0]();\ntasks[1]();\ntasks[2]();\ntasks[2]();\n\n// for (let i = 0; i < 3; i++) {\n//   setTimeout(function() {\n//     console.log('>>> ' + i);\n//   }, 1000);\n// }\n//\n// for (let i = 0; i < 5; i++) {\n//   let i = 'abc';\n//   console.log(i);\n// }\n\nfunction ReplyResult(message, result = {}) {\n  return Object.assign({}, message, {result});\n}\n\nconst result = {\n  data: 200,\n};\n\nconsole.log(ReplyResult({code: 200, result: 1}, {}));\n\n"]}