{"version":3,"sources":["../../hoek/cloneWithShallow.js"],"names":["Hoek","require","nestedObj","w","x","a","b","c","Date","y","z","copy","cloneWithShallow","console","log"],"mappings":";;AAAA,IAAMA,OAAOC,QAAQ,MAAR,CAAb;;AAEA,IAAIC,YAAY;AACdC,KAAG,eADW;AAEdC,KAAG;AACDC,OAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADF;AAEDC,OAAG,MAFF;AAGDC,OAAG,IAAIC,IAAJ;AAHF,GAFW;AAOdC,KAAG,GAPW;AAQdC,KAAG,IAAIF,IAAJ;AARW,CAAhB;;AAWA,IAAIG,OAAOX,KAAKY,gBAAL,CAAsBV,SAAtB,EAAiC,CAAC,GAAD,CAAjC,CAAX;;AAEAS,KAAKP,CAAL,CAAOE,CAAP,GAAW,GAAX;;AAEAO,QAAQC,GAAR,CAAYH,KAAKF,CAAjB,E,CAAqB;AACrBI,QAAQC,GAAR,CAAYZ,UAAUE,CAAV,CAAYE,CAAxB,E,CAA4B;AAC5BO,QAAQC,GAAR,CAAYH,KAAKP,CAAL,CAAOE,CAAnB,E,CAAuB","file":"cloneWithShallow.js","sourcesContent":["const Hoek = require('hoek');\n\nlet nestedObj = {\n  w: /^something$/ig,\n  x: {\n    a: [1, 2, 3],\n    b: 123456,\n    c: new Date(),\n  },\n  y: 'y',\n  z: new Date(),\n};\n\nlet copy = Hoek.cloneWithShallow(nestedObj, ['x']);\n\ncopy.x.b = 100;\n\nconsole.log(copy.y); // results in 'y'\nconsole.log(nestedObj.x.b); // results in 100\nconsole.log(copy.x.b); // results in 100\n"]}