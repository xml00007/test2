{"version":3,"sources":["../../canvas/letian.js"],"names":["deg2rad","Math","PI","Vector2","_x","_y","x","y","drawShap","lines","offset","radian","centerLine","gear","gearHeight","center","canvas","document","getElementById","getContext","ctx","points","a","ang","cos","sin","push","halfx","halfy","halfx1","halfy1","halfx2","halfy2","beginPath","b","length","s","e","moveTo","lineTo","stroke"],"mappings":";;;;AAAA,IAAMA,UAAUC,KAAKC,EAAL,GAAU,GAA1B;;IACMC,O,GACJ,mBAA4B;AAAA,MAAhBC,EAAgB,uEAAX,CAAW;;AAAA,MAARC,EAAQ,uEAAH,CAAG;;AAAA;;AAC1B,OAAKC,CAAL,GAASF,EAAT;AACA,OAAKG,CAAL,GAASF,EAAT;AACD,C;;AAGH;AACA;;;AACA,SAASG,QAAT,GAA8H;AAAA,MAA5GC,KAA4G,uEAApG,EAAoG;AAAA,MAAhGC,MAAgG,uEAAvF,CAAuF;AAAA,MAApFC,MAAoF,uEAA3E,GAA2E;AAAA,MAAtEC,UAAsE,uEAAzD,KAAyD;AAAA,MAAlDC,IAAkD,uEAA3C,CAA2C;AAAA,MAAxCC,UAAwC,uEAA3B,EAA2B;AAAA,MAAvBC,MAAuB,uEAAhB,EAACT,GAAE,GAAH,EAAQC,GAAE,GAAV,EAAgB;;AAC5H,MAAIS,SAASC,SAASC,cAAT,CAAwB,OAAxB,CAAb;AACA,MAAIF,OAAOG,UAAX,EAAuB;AACrB,QAAIC,MAAMJ,OAAOG,UAAP,CAAkB,IAAlB,CAAV;AACA;AACA,QAAIE,SAAS,EAAb;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIb,KAApB,EAA2Ba,GAA3B,EAAgC;AAC9B,UAAIC,MAAMD,KAAK,MAAMb,KAAN,GAAcT,OAAnB,CAAV;AACAuB,aAAOb,SAASV,OAAhB,CAF8B,CAEF;AAC5B,UAAIM,IAAIL,KAAKuB,GAAL,CAASD,GAAT,IAAgBZ,MAAhB,GAAyBI,OAAOT,CAAxC,CAH8B,CAGe;AAC7C,UAAIC,IAAIN,KAAKwB,GAAL,CAASF,GAAT,IAAgBZ,MAAhB,GAAyBI,OAAOR,CAAxC,CAJ8B,CAIe;AAC7Cc,aAAOK,IAAP,CAAY;AACVpB,YADU;AAEVC;AAFU,OAAZ;AAIA;AACA,UAAIM,QAAQS,IAAI,CAAJ,IAAS,CAArB,EAAwB;AACtB;AACA,YAAIT,QAAQ,CAAZ,EAAe;AACb,cAAIc,QAAQ1B,KAAKuB,GAAL,CAASD,MAAO,MAAMd,KAAP,GAAgBT,OAA/B,KAA2CW,SAASG,UAApD,IAAkEC,OAAOT,CAArF;AACA,cAAIsB,QAAQ3B,KAAKwB,GAAL,CAASF,MAAO,MAAMd,KAAP,GAAgBT,OAA/B,KAA2CW,SAASG,UAApD,IAAkEC,OAAOR,CAArF;AACAc,iBAAOK,IAAP,CAAY,EAACpB,GAAGqB,KAAJ,EAAUpB,GAAGqB,KAAb,EAAZ;AACD;AACD;AACA,YAAIf,QAAQ,CAAZ,EAAe;AACb,cAAIgB,SAAS5B,KAAKuB,GAAL,CAASD,MAAM,IAAIvB,OAAnB,KAA+BW,SAAS,EAAxC,IAA8CI,OAAOT,CAAlE;AACA,cAAIwB,SAAS7B,KAAKwB,GAAL,CAASF,MAAM,IAAIvB,OAAnB,KAA+BW,SAAS,EAAxC,IAA8CI,OAAOR,CAAlE;AACAc,iBAAOK,IAAP,CAAY;AACVpB,eAAGuB,MADO;AAEVtB,eAAGuB;AAFO,WAAZ;AAIA,cAAIC,SAAS9B,KAAKuB,GAAL,CAASD,MAAM,CAAC,MAAMd,KAAN,GAAc,CAAf,IAAoBT,OAAnC,KAA+CW,SAASG,UAAxD,IAAsEC,OAAOT,CAA1F;AACA,cAAI0B,SAAS/B,KAAKwB,GAAL,CAASF,MAAM,CAAC,MAAMd,KAAN,GAAc,CAAf,IAAoBT,OAAnC,KAA+CW,SAASG,UAAxD,IAAsEC,OAAOR,CAA1F;AACAc,iBAAOK,IAAP,CAAY;AACVpB,eAAGyB,MADO;AAEVxB,eAAGyB;AAFO,WAAZ;AAID;AAEF;AAEF;AACDZ,QAAIa,SAAJ;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIb,OAAOc,MAA3B,EAAmCD,GAAnC,EAAwC;AACtC,UAAIE,IAAIf,OAAOa,CAAP,CAAR;AACA,UAAIG,IAAIhB,OAAQa,IAAI,CAAJ,IAASb,OAAOc,MAAjB,GAA2B,CAA3B,GAA+BD,IAAI,CAA1C,CAAR;AACAd,UAAIkB,MAAJ,CAAWF,EAAE9B,CAAb,EAAgB8B,EAAE7B,CAAlB;AACAa,UAAImB,MAAJ,CAAWF,EAAE/B,CAAb,EAAgB+B,EAAE9B,CAAlB;;AAEA,UAAIK,UAAJ,CAAe,sBAAf,EAAwC;AACtC;AACAQ,cAAIkB,MAAJ,CAAWD,EAAE/B,CAAb,EAAgB+B,EAAE9B,CAAlB;AACA;AACAa,cAAIkB,MAAJ,CAAWvB,OAAOT,CAAlB,EAAqBS,OAAOR,CAA5B;AACAa,cAAImB,MAAJ,CAAWF,EAAE/B,CAAb,EAAgB+B,EAAE9B,CAAlB;AACD;AAEF;AACDa,QAAIoB,MAAJ;AACD;AACF;;AAGD,CAAC,YAAW;AACV;AACAhC,WAAS,CAAT,EAAY,CAAZ,EAAe,EAAf,EAAmB,KAAnB,EAA0B,CAA1B,EAA6B,GAA7B,EAAkC,EAACF,GAAG,EAAJ,EAAQC,GAAE,EAAV,EAAlC;AACAC,WAAS,CAAT,EAAY,CAAZ,EAAe,EAAf,EAAmB,KAAnB,EAA0B,CAA1B,EAA6B,GAA7B,EAAkC,EAACF,GAAG,EAAJ,EAAQC,GAAE,GAAV,EAAlC;AACAC,WAAS,CAAT,EAAY,CAAZ,EAAe,EAAf,EAAmB,KAAnB,EAA0B,CAA1B,EAA6B,GAA7B,EAAkC,EAACF,GAAG,EAAJ,EAAQC,GAAE,GAAV,EAAlC;AACAC,WAAS,CAAT,EAAY,CAAZ,EAAe,EAAf,EAAmB,KAAnB,EAA0B,CAA1B,EAA6B,GAA7B,EAAkC,EAACF,GAAG,EAAJ,EAAQC,GAAE,GAAV,EAAlC;AACAC,WAAS,EAAT,EAAa,CAAb,EAAgB,EAAhB,EAAoB,KAApB,EAA2B,CAA3B,EAA8B,GAA9B,EAAmC,EAACF,GAAG,EAAJ,EAAQC,GAAE,GAAV,EAAnC,EANU,CAM2C;AACrDC,WAAS,EAAT,EAAa,CAAb,EAAgB,EAAhB,EAAoB,KAApB,EAA2B,CAA3B,EAA8B,CAAC,EAA/B,EAAmC,EAACF,GAAG,EAAJ,EAAQC,GAAE,GAAV,EAAnC,EAPU,CAO2C;AACrD;AACAC,WAAS,EAAT,EAAa,CAAb,EAAgB,EAAhB,EAAoB,KAApB,EAA2B,CAA3B,EAA8B,EAA9B,EAAkC,EAACF,GAAG,GAAJ,EAASC,GAAE,GAAX,EAAlC,EATU,CAS2C;AACrDC,WAAS,EAAT,EAAa,CAAb,EAAgB,EAAhB,EAAoB,IAApB,EAA0B,CAA1B,EAA6B,EAA7B,EAAiC,EAACF,GAAG,GAAJ,EAASC,GAAE,GAAX,EAAjC;AACAC,WAAS,EAAT,EAAa,CAAb,EAAgB,EAAhB,EAAoB,KAApB,EAA2B,CAA3B,EAA8B,CAAC,EAA/B,EAAmC,EAACF,GAAG,GAAJ,EAASC,GAAE,GAAX,EAAnC;AACAC,WAAS,EAAT,EAAa,CAAb,EAAgB,EAAhB,EAAoB,KAApB,EAA2B,CAA3B,EAA8B,CAAC,EAA/B,EAAmC,EAACF,GAAG,GAAJ,EAASC,GAAE,GAAX,EAAnC;AACAC,WAAS,EAAT,EAAa,CAAb,EAAgB,EAAhB,EAAoB,KAApB,EAA2B,CAA3B,EAA8B,CAAC,EAA/B,EAAmC,EAACF,GAAG,GAAJ,EAASC,GAAE,GAAX,EAAnC;AACA;AACAC,WAAS,EAAT,EAAa,CAAb,EAAgB,EAAhB,EAAoB,KAApB,EAA2B,CAA3B,EAA8B,EAA9B,EAAkC,EAACF,GAAG,GAAJ,EAASC,GAAE,GAAX,EAAlC;AACAC,WAAS,EAAT,EAAa,CAAb,EAAgB,EAAhB,EAAoB,KAApB,EAA2B,CAA3B,EAA8B,EAA9B,EAAkC,EAACF,GAAG,GAAJ,EAASC,GAAE,GAAX,EAAlC;;AAEAC,WAAS,CAAT,EAAY,CAAZ,EAAe,GAAf,EAAoB,IAApB,EAA0B,CAA1B,EAA6B,EAA7B,EAAiC,EAACF,GAAG,GAAJ,EAASC,GAAE,GAAX,EAAjC;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAzBD;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"letian.js","sourcesContent":["const deg2rad = Math.PI / 180;\nclass Vector2 {\n  constructor(_x = 0, _y = 0) {\n    this.x = _x;\n    this.y = _y;\n  }\n}\n\n// lines  平分的份数\n// gear 是否有齿轮  1 有 0 没有  2 。。\nfunction drawShap(lines = 36, offset = 0, radian = 100, centerLine = false, gear = 0, gearHeight = 20, center={x:250, y:250}) {\n  let canvas = document.getElementById(\"draw1\");\n  if (canvas.getContext) {\n    var ctx = canvas.getContext(\"2d\");\n    //ctx.clearRect(0, 0, 1000, 500);\n    var points = [];\n    for (let a = 0; a < lines; a++) {\n      let ang = a * (360 / lines * deg2rad);\n      ang += offset * deg2rad;    //  无效\n      let x = Math.cos(ang) * radian + center.x;   //  获取x 坐标\n      let y = Math.sin(ang) * radian + center.y;   //  获取y 坐标   算出散布在圆上 以radian为半径，center为圆心 总数为lines的点位置\n      points.push({\n        x,\n        y\n      })\n      // 齿轮\n      if (gear && a % 2 == 0) {\n        // gearHeight为正数 则画出齿轮凸起部分 否则为凹槽部分\n        if (gear == 1) {\n          let halfx = Math.cos(ang + (180 / lines) * deg2rad) * (radian + gearHeight) + center.x;\n          let halfy = Math.sin(ang + (180 / lines) * deg2rad) * (radian + gearHeight) + center.y;\n          points.push({x: halfx,y: halfy})\n        }\n        //  画出齿轮凹槽部分\n        if (gear == 2) {\n          let halfx1 = Math.cos(ang - 1 * deg2rad) * (radian + 50) + center.x;\n          let halfy1 = Math.sin(ang - 1 * deg2rad) * (radian + 50) + center.y;\n          points.push({\n            x: halfx1,\n            y: halfy1\n          })\n          let halfx2 = Math.cos(ang + (360 / lines + 1) * deg2rad) * (radian + gearHeight) + center.x;\n          let halfy2 = Math.sin(ang + (360 / lines + 1) * deg2rad) * (radian + gearHeight) + center.y;\n          points.push({\n            x: halfx2,\n            y: halfy2\n          })\n        }\n\n      }\n\n    }\n    ctx.beginPath();\n    for (let b = 0; b < points.length; b++) {\n      let s = points[b];\n      let e = points[(b + 1 >= points.length) ? 0 : b + 1];\n      ctx.moveTo(s.x, s.y);\n      ctx.lineTo(e.x, e.y);\n\n      if (centerLine /*  && (b % 2 == 0) */ ) {\n        //斜线\n        ctx.moveTo(e.x, e.y);\n        //中心线\n        ctx.moveTo(center.x, center.y);\n        ctx.lineTo(e.x, e.y);\n      }\n\n    }\n    ctx.stroke();\n  }\n}\n\n\n(function() {\n  // 基本多边形\n  drawShap(3, 0, 50, false, 0, 100, {x: 50, y:50})\n  drawShap(4, 0, 50, false, 0, 100, {x: 50, y:150})\n  drawShap(5, 0, 50, false, 0, 100, {x: 50, y:250})\n  drawShap(6, 0, 50, false, 0, 100, {x: 50, y:350})\n  drawShap(16, 0, 50, false, 0, 100, {x: 50, y:450})   //  前五个gear=0 只画出相应的点数 最后连接起来\n  drawShap(36, 0, 50, false, 1, -10, {x: 50, y:580})   //  总共36份 gear=1  gearHeight=-10 画出均分的18个凹槽点 连接成为齿轮\n  // 齿轮\n  drawShap(24, 0, 50, false, 1, 10, {x: 200, y:100})   // 总共24份\n  drawShap(24, 0, 50, true, 1, 10, {x: 200, y:260})\n  drawShap(24, 0, 50, false, 1, -10, {x: 200, y:460})\n  drawShap(24, 0, 50, false, 1, -10, {x: 200, y:620})\n  drawShap(24, 0, 50, false, 1, -10, {x: 200, y:620})\n  // 双边齿轮\n  drawShap(36, 0, 50, false, 2, 50, {x: 400, y:100})\n  drawShap(36, 0, 10, false, 2, 60, {x: 400, y:400})\n\n  drawShap(8, 0, 100, true, 0, 50, {x: 400, y:700})\n  // Sawtooth();\n  // let i = 0;\n  // setInterval(function() {\n  //   ++i;\n  //   drawShap(16, i * 1, 100, true, 0, 10)\n  // }, 1000 / 30)\n})()\n\n\n\n//   原理： 方法的整体是计算出所有的点，再按顺序连接为线，最终完成图形\n//  如第六个 drawShap(36, 0, 50, false, 1, -10, {x: 50, y:580})\n//  先找到第一个位于圆上的点 放入数组\n//  找到第一个位于凹槽的点 放入数组\n//  找到第二个圆上的点  放入数组\n//  ...\n//  最终找到36个位于圆上的点和18个凹槽点 按顺序连接成为一个齿轮\n\n// lines 边长数\n//  offset 暂没用到\n//  radian 半径\n//  centerLine 是否有中心线\n// gear 是否带有凸起或者凹槽\n// gearHeight 为正则为凸起 为负则为凹槽\n//  center 图形中心点位置"]}