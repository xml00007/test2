{"version":3,"sources":["../../Hapi/test3.js"],"names":["Hapi","require","Good","server","Server","route","method","path","handler","request","reply","encodeURIComponent","params","name","register","options","reporters","console","module","args","response","log","err","start","info","uri"],"mappings":"AAAA;;AAEA,IAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;;AAEA,IAAME,SAAS,IAAIH,KAAKI,MAAT,EAAf;AACA;;AAEAD,OAAOE,KAAP,CAAa;AACTC,YAAQ,KADC;AAETC,UAAM,GAFG;AAGTC,aAAS,iBAAUC,OAAV,EAAmBC,KAAnB,EAA0B;AAC/BA,cAAM,eAAN;AACH;AALQ,CAAb;;AAQAP,OAAOE,KAAP,CAAa;AACTC,YAAQ,KADC;AAETC,UAAM,SAFG;AAGTC,aAAS,iBAAUC,OAAV,EAAmBC,KAAnB,EAA0B;AAC/BA,cAAM,YAAYC,mBAAmBF,QAAQG,MAAR,CAAeC,IAAlC,CAAZ,GAAsD,GAA5D;AACH;AALQ,CAAb;;AAQAV,OAAOW,QAAP,CAAgB;AACZA,cAAUZ,IADE;AAEZa,aAAS;AACLC,mBAAW;AACPC,qBAAS,CAAC;AACNC,wBAAQ,cADF;AAENL,sBAAM,SAFA;AAGNM,sBAAM,CAAC;AACHC,8BAAU,GADP;AAEHC,yBAAK;AAFF,iBAAD;AAHA,aAAD,EAON;AACCH,wBAAQ;AADT,aAPM,EASN,QATM;AADF;AADN;AAFG,CAAhB,EAgBG,UAACI,GAAD,EAAS;;AAER,QAAIA,GAAJ,EAAS;AACL,cAAMA,GAAN,CADK,CACM;AACd;;AAEDnB,WAAOoB,KAAP,CAAa,UAACD,GAAD,EAAS;;AAElB,YAAIA,GAAJ,EAAS;AACL,kBAAMA,GAAN;AACH;AACDnB,eAAOkB,GAAP,CAAW,MAAX,EAAmB,wBAAwBlB,OAAOqB,IAAP,CAAYC,GAAvD;AACH,KAND;AAOH,CA7BD","file":"test3.js","sourcesContent":["'use strict';\n\nconst Hapi = require('hapi');\nconst Good = require('good');\n\nconst server = new Hapi.Server();\n// server.connection({ port: 3000, host: 'localhost' });\n\nserver.route({\n    method: 'GET',\n    path: '/',\n    handler: function (request, reply) {\n        reply('Hello, world!');\n    }\n});\n\nserver.route({\n    method: 'GET',\n    path: '/{name}',\n    handler: function (request, reply) {\n        reply('Hello, ' + encodeURIComponent(request.params.name) + '!');\n    }\n});\n\nserver.register({\n    register: Good,\n    options: {\n        reporters: {\n            console: [{\n                module: 'good-squeeze',\n                name: 'Squeeze',\n                args: [{\n                    response: '*',\n                    log: '*'\n                }]\n            }, {\n                module: 'good-console'\n            }, 'stdout']\n        }\n    }\n}, (err) => {\n\n    if (err) {\n        throw err; // something bad happened loading the plugin\n    }\n\n    server.start((err) => {\n\n        if (err) {\n            throw err;\n        }\n        server.log('info', 'Server running at: ' + server.info.uri);\n    });\n});"]}