{"version":3,"sources":["../../Hapi/route.js"],"names":["controller","require","_","debug","routeConfig","method","path","config","auth","description","notes","validate","handler","hello","routes","map","item","merge","tags","name"],"mappings":"AAAA;AACA;;;AAGA;;;;;AACA,IAAMA,aAAaC,QAAQ,cAAR,CAAnB;AACA,IAAMC,IAAID,QAAQ,QAAR,CAAV;AACA,IAAME,QAAQF,QAAQ,gBAAR,EAA0B,YAA1B,CAAd;;AAEA,IAAMG,cAAc,CAChB;AACIC,YAAQ,KADZ;AAEIC,UAAM,QAFV;AAGIC,YAAQ;AACJC,cAAM,KADF;AAEJC,qBAAa,aAFT;AAGJC,eAAO,aAHH;AAIJC,kBAAU;AACN;AACA;AACA;AAHM;AAJN,KAHZ;AAaIC,aAASZ,WAAWa;AAbxB,CADgB,CAApB;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,IAAMC,0BAASV,YAAYW,GAAZ,CAAgB,UAACC,IAAD,EAAU;AAC5CA,SAAKT,MAAL,GAAcL,EAAEe,KAAF,CAAQ,EAAR,EAAYD,KAAKT,MAAjB,EAAyB;AACnCW,cAAM,CAAC,KAAD,EAAQ,MAAR,CAD6B;AAEnCT,qBAAaO,KAAKJ,OAAL,CAAaO,IAAb,GAAoB,KAApB,GAA4BH,KAAKT,MAAL,CAAYE;AAFlB,KAAzB,CAAd;AAIA;AACAO,SAAKV,IAAL,GAAY,KAAKU,KAAKV,IAAtB;AACA,WAAOU,IAAP;AACH,CARqB,CAAf","file":"route.js","sourcesContent":["'use strict';\n/**\n * 路由配置\n */\n// const Joi = require('@nirvana/nirvana-sdk/libs/joi');// 数据验证库\nconst controller = require('./controller');\nconst _ = require('lodash');\nconst debug = require('nirvana-logger')('app:router');\n\nconst routeConfig = [\n    {\n        method: 'GET',\n        path: '/hello',\n        config: {\n            auth: false,\n            description: '按手机号码查询用户资料',\n            notes: '按手机号码查询用户资料',\n            validate: {\n                // payload: Joi.object({\n                //     mobiles: Joi.array().items(Joi.string().required().example('13300008888'))\n                // }).unknown()\n            }\n        },\n        handler: controller.hello,\n    },\n];\n\n// export function register(server, pathPrefix = '') {\n//     // swagger 配置项 description 显示 handler 函数名称\n//     const _routeConfigWithMethod = routeConfig.map((item) => {\n//         item.config = _.merge({}, item.config, {\n//             tags: ['api', 'user'],\n//             description: item.handler.name + '() ' + item.config.description,\n//         });\n//         // 路径前辍\n//         item.path = pathPrefix + item.path;\n//         return item;\n//     });\n//     _routeConfigWithMethod.forEach((route) => server.route(route));\n// }\n\nexport const routes = routeConfig.map((item) => {\n    item.config = _.merge({}, item.config, {\n        tags: ['api', 'user'],\n        description: item.handler.name + '() ' + item.config.description,\n    });\n    // 路径前辍\n    item.path = '' + item.path;\n    return item;\n});\n"]}